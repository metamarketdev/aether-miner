//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-30188945
// Cuda compilation tools, release 11.4, V11.4.100
// Based on NVVM 7.0.1
//

.version 7.4
.target sm_52
.address_size 64

	// .globl	_Z8gpu_minePyy
.const .align 8 .b8 d_mid[200];
.const .align 8 .u64 d_target;
.const .align 4 .u32 threads;
.const .align 1 .b8 d_HBoptimizations[8];

.visible .entry _Z8gpu_minePyy(
	.param .u64 _Z8gpu_minePyy_param_0,
	.param .u64 _Z8gpu_minePyy_param_1
)
.maxntid 1024, 1, 1
.minnctapersm 1
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<1316>;
	.reg .b64 	%rd<7294>;

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:459 void gpu_mine( uint64_t* solution, uint64_t cnt )
	.loc	1 459 0
$L__func_begin0:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:459 void gpu_mine( uint64_t* solution, uint64_t cnt )
	.loc	1 459 0


	ld.param.u64 	%rd7271, [_Z8gpu_minePyy_param_1];
$L__tmp0:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:461   uint64_t thread = blockDim.x * blockIdx.x + threadIdx.x;
	.loc	1 461 19
	mov.u32 	%r336, %ntid.x;
	mov.u32 	%r337, %ctaid.x;
	mov.u32 	%r338, %tid.x;
	mad.lo.s32 	%r339, %r336, %r337, %r338;
	cvt.u64.u32 	%rd7272, %r339;

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:462   uint64_t nonce{ cnt + thread };
	.loc	1 462 17
	add.s64 	%rd94, %rd7272, %rd7271;
	mov.u64 	%rd7260, 0;
$L__tmp1:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:473       passingMid[i] = d_mid[i];
	.loc	1 473 7
	ld.const.u64 	%rd10, [d_mid];
	ld.const.u64 	%rd8, [d_mid+8];
	ld.const.u64 	%rd7273, [d_mid+16];
	ld.const.u64 	%rd19, [d_mid+24];
	ld.const.u64 	%rd7274, [d_mid+32];
	ld.const.u64 	%rd32, [d_mid+40];
	ld.const.u64 	%rd7275, [d_mid+48];
	ld.const.u64 	%rd37, [d_mid+56];
	ld.const.u64 	%rd41, [d_mid+64];
	ld.const.u64 	%rd7276, [d_mid+72];
	ld.const.u64 	%rd52, [d_mid+80];
	ld.const.u64 	%rd7277, [d_mid+88];
	ld.const.u64 	%rd57, [d_mid+96];
	ld.const.u64 	%rd7278, [d_mid+104];
	ld.const.u64 	%rd65, [d_mid+112];
	ld.const.u64 	%rd7279, [d_mid+120];
	ld.const.u64 	%rd74, [d_mid+128];
	ld.const.u64 	%rd81, [d_mid+136];
	ld.const.u64 	%rd7280, [d_mid+144];
	ld.const.u64 	%rd89, [d_mid+152];
	ld.const.u64 	%rd7281, [d_mid+160];
	ld.const.u64 	%rd7282, [d_mid+168];
	ld.const.u64 	%rd7283, [d_mid+176];
	ld.const.u64 	%rd107, [d_mid+184];
	ld.const.u64 	%rd111, [d_mid+192];
$L__tmp2:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:475   if( keccak(nonce, thread, passingMid, passingOptimizations) )
	.loc	1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:285   C[0] = i_mid[ 2] ^ ROTR64asm(nonce, 20);
	.loc	1 285 22, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 285 22
	mov.u32 	%r335, 20;
	mov.u64 	%rd3, %rd94;
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd3;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd3, {scr,lo};}
	// end inline asm
$L__tmp3:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:285   C[0] = i_mid[ 2] ^ ROTR64asm(nonce, 20);
	.loc	1 285 22, function_name $L__info_string0, inlined_at 1 475 7
	xor.b64  	%rd15, %rd3, %rd7273;
$L__tmp4:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:286   C[1] = i_mid[ 4] ^ ROTL64asm(nonce, 14);
	.loc	1 286 22, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 286 22
	mov.u32 	%r328, 14;
	mov.u64 	%rd5, %rd94;
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r328;mov.b64 {hi,lo}, %rd5;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd5, {scr,lo};}
	// end inline asm
$L__tmp5:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:286   C[1] = i_mid[ 4] ^ ROTL64asm(nonce, 14);
	.loc	1 286 22, function_name $L__info_string0, inlined_at 1 475 7
	xor.b64  	%rd23, %rd5, %rd7274;
$L__tmp6:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:288   state[ 0] = lop3_0xD2( i_mid[ 0], i_mid[ 1], C[ 0] );   //^ 0x0000000000000001;
	.loc	1 288 15, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 288 15
	mov.u64 	%rd7, %rd10;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd7;  mov.b64 {bh,bl}, %rd8;  mov.b64 {ch,cl}, %rd15;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd7, {ah,al};}
	// end inline asm
$L__tmp7:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:293     state[0] = state[0] ^ 0x0000000000000001;     // was RC[0]
	.loc	1 293 5, function_name $L__info_string0, inlined_at 1 475 7
	xor.b64  	%rd176, %rd7, 1;
$L__tmp8:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:296   state[ 1] = lop3_0xD2( i_mid[ 1], C[ 0], i_mid[ 3] );
	.loc	1 296 15, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 296 15
	mov.u64 	%rd11, %rd8;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd11;  mov.b64 {bh,bl}, %rd15;  mov.b64 {ch,cl}, %rd19;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd11, {ah,al};}
	// end inline asm
$L__tmp9:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:297   state[ 2] = lop3_0xD2( C[ 0], i_mid[ 3], C[ 1] );
	.loc	1 297 15, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 297 15
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd15;  mov.b64 {bh,bl}, %rd19;  mov.b64 {ch,cl}, %rd23;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd15, {ah,al};}
	// end inline asm
$L__tmp10:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:298   state[ 3] = lop3_0xD2( i_mid[ 3], C[ 1], i_mid[ 0] );
	.loc	1 298 15, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 298 15
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd19;  mov.b64 {bh,bl}, %rd23;  mov.b64 {ch,cl}, %rd10;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd19, {ah,al};}
	// end inline asm
$L__tmp11:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:299   state[ 4] = lop3_0xD2( C[ 1], i_mid[ 0], i_mid[ 1] );
	.loc	1 299 15, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 299 15
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd23;  mov.b64 {bh,bl}, %rd10;  mov.b64 {ch,cl}, %rd8;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd23, {ah,al};}
	// end inline asm
$L__tmp12:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:301   C[0] = i_mid[ 6] ^ ROTL64asm(nonce, 20);          // nonce*1048576;
	.loc	1 301 22, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 301 22
	mov.u64 	%rd27, %rd94;
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd27;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd27, {scr,lo};}
	// end inline asm
$L__tmp13:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:301   C[0] = i_mid[ 6] ^ ROTL64asm(nonce, 20);          // nonce*1048576;
	.loc	1 301 22, function_name $L__info_string0, inlined_at 1 475 7
	xor.b64  	%rd47, %rd27, %rd7275;

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:302   C[1] = i_mid[ 9] ^ ROTR64(nonce, 2);
	.loc	1 302 3, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r340,%dummy}, %rd94;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r341}, %rd94;
	}
	shf.r.wrap.b32 	%r342, %r341, %r340, 2;
	shf.r.wrap.b32 	%r343, %r340, %r341, 2;
	mov.b64 	%rd7284, {%r343, %r342};
	xor.b64  	%rd45, %rd7276, %rd7284;
$L__tmp14:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:303   state[ 5] = lop3_0xD2( i_mid[ 5], C[ 0], i_mid[7] );
	.loc	1 303 15, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 303 15
	mov.u64 	%rd29, %rd32;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd29;  mov.b64 {bh,bl}, %rd47;  mov.b64 {ch,cl}, %rd37;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd29, {ah,al};}
	// end inline asm
$L__tmp15:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:304   state[ 6] = lop3_0xD2( C[0], i_mid[ 7], i_mid[8] );
	.loc	1 304 15, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 304 15
	mov.u64 	%rd33, %rd47;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd33;  mov.b64 {bh,bl}, %rd37;  mov.b64 {ch,cl}, %rd41;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd33, {ah,al};}
	// end inline asm
$L__tmp16:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:305   state[ 7] = lop3_0xD2( i_mid[ 7], i_mid[ 8], C[1] );
	.loc	1 305 15, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 305 15
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd37;  mov.b64 {bh,bl}, %rd41;  mov.b64 {ch,cl}, %rd45;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd37, {ah,al};}
	// end inline asm
$L__tmp17:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:306   state[ 8] = lop3_0xD2( i_mid[ 8], C[1], i_mid[5] );
	.loc	1 306 15, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 306 15
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd41;  mov.b64 {bh,bl}, %rd45;  mov.b64 {ch,cl}, %rd32;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd41, {ah,al};}
	// end inline asm
$L__tmp18:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:307   state[ 9] = lop3_0xD2( C[1], i_mid[ 5], C[0] );
	.loc	1 307 15, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 307 15
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd45;  mov.b64 {bh,bl}, %rd32;  mov.b64 {ch,cl}, %rd47;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd45, {ah,al};}
	// end inline asm
$L__tmp19:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:310   scratch = nonce*128;
	.loc	1 310 3, function_name $L__info_string0, inlined_at 1 475 7
	shl.b64 	%rd7285, %rd94, 7;

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:311   C[0] = i_mid[11] ^ scratch;                    // ROTL by 7
	.loc	1 311 3, function_name $L__info_string0, inlined_at 1 475 7
	xor.b64  	%rd67, %rd7277, %rd7285;

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:312   C[1] = i_mid[13] ^ scratch*2;                  // ROTL by 8
	.loc	1 312 3, function_name $L__info_string0, inlined_at 1 475 7
	shl.b64 	%rd7286, %rd94, 8;
	xor.b64  	%rd61, %rd7278, %rd7286;
$L__tmp20:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:313   state[10] = lop3_0xD2( i_mid[10], C[0], i_mid[12] );
	.loc	1 313 15, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 313 15
	mov.u64 	%rd49, %rd52;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd49;  mov.b64 {bh,bl}, %rd67;  mov.b64 {ch,cl}, %rd57;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd49, {ah,al};}
	// end inline asm
$L__tmp21:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:314   state[11] = lop3_0xD2( C[0], i_mid[12], C[1] );
	.loc	1 314 15, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 314 15
	mov.u64 	%rd53, %rd67;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd53;  mov.b64 {bh,bl}, %rd57;  mov.b64 {ch,cl}, %rd61;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd53, {ah,al};}
	// end inline asm
$L__tmp22:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:315   state[12] = lop3_0xD2( i_mid[12], C[1], i_mid[14] );
	.loc	1 315 15, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 315 15
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd57;  mov.b64 {bh,bl}, %rd61;  mov.b64 {ch,cl}, %rd65;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd57, {ah,al};}
	// end inline asm
$L__tmp23:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:316   state[13] = lop3_0xD2( C[1], i_mid[14], i_mid[10] );
	.loc	1 316 15, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 316 15
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd61;  mov.b64 {bh,bl}, %rd65;  mov.b64 {ch,cl}, %rd52;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd61, {ah,al};}
	// end inline asm
$L__tmp24:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:317   state[14] = lop3_0xD2( i_mid[14], i_mid[10], C[0] );
	.loc	1 317 15, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 317 15
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd65;  mov.b64 {bh,bl}, %rd52;  mov.b64 {ch,cl}, %rd67;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd65, {ah,al};}
	// end inline asm
$L__tmp25:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:319   C[0] = i_mid[15] ^ ROTL64asm(nonce, 27);   //nonce*134217728;
	.loc	1 319 22, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 319 22
	mov.u32 	%r4, 27;
	mov.u64 	%rd69, %rd94;
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r4;mov.b64 {hi,lo}, %rd69;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd69, {scr,lo};}
	// end inline asm
$L__tmp26:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:319   C[0] = i_mid[15] ^ ROTL64asm(nonce, 27);   //nonce*134217728;
	.loc	1 319 22, function_name $L__info_string0, inlined_at 1 475 7
	xor.b64  	%rd90, %rd69, %rd7279;
$L__tmp27:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:320   C[1] = i_mid[18] ^ ROTLby16 (nonce);
	.loc	1 320 22, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:155     asm ( "{"
	.loc	1 155 5, function_name $L__info_string4, inlined_at 1 320 22
	mov.u64 	%rd71, %rd94;
	// begin inline asm
	{   .reg .b32 hi, lo, scr;   mov.b64 {hi,lo}, %rd71;   prmt.b32 scr, hi, lo, 0x5432;   prmt.b32 lo, hi, lo, 0x1076;   mov.b64 %rd71, {lo,scr}; }
	// end inline asm
$L__tmp28:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:320   C[1] = i_mid[18] ^ ROTLby16 (nonce);
	.loc	1 320 22, function_name $L__info_string0, inlined_at 1 475 7
	xor.b64  	%rd85, %rd71, %rd7280;
$L__tmp29:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:321   state[15] = lop3_0xD2( C[0], i_mid[16], i_mid[17] );
	.loc	1 321 15, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 321 15
	mov.u64 	%rd73, %rd90;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd73;  mov.b64 {bh,bl}, %rd74;  mov.b64 {ch,cl}, %rd81;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd73, {ah,al};}
	// end inline asm
$L__tmp30:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:322   state[16] = lop3_0xD2( i_mid[16], i_mid[17], C[1] );
	.loc	1 322 15, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 322 15
	mov.u64 	%rd77, %rd74;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd77;  mov.b64 {bh,bl}, %rd81;  mov.b64 {ch,cl}, %rd85;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd77, {ah,al};}
	// end inline asm
$L__tmp31:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:323   state[17] = lop3_0xD2( i_mid[17], C[1], i_mid[19] );
	.loc	1 323 15, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 323 15
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd81;  mov.b64 {bh,bl}, %rd85;  mov.b64 {ch,cl}, %rd89;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd81, {ah,al};}
	// end inline asm
$L__tmp32:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:324   state[18] = lop3_0xD2( C[1], i_mid[19], C[0] );
	.loc	1 324 15, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 324 15
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd85;  mov.b64 {bh,bl}, %rd89;  mov.b64 {ch,cl}, %rd90;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd85, {ah,al};}
	// end inline asm
$L__tmp33:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:325   state[19] = lop3_0xD2( i_mid[19], C[0], i_mid[16] );
	.loc	1 325 15, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 325 15
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd89;  mov.b64 {bh,bl}, %rd90;  mov.b64 {ch,cl}, %rd74;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd89, {ah,al};}
	// end inline asm
$L__tmp34:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:327   C[0] = i_mid[20] ^ ROTRby1(nonce);
	.loc	1 327 22, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:213     asm ("{"
	.loc	1 213 5, function_name $L__info_string5, inlined_at 1 327 22
	mov.u64 	%rd93, %rd94;
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd93;shf.r.wrap.b32 scr, hi, lo, 1;shf.r.wrap.b32 lo, lo, hi, 1;mov.b64 %rd93, {scr,lo};}
	// end inline asm
$L__tmp35:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:327   C[0] = i_mid[20] ^ ROTRby1(nonce);
	.loc	1 327 22, function_name $L__info_string0, inlined_at 1 475 7
	xor.b64  	%rd112, %rd93, %rd7281;

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:328   C[1] = i_mid[21] ^ ROTR64 (nonce, 9);      //idea: ROTRby1(ROTRby8(nonce));
	.loc	1 328 3, function_name $L__info_string0, inlined_at 1 475 7
	shf.r.wrap.b32 	%r344, %r341, %r340, 9;
	shf.r.wrap.b32 	%r345, %r340, %r341, 9;
	mov.b64 	%rd7287, {%r345, %r344};
	xor.b64  	%rd113, %rd7282, %rd7287;

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:329   C[2] = i_mid[22] ^ ROTR64(nonce, 25);
	.loc	1 329 3, function_name $L__info_string0, inlined_at 1 475 7
	shf.r.wrap.b32 	%r346, %r341, %r340, 25;
	shf.r.wrap.b32 	%r347, %r340, %r341, 25;
	mov.b64 	%rd7288, {%r347, %r346};
	mov.u32 	%r325, 25;
	xor.b64  	%rd103, %rd7283, %rd7288;
$L__tmp36:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:330   state[20] = lop3_0xD2( C[0], C[1], C[2] );
	.loc	1 330 15, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 330 15
	mov.u64 	%rd95, %rd112;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd95;  mov.b64 {bh,bl}, %rd113;  mov.b64 {ch,cl}, %rd103;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd95, {ah,al};}
	// end inline asm
$L__tmp37:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:331   state[21] = lop3_0xD2( C[1], C[2], i_mid[23] );
	.loc	1 331 15, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 331 15
	mov.u64 	%rd99, %rd113;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd99;  mov.b64 {bh,bl}, %rd103;  mov.b64 {ch,cl}, %rd107;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd99, {ah,al};}
	// end inline asm
$L__tmp38:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:332   state[22] = lop3_0xD2( C[2], i_mid[23], i_mid[24] );
	.loc	1 332 15, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 332 15
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd103;  mov.b64 {bh,bl}, %rd107;  mov.b64 {ch,cl}, %rd111;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd103, {ah,al};}
	// end inline asm
$L__tmp39:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:333   state[23] = lop3_0xD2( i_mid[23], i_mid[24], C[0] );
	.loc	1 333 15, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 333 15
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd107;  mov.b64 {bh,bl}, %rd111;  mov.b64 {ch,cl}, %rd112;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd107, {ah,al};}
	// end inline asm
$L__tmp40:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:334   state[24] = lop3_0xD2( i_mid[24], C[0], C[1] );
	.loc	1 334 15, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 334 15
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd111;  mov.b64 {bh,bl}, %rd112;  mov.b64 {ch,cl}, %rd113;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd111, {ah,al};}
	// end inline asm
$L__tmp41:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:345       C[(x + 6) % 5] = xor5( state[x], state[x + 5], state[x + 10], state[x + 15], state[x + 20] );
	.loc	1 345 24, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd118, %rd176;
	// begin inline asm
	  xor.b64 %rd118, %rd118, %rd29;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd118, %rd118, %rd49;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd118, %rd118, %rd73;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd118, %rd118, %rd95;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd130, %rd11;
	// begin inline asm
	  xor.b64 %rd130, %rd130, %rd33;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd130, %rd130, %rd53;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd130, %rd130, %rd77;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd130, %rd130, %rd99;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd142, %rd15;
	// begin inline asm
	  xor.b64 %rd142, %rd142, %rd37;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd142, %rd142, %rd57;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd142, %rd142, %rd81;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd142, %rd142, %rd103;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd154, %rd19;
	// begin inline asm
	  xor.b64 %rd154, %rd154, %rd41;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd154, %rd154, %rd61;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd154, %rd154, %rd85;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd154, %rd154, %rd107;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd166, %rd23;
	// begin inline asm
	  xor.b64 %rd166, %rd166, %rd45;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd166, %rd166, %rd65;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd166, %rd166, %rd89;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd166, %rd166, %rd111;
	// end inline asm
$L__tmp42:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r348}, %rd130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r349,%dummy}, %rd130;
	}
	shf.l.wrap.b32 	%r350, %r349, %r348, 1;
	shf.l.wrap.b32 	%r351, %r348, %r349, 1;
	mov.b64 	%rd197, {%r351, %r350};
$L__tmp43:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:352       state[x]      = xor3( state[x]     , D[x], C[x] );
	.loc	1 352 23, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd175, %rd7260;
	// begin inline asm
	{  xor.b64 %rd175, %rd176, %rd197;  xor.b64 %rd175, %rd175, %rd166;}
	// end inline asm
$L__tmp44:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:353       state[x +  5] = xor3( state[x +  5], D[x], C[x] );
	.loc	1 353 23, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd324, %rd7260;
	// begin inline asm
	{  xor.b64 %rd324, %rd29, %rd197;  xor.b64 %rd324, %rd324, %rd166;}
	// end inline asm
$L__tmp45:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:354       state[x + 10] = xor3( state[x + 10], D[x], C[x] );
	.loc	1 354 23, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd185, %rd7260;
	// begin inline asm
	{  xor.b64 %rd185, %rd49, %rd197;  xor.b64 %rd185, %rd185, %rd166;}
	// end inline asm
$L__tmp46:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:355       state[x + 15] = xor3( state[x + 15], D[x], C[x] );
	.loc	1 355 23, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd316, %rd7260;
	// begin inline asm
	{  xor.b64 %rd316, %rd73, %rd197;  xor.b64 %rd316, %rd316, %rd166;}
	// end inline asm
$L__tmp47:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:356       state[x + 20] = xor3( state[x + 20], D[x], C[x] );
	.loc	1 356 23, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd306, %rd7260;
	// begin inline asm
	{  xor.b64 %rd306, %rd95, %rd197;  xor.b64 %rd306, %rd306, %rd166;}
	// end inline asm
$L__tmp48:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r352}, %rd142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r353,%dummy}, %rd142;
	}
	shf.l.wrap.b32 	%r354, %r353, %r352, 1;
	shf.l.wrap.b32 	%r355, %r352, %r353, 1;
	mov.b64 	%rd222, {%r355, %r354};
$L__tmp49:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd334, %rd7260;
	// begin inline asm
	{  xor.b64 %rd334, %rd11, %rd222;  xor.b64 %rd334, %rd334, %rd118;}
	// end inline asm
$L__tmp50:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd300, %rd7260;
	// begin inline asm
	{  xor.b64 %rd300, %rd33, %rd222;  xor.b64 %rd300, %rd300, %rd118;}
	// end inline asm
$L__tmp51:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd332, %rd7260;
	// begin inline asm
	{  xor.b64 %rd332, %rd53, %rd222;  xor.b64 %rd332, %rd332, %rd118;}
	// end inline asm
$L__tmp52:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd322, %rd7260;
	// begin inline asm
	{  xor.b64 %rd322, %rd77, %rd222;  xor.b64 %rd322, %rd322, %rd118;}
	// end inline asm
$L__tmp53:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd220, %rd7260;
	// begin inline asm
	{  xor.b64 %rd220, %rd99, %rd222;  xor.b64 %rd220, %rd220, %rd118;}
	// end inline asm
$L__tmp54:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r356}, %rd154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r357,%dummy}, %rd154;
	}
	shf.l.wrap.b32 	%r358, %r357, %r356, 1;
	shf.l.wrap.b32 	%r359, %r356, %r357, 1;
	mov.b64 	%rd247, {%r359, %r358};
$L__tmp55:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd225, %rd7260;
	// begin inline asm
	{  xor.b64 %rd225, %rd15, %rd247;  xor.b64 %rd225, %rd225, %rd130;}
	// end inline asm
$L__tmp56:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd230, %rd7260;
	// begin inline asm
	{  xor.b64 %rd230, %rd37, %rd247;  xor.b64 %rd230, %rd230, %rd130;}
	// end inline asm
$L__tmp57:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd308, %rd7260;
	// begin inline asm
	{  xor.b64 %rd308, %rd57, %rd247;  xor.b64 %rd308, %rd308, %rd130;}
	// end inline asm
$L__tmp58:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd330, %rd7260;
	// begin inline asm
	{  xor.b64 %rd330, %rd81, %rd247;  xor.b64 %rd330, %rd330, %rd130;}
	// end inline asm
$L__tmp59:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd245, %rd7260;
	// begin inline asm
	{  xor.b64 %rd245, %rd103, %rd247;  xor.b64 %rd245, %rd245, %rd130;}
	// end inline asm
$L__tmp60:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r360}, %rd166;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r361,%dummy}, %rd166;
	}
	shf.l.wrap.b32 	%r362, %r361, %r360, 1;
	shf.l.wrap.b32 	%r363, %r360, %r361, 1;
	mov.b64 	%rd272, {%r363, %r362};
$L__tmp61:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd326, %rd7260;
	// begin inline asm
	{  xor.b64 %rd326, %rd19, %rd272;  xor.b64 %rd326, %rd326, %rd142;}
	// end inline asm
$L__tmp62:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd255, %rd7260;
	// begin inline asm
	{  xor.b64 %rd255, %rd41, %rd272;  xor.b64 %rd255, %rd255, %rd142;}
	// end inline asm
$L__tmp63:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd310, %rd7260;
	// begin inline asm
	{  xor.b64 %rd310, %rd61, %rd272;  xor.b64 %rd310, %rd310, %rd142;}
	// end inline asm
$L__tmp64:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd328, %rd7260;
	// begin inline asm
	{  xor.b64 %rd328, %rd85, %rd272;  xor.b64 %rd328, %rd328, %rd142;}
	// end inline asm
$L__tmp65:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd314, %rd7260;
	// begin inline asm
	{  xor.b64 %rd314, %rd107, %rd272;  xor.b64 %rd314, %rd314, %rd142;}
	// end inline asm
$L__tmp66:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r364}, %rd118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r365,%dummy}, %rd118;
	}
	shf.l.wrap.b32 	%r366, %r365, %r364, 1;
	shf.l.wrap.b32 	%r367, %r364, %r365, 1;
	mov.b64 	%rd297, {%r367, %r366};
$L__tmp67:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd318, %rd7260;
	// begin inline asm
	{  xor.b64 %rd318, %rd23, %rd297;  xor.b64 %rd318, %rd318, %rd154;}
	// end inline asm
$L__tmp68:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd302, %rd7260;
	// begin inline asm
	{  xor.b64 %rd302, %rd45, %rd297;  xor.b64 %rd302, %rd302, %rd154;}
	// end inline asm
$L__tmp69:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd304, %rd7260;
	// begin inline asm
	{  xor.b64 %rd304, %rd65, %rd297;  xor.b64 %rd304, %rd304, %rd154;}
	// end inline asm
$L__tmp70:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd312, %rd7260;
	// begin inline asm
	{  xor.b64 %rd312, %rd89, %rd297;  xor.b64 %rd312, %rd312, %rd154;}
	// end inline asm
$L__tmp71:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd320, %rd7260;
	// begin inline asm
	{  xor.b64 %rd320, %rd111, %rd297;  xor.b64 %rd320, %rd320, %rd154;}
	// end inline asm
$L__tmp72:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:372     state[ 1] = ROTR64asm( state[ 6], 20 );
	.loc	1 372 17, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 372 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd300;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd300, {scr,lo};}
	// end inline asm
$L__tmp73:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:373     state[ 6] = ROTL64asm( state[ 9], 20 );
	.loc	1 373 17, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 373 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd302;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd302, {scr,lo};}
	// end inline asm
$L__tmp74:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:374     state[ 9] = ROTR64( state[22],  3 );
	.loc	1 374 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r368,%dummy}, %rd245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r369}, %rd245;
	}
	shf.r.wrap.b32 	%r370, %r369, %r368, 3;
	shf.r.wrap.b32 	%r371, %r368, %r369, 3;
	mov.b64 	%rd372, {%r371, %r370};
$L__tmp75:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:375     state[22] = ROTR64asm( state[14], 25 );
	.loc	1 375 17, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 375 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd304;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd304, {scr,lo};}
	// end inline asm
$L__tmp76:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:376     state[14] = ROTL64asm( state[20], 18 );
	.loc	1 376 17, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 376 17
	mov.u32 	%r323, 18;
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r323;mov.b64 {hi,lo}, %rd306;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd306, {scr,lo};}
	// end inline asm
$L__tmp77:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:377     state[20] = ROTR64( state[ 2],  2 );
	.loc	1 377 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r372,%dummy}, %rd225;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r373}, %rd225;
	}
	shf.r.wrap.b32 	%r374, %r373, %r372, 2;
	shf.r.wrap.b32 	%r375, %r372, %r373, 2;
	mov.b64 	%rd433, {%r375, %r374};
	mov.u32 	%r332, 21;
$L__tmp78:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:378     state[ 2] = ROTR64asm( state[12], 21 );
	.loc	1 378 17, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 378 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd308;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd308, {scr,lo};}
	// end inline asm
$L__tmp79:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:379     state[12] = ROTL64asm( state[13], 25 );
	.loc	1 379 17, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 379 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd310;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd310, {scr,lo};}
	// end inline asm
$L__tmp80:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:380     state[13] = ROTLby8( state[19] );
	.loc	1 380 17, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:169     asm ( "{"
	.loc	1 169 5, function_name $L__info_string8, inlined_at 1 380 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd312;prmt.b32 scr, hi, lo, 0x2107;prmt.b32 lo, hi, lo, 0x6543;mov.b64 %rd312, {scr,lo};}
	// end inline asm
$L__tmp81:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:381     state[19] = ROTRby8( state[23] );
	.loc	1 381 17, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:183       asm ( "{"
	.loc	1 183 7, function_name $L__info_string9, inlined_at 1 381 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd314;prmt.b32 scr, lo, hi, 0x0765;prmt.b32 lo, lo, hi, 0x4321;mov.b64 %rd314, {scr,lo};}
	// end inline asm
$L__tmp82:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:382     state[23] = ROTR64asm( state[15], 23 );
	.loc	1 382 17, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 382 17
	mov.u32 	%r326, 23;
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r326;mov.b64 {hi,lo}, %rd316;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd316, {scr,lo};}
	// end inline asm
$L__tmp83:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:386         state[15] = ROTRfrom32 (state[4],  5);        // forced on.
	.loc	1 386 21, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 386 21
	mov.u32 	%r327, 5;
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd318;                  mov.b32 mag, %r327;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd318, {scr,lo};             }
	// end inline asm
$L__tmp84:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:397     state[ 4] = ROTL64asm( state[24], 14 );
	.loc	1 397 17, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 397 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r328;mov.b64 {hi,lo}, %rd320;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd320, {scr,lo};}
	// end inline asm
$L__tmp85:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:398     state[24] = ROTL64( state[21],  2 );
	.loc	1 398 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r376}, %rd220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r377,%dummy}, %rd220;
	}
	shf.l.wrap.b32 	%r378, %r377, %r376, 2;
	shf.l.wrap.b32 	%r379, %r376, %r377, 2;
	mov.b64 	%rd432, {%r379, %r378};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:399     state[21] = ROTR64( state[ 8], 9 );            // R9
	.loc	1 399 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r380,%dummy}, %rd255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r381}, %rd255;
	}
	shf.r.wrap.b32 	%r382, %r381, %r380, 9;
	shf.r.wrap.b32 	%r383, %r380, %r381, 9;
	mov.b64 	%rd434, {%r383, %r382};
$L__tmp86:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:400     state[ 8] = ROTR64asm( state[16], 19 );
	.loc	1 400 17, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 400 17
	mov.u32 	%r329, 19;
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r329;mov.b64 {hi,lo}, %rd322;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd322, {scr,lo};}
	// end inline asm
$L__tmp87:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:405         state[16] = ROTLfrom32 (state[5], 4);
	.loc	1 405 21, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:124     asm ("{"
	.loc	1 124 5, function_name $L__info_string11, inlined_at 1 405 21
	mov.u32 	%r331, 4;
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd324;                  mov.b32 mag, %r331;                      shf.l.wrap.b32 scr, lo, hi, mag;      shf.l.wrap.b32 lo, hi, lo, mag;       mov.b64 %rd324, {scr,lo};             }
	// end inline asm
$L__tmp88:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:406         state[ 5] = ROTRfrom32 (state[3], 4);
	.loc	1 406 21, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 406 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd326;                  mov.b32 mag, %r331;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd326, {scr,lo};             }
	// end inline asm
$L__tmp89:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:414     state[ 3] = ROTL64asm( state[18], 21 );
	.loc	1 414 17, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 414 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd328;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd328, {scr,lo};}
	// end inline asm
$L__tmp90:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:415     state[18] = ROTL64asm( state[17], 15 );
	.loc	1 415 17, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 415 17
	mov.u32 	%r333, 15;
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r333;mov.b64 {hi,lo}, %rd330;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd330, {scr,lo};}
	// end inline asm
$L__tmp91:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:416     state[17] = ROTL64asm( state[11], 10 );
	.loc	1 416 17, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 416 17
	mov.u32 	%r334, 10;
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r334;mov.b64 {hi,lo}, %rd332;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd332, {scr,lo};}
	// end inline asm
$L__tmp92:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:417     state[11] = ROTL64( state[ 7],  6 );
	.loc	1 417 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r384}, %rd230;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r385,%dummy}, %rd230;
	}
	shf.l.wrap.b32 	%r386, %r385, %r384, 6;
	shf.l.wrap.b32 	%r387, %r384, %r385, 6;
	mov.b64 	%rd394, {%r387, %r386};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:418     state[ 7] = ROTL64( state[10],  3 );
	.loc	1 418 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r388}, %rd185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r389,%dummy}, %rd185;
	}
	shf.l.wrap.b32 	%r390, %r389, %r388, 3;
	shf.l.wrap.b32 	%r391, %r388, %r389, 3;
	mov.b64 	%rd364, {%r391, %r390};
$L__tmp93:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:419     state[10] = ROTLby1( C[0] );
	.loc	1 419 17, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:199     asm ("{"
	.loc	1 199 5, function_name $L__info_string12, inlined_at 1 419 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd334;shf.l.wrap.b32 scr, lo, hi, 1;shf.l.wrap.b32 lo, hi, lo, 1;mov.b64 %rd334, {scr,lo};}
	// end inline asm
$L__tmp94:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:429       state[x]     = lop3_0xD2( C[0], C[1], C[2] );
	.loc	1 429 22, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd336, %rd175;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd336;  mov.b64 {bh,bl}, %rd300;  mov.b64 {ch,cl}, %rd308;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd336, {ah,al};}
	// end inline asm
$L__tmp95:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:430       state[x + 1] = lop3_0xD2( C[1], C[2], C[3] );
	.loc	1 430 22, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd340, %rd300;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd340;  mov.b64 {bh,bl}, %rd308;  mov.b64 {ch,cl}, %rd328;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd340, {ah,al};}
	// end inline asm
$L__tmp96:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:431       state[x + 2] = lop3_0xD2( C[2], C[3], C[4] );
	.loc	1 431 22, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd308;  mov.b64 {bh,bl}, %rd328;  mov.b64 {ch,cl}, %rd320;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd308, {ah,al};}
	// end inline asm
$L__tmp97:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:432       state[x + 3] = lop3_0xD2( C[3], C[4], C[0] );
	.loc	1 432 22, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd328;  mov.b64 {bh,bl}, %rd320;  mov.b64 {ch,cl}, %rd175;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd328, {ah,al};}
	// end inline asm
$L__tmp98:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:433       state[x + 4] = lop3_0xD2( C[4], C[0], C[1] );
	.loc	1 433 22, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd320;  mov.b64 {bh,bl}, %rd175;  mov.b64 {ch,cl}, %rd300;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd320, {ah,al};}
	// end inline asm
$L__tmp99:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd356, %rd326;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd356;  mov.b64 {bh,bl}, %rd302;  mov.b64 {ch,cl}, %rd364;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd356, {ah,al};}
	// end inline asm
$L__tmp100:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd360, %rd302;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd360;  mov.b64 {bh,bl}, %rd364;  mov.b64 {ch,cl}, %rd322;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd360, {ah,al};}
	// end inline asm
$L__tmp101:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd364;  mov.b64 {bh,bl}, %rd322;  mov.b64 {ch,cl}, %rd372;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd364, {ah,al};}
	// end inline asm
$L__tmp102:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd322;  mov.b64 {bh,bl}, %rd372;  mov.b64 {ch,cl}, %rd326;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd322, {ah,al};}
	// end inline asm
$L__tmp103:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd372;  mov.b64 {bh,bl}, %rd326;  mov.b64 {ch,cl}, %rd302;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd372, {ah,al};}
	// end inline asm
$L__tmp104:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd376, %rd334;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd376;  mov.b64 {bh,bl}, %rd394;  mov.b64 {ch,cl}, %rd310;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd376, {ah,al};}
	// end inline asm
$L__tmp105:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd380, %rd394;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd380;  mov.b64 {bh,bl}, %rd310;  mov.b64 {ch,cl}, %rd312;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd380, {ah,al};}
	// end inline asm
$L__tmp106:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd310;  mov.b64 {bh,bl}, %rd312;  mov.b64 {ch,cl}, %rd306;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd310, {ah,al};}
	// end inline asm
$L__tmp107:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd312;  mov.b64 {bh,bl}, %rd306;  mov.b64 {ch,cl}, %rd334;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd312, {ah,al};}
	// end inline asm
$L__tmp108:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd306;  mov.b64 {bh,bl}, %rd334;  mov.b64 {ch,cl}, %rd394;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd306, {ah,al};}
	// end inline asm
$L__tmp109:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd396, %rd318;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd396;  mov.b64 {bh,bl}, %rd324;  mov.b64 {ch,cl}, %rd332;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd396, {ah,al};}
	// end inline asm
$L__tmp110:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd400, %rd324;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd400;  mov.b64 {bh,bl}, %rd332;  mov.b64 {ch,cl}, %rd330;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd400, {ah,al};}
	// end inline asm
$L__tmp111:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd332;  mov.b64 {bh,bl}, %rd330;  mov.b64 {ch,cl}, %rd314;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd332, {ah,al};}
	// end inline asm
$L__tmp112:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd330;  mov.b64 {bh,bl}, %rd314;  mov.b64 {ch,cl}, %rd318;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd330, {ah,al};}
	// end inline asm
$L__tmp113:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd314;  mov.b64 {bh,bl}, %rd318;  mov.b64 {ch,cl}, %rd324;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd314, {ah,al};}
	// end inline asm
$L__tmp114:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd416, %rd433;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd416;  mov.b64 {bh,bl}, %rd434;  mov.b64 {ch,cl}, %rd304;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd416, {ah,al};}
	// end inline asm
$L__tmp115:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd420, %rd434;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd420;  mov.b64 {bh,bl}, %rd304;  mov.b64 {ch,cl}, %rd316;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd420, {ah,al};}
	// end inline asm
$L__tmp116:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd304;  mov.b64 {bh,bl}, %rd316;  mov.b64 {ch,cl}, %rd432;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd304, {ah,al};}
	// end inline asm
$L__tmp117:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd316;  mov.b64 {bh,bl}, %rd432;  mov.b64 {ch,cl}, %rd433;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd316, {ah,al};}
	// end inline asm
$L__tmp118:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd432;  mov.b64 {bh,bl}, %rd433;  mov.b64 {ch,cl}, %rd434;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd432, {ah,al};}
	// end inline asm
$L__tmp119:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:437     state[0] = state[0] ^ RClocal[i];
	.loc	1 437 5, function_name $L__info_string0, inlined_at 1 475 7
	xor.b64  	%rd497, %rd336, 32898;
$L__tmp120:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd439, %rd497;
	// begin inline asm
	  xor.b64 %rd439, %rd439, %rd356;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd439, %rd439, %rd376;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd439, %rd439, %rd396;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd439, %rd439, %rd416;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd451, %rd340;
	// begin inline asm
	  xor.b64 %rd451, %rd451, %rd360;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd451, %rd451, %rd380;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd451, %rd451, %rd400;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd451, %rd451, %rd420;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd463, %rd308;
	// begin inline asm
	  xor.b64 %rd463, %rd463, %rd364;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd463, %rd463, %rd310;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd463, %rd463, %rd332;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd463, %rd463, %rd304;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd475, %rd328;
	// begin inline asm
	  xor.b64 %rd475, %rd475, %rd322;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd475, %rd475, %rd312;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd475, %rd475, %rd330;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd475, %rd475, %rd316;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd487, %rd320;
	// begin inline asm
	  xor.b64 %rd487, %rd487, %rd372;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd487, %rd487, %rd306;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd487, %rd487, %rd314;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd487, %rd487, %rd432;
	// end inline asm
$L__tmp121:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r392}, %rd451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r393,%dummy}, %rd451;
	}
	shf.l.wrap.b32 	%r394, %r393, %r392, 1;
	shf.l.wrap.b32 	%r395, %r392, %r393, 1;
	mov.b64 	%rd518, {%r395, %r394};
$L__tmp122:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd496, %rd7260;
	// begin inline asm
	{  xor.b64 %rd496, %rd497, %rd518;  xor.b64 %rd496, %rd496, %rd487;}
	// end inline asm
$L__tmp123:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd645, %rd7260;
	// begin inline asm
	{  xor.b64 %rd645, %rd356, %rd518;  xor.b64 %rd645, %rd645, %rd487;}
	// end inline asm
$L__tmp124:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd506, %rd7260;
	// begin inline asm
	{  xor.b64 %rd506, %rd376, %rd518;  xor.b64 %rd506, %rd506, %rd487;}
	// end inline asm
$L__tmp125:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd637, %rd7260;
	// begin inline asm
	{  xor.b64 %rd637, %rd396, %rd518;  xor.b64 %rd637, %rd637, %rd487;}
	// end inline asm
$L__tmp126:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd627, %rd7260;
	// begin inline asm
	{  xor.b64 %rd627, %rd416, %rd518;  xor.b64 %rd627, %rd627, %rd487;}
	// end inline asm
$L__tmp127:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r396}, %rd463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r397,%dummy}, %rd463;
	}
	shf.l.wrap.b32 	%r398, %r397, %r396, 1;
	shf.l.wrap.b32 	%r399, %r396, %r397, 1;
	mov.b64 	%rd543, {%r399, %r398};
$L__tmp128:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd655, %rd7260;
	// begin inline asm
	{  xor.b64 %rd655, %rd340, %rd543;  xor.b64 %rd655, %rd655, %rd439;}
	// end inline asm
$L__tmp129:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd621, %rd7260;
	// begin inline asm
	{  xor.b64 %rd621, %rd360, %rd543;  xor.b64 %rd621, %rd621, %rd439;}
	// end inline asm
$L__tmp130:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd653, %rd7260;
	// begin inline asm
	{  xor.b64 %rd653, %rd380, %rd543;  xor.b64 %rd653, %rd653, %rd439;}
	// end inline asm
$L__tmp131:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd643, %rd7260;
	// begin inline asm
	{  xor.b64 %rd643, %rd400, %rd543;  xor.b64 %rd643, %rd643, %rd439;}
	// end inline asm
$L__tmp132:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd541, %rd7260;
	// begin inline asm
	{  xor.b64 %rd541, %rd420, %rd543;  xor.b64 %rd541, %rd541, %rd439;}
	// end inline asm
$L__tmp133:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r400}, %rd475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r401,%dummy}, %rd475;
	}
	shf.l.wrap.b32 	%r402, %r401, %r400, 1;
	shf.l.wrap.b32 	%r403, %r400, %r401, 1;
	mov.b64 	%rd568, {%r403, %r402};
$L__tmp134:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd546, %rd7260;
	// begin inline asm
	{  xor.b64 %rd546, %rd308, %rd568;  xor.b64 %rd546, %rd546, %rd451;}
	// end inline asm
$L__tmp135:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd551, %rd7260;
	// begin inline asm
	{  xor.b64 %rd551, %rd364, %rd568;  xor.b64 %rd551, %rd551, %rd451;}
	// end inline asm
$L__tmp136:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd629, %rd7260;
	// begin inline asm
	{  xor.b64 %rd629, %rd310, %rd568;  xor.b64 %rd629, %rd629, %rd451;}
	// end inline asm
$L__tmp137:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd651, %rd7260;
	// begin inline asm
	{  xor.b64 %rd651, %rd332, %rd568;  xor.b64 %rd651, %rd651, %rd451;}
	// end inline asm
$L__tmp138:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd566, %rd7260;
	// begin inline asm
	{  xor.b64 %rd566, %rd304, %rd568;  xor.b64 %rd566, %rd566, %rd451;}
	// end inline asm
$L__tmp139:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r404}, %rd487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r405,%dummy}, %rd487;
	}
	shf.l.wrap.b32 	%r406, %r405, %r404, 1;
	shf.l.wrap.b32 	%r407, %r404, %r405, 1;
	mov.b64 	%rd593, {%r407, %r406};
$L__tmp140:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd647, %rd7260;
	// begin inline asm
	{  xor.b64 %rd647, %rd328, %rd593;  xor.b64 %rd647, %rd647, %rd463;}
	// end inline asm
$L__tmp141:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd576, %rd7260;
	// begin inline asm
	{  xor.b64 %rd576, %rd322, %rd593;  xor.b64 %rd576, %rd576, %rd463;}
	// end inline asm
$L__tmp142:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd631, %rd7260;
	// begin inline asm
	{  xor.b64 %rd631, %rd312, %rd593;  xor.b64 %rd631, %rd631, %rd463;}
	// end inline asm
$L__tmp143:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd649, %rd7260;
	// begin inline asm
	{  xor.b64 %rd649, %rd330, %rd593;  xor.b64 %rd649, %rd649, %rd463;}
	// end inline asm
$L__tmp144:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd635, %rd7260;
	// begin inline asm
	{  xor.b64 %rd635, %rd316, %rd593;  xor.b64 %rd635, %rd635, %rd463;}
	// end inline asm
$L__tmp145:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r408}, %rd439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r409,%dummy}, %rd439;
	}
	shf.l.wrap.b32 	%r410, %r409, %r408, 1;
	shf.l.wrap.b32 	%r411, %r408, %r409, 1;
	mov.b64 	%rd618, {%r411, %r410};
$L__tmp146:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd639, %rd7260;
	// begin inline asm
	{  xor.b64 %rd639, %rd320, %rd618;  xor.b64 %rd639, %rd639, %rd475;}
	// end inline asm
$L__tmp147:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd623, %rd7260;
	// begin inline asm
	{  xor.b64 %rd623, %rd372, %rd618;  xor.b64 %rd623, %rd623, %rd475;}
	// end inline asm
$L__tmp148:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd625, %rd7260;
	// begin inline asm
	{  xor.b64 %rd625, %rd306, %rd618;  xor.b64 %rd625, %rd625, %rd475;}
	// end inline asm
$L__tmp149:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd633, %rd7260;
	// begin inline asm
	{  xor.b64 %rd633, %rd314, %rd618;  xor.b64 %rd633, %rd633, %rd475;}
	// end inline asm
$L__tmp150:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd641, %rd7260;
	// begin inline asm
	{  xor.b64 %rd641, %rd432, %rd618;  xor.b64 %rd641, %rd641, %rd475;}
	// end inline asm
$L__tmp151:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 372 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd621;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd621, {scr,lo};}
	// end inline asm
$L__tmp152:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 373 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd623;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd623, {scr,lo};}
	// end inline asm
$L__tmp153:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:374     state[ 9] = ROTR64( state[22],  3 );
	.loc	1 374 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r412,%dummy}, %rd566;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r413}, %rd566;
	}
	shf.r.wrap.b32 	%r414, %r413, %r412, 3;
	shf.r.wrap.b32 	%r415, %r412, %r413, 3;
	mov.b64 	%rd693, {%r415, %r414};
$L__tmp154:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 375 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd625;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd625, {scr,lo};}
	// end inline asm
$L__tmp155:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 376 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r323;mov.b64 {hi,lo}, %rd627;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd627, {scr,lo};}
	// end inline asm
$L__tmp156:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:377     state[20] = ROTR64( state[ 2],  2 );
	.loc	1 377 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r416,%dummy}, %rd546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r417}, %rd546;
	}
	shf.r.wrap.b32 	%r418, %r417, %r416, 2;
	shf.r.wrap.b32 	%r419, %r416, %r417, 2;
	mov.b64 	%rd754, {%r419, %r418};
$L__tmp157:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 378 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd629;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd629, {scr,lo};}
	// end inline asm
$L__tmp158:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 379 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd631;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd631, {scr,lo};}
	// end inline asm
$L__tmp159:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:169     asm ( "{"
	.loc	1 169 5, function_name $L__info_string8, inlined_at 1 380 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd633;prmt.b32 scr, hi, lo, 0x2107;prmt.b32 lo, hi, lo, 0x6543;mov.b64 %rd633, {scr,lo};}
	// end inline asm
$L__tmp160:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:183       asm ( "{"
	.loc	1 183 7, function_name $L__info_string9, inlined_at 1 381 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd635;prmt.b32 scr, lo, hi, 0x0765;prmt.b32 lo, lo, hi, 0x4321;mov.b64 %rd635, {scr,lo};}
	// end inline asm
$L__tmp161:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 382 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r326;mov.b64 {hi,lo}, %rd637;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd637, {scr,lo};}
	// end inline asm
$L__tmp162:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 386 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd639;                  mov.b32 mag, %r327;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd639, {scr,lo};             }
	// end inline asm
$L__tmp163:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 397 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r328;mov.b64 {hi,lo}, %rd641;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd641, {scr,lo};}
	// end inline asm
$L__tmp164:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:398     state[24] = ROTL64( state[21],  2 );
	.loc	1 398 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r420}, %rd541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r421,%dummy}, %rd541;
	}
	shf.l.wrap.b32 	%r422, %r421, %r420, 2;
	shf.l.wrap.b32 	%r423, %r420, %r421, 2;
	mov.b64 	%rd753, {%r423, %r422};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:399     state[21] = ROTR64( state[ 8], 9 );            // R9
	.loc	1 399 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r424,%dummy}, %rd576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r425}, %rd576;
	}
	shf.r.wrap.b32 	%r426, %r425, %r424, 9;
	shf.r.wrap.b32 	%r427, %r424, %r425, 9;
	mov.b64 	%rd755, {%r427, %r426};
$L__tmp165:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 400 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r329;mov.b64 {hi,lo}, %rd643;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd643, {scr,lo};}
	// end inline asm
$L__tmp166:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:124     asm ("{"
	.loc	1 124 5, function_name $L__info_string11, inlined_at 1 405 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd645;                  mov.b32 mag, %r331;                      shf.l.wrap.b32 scr, lo, hi, mag;      shf.l.wrap.b32 lo, hi, lo, mag;       mov.b64 %rd645, {scr,lo};             }
	// end inline asm
$L__tmp167:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 406 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd647;                  mov.b32 mag, %r331;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd647, {scr,lo};             }
	// end inline asm
$L__tmp168:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 414 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd649;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd649, {scr,lo};}
	// end inline asm
$L__tmp169:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 415 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r333;mov.b64 {hi,lo}, %rd651;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd651, {scr,lo};}
	// end inline asm
$L__tmp170:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 416 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r334;mov.b64 {hi,lo}, %rd653;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd653, {scr,lo};}
	// end inline asm
$L__tmp171:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:417     state[11] = ROTL64( state[ 7],  6 );
	.loc	1 417 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r428}, %rd551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r429,%dummy}, %rd551;
	}
	shf.l.wrap.b32 	%r430, %r429, %r428, 6;
	shf.l.wrap.b32 	%r431, %r428, %r429, 6;
	mov.b64 	%rd715, {%r431, %r430};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:418     state[ 7] = ROTL64( state[10],  3 );
	.loc	1 418 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r432}, %rd506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r433,%dummy}, %rd506;
	}
	shf.l.wrap.b32 	%r434, %r433, %r432, 3;
	shf.l.wrap.b32 	%r435, %r432, %r433, 3;
	mov.b64 	%rd685, {%r435, %r434};
$L__tmp172:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:199     asm ("{"
	.loc	1 199 5, function_name $L__info_string12, inlined_at 1 419 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd655;shf.l.wrap.b32 scr, lo, hi, 1;shf.l.wrap.b32 lo, hi, lo, 1;mov.b64 %rd655, {scr,lo};}
	// end inline asm
$L__tmp173:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd657, %rd496;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd657;  mov.b64 {bh,bl}, %rd621;  mov.b64 {ch,cl}, %rd629;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd657, {ah,al};}
	// end inline asm
$L__tmp174:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd661, %rd621;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd661;  mov.b64 {bh,bl}, %rd629;  mov.b64 {ch,cl}, %rd649;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd661, {ah,al};}
	// end inline asm
$L__tmp175:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd629;  mov.b64 {bh,bl}, %rd649;  mov.b64 {ch,cl}, %rd641;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd629, {ah,al};}
	// end inline asm
$L__tmp176:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd649;  mov.b64 {bh,bl}, %rd641;  mov.b64 {ch,cl}, %rd496;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd649, {ah,al};}
	// end inline asm
$L__tmp177:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd641;  mov.b64 {bh,bl}, %rd496;  mov.b64 {ch,cl}, %rd621;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd641, {ah,al};}
	// end inline asm
$L__tmp178:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd677, %rd647;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd677;  mov.b64 {bh,bl}, %rd623;  mov.b64 {ch,cl}, %rd685;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd677, {ah,al};}
	// end inline asm
$L__tmp179:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd681, %rd623;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd681;  mov.b64 {bh,bl}, %rd685;  mov.b64 {ch,cl}, %rd643;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd681, {ah,al};}
	// end inline asm
$L__tmp180:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd685;  mov.b64 {bh,bl}, %rd643;  mov.b64 {ch,cl}, %rd693;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd685, {ah,al};}
	// end inline asm
$L__tmp181:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd643;  mov.b64 {bh,bl}, %rd693;  mov.b64 {ch,cl}, %rd647;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd643, {ah,al};}
	// end inline asm
$L__tmp182:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd693;  mov.b64 {bh,bl}, %rd647;  mov.b64 {ch,cl}, %rd623;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd693, {ah,al};}
	// end inline asm
$L__tmp183:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd697, %rd655;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd697;  mov.b64 {bh,bl}, %rd715;  mov.b64 {ch,cl}, %rd631;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd697, {ah,al};}
	// end inline asm
$L__tmp184:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd701, %rd715;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd701;  mov.b64 {bh,bl}, %rd631;  mov.b64 {ch,cl}, %rd633;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd701, {ah,al};}
	// end inline asm
$L__tmp185:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd631;  mov.b64 {bh,bl}, %rd633;  mov.b64 {ch,cl}, %rd627;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd631, {ah,al};}
	// end inline asm
$L__tmp186:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd633;  mov.b64 {bh,bl}, %rd627;  mov.b64 {ch,cl}, %rd655;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd633, {ah,al};}
	// end inline asm
$L__tmp187:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd627;  mov.b64 {bh,bl}, %rd655;  mov.b64 {ch,cl}, %rd715;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd627, {ah,al};}
	// end inline asm
$L__tmp188:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd717, %rd639;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd717;  mov.b64 {bh,bl}, %rd645;  mov.b64 {ch,cl}, %rd653;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd717, {ah,al};}
	// end inline asm
$L__tmp189:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd721, %rd645;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd721;  mov.b64 {bh,bl}, %rd653;  mov.b64 {ch,cl}, %rd651;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd721, {ah,al};}
	// end inline asm
$L__tmp190:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd653;  mov.b64 {bh,bl}, %rd651;  mov.b64 {ch,cl}, %rd635;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd653, {ah,al};}
	// end inline asm
$L__tmp191:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd651;  mov.b64 {bh,bl}, %rd635;  mov.b64 {ch,cl}, %rd639;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd651, {ah,al};}
	// end inline asm
$L__tmp192:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd635;  mov.b64 {bh,bl}, %rd639;  mov.b64 {ch,cl}, %rd645;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd635, {ah,al};}
	// end inline asm
$L__tmp193:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd737, %rd754;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd737;  mov.b64 {bh,bl}, %rd755;  mov.b64 {ch,cl}, %rd625;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd737, {ah,al};}
	// end inline asm
$L__tmp194:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd741, %rd755;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd741;  mov.b64 {bh,bl}, %rd625;  mov.b64 {ch,cl}, %rd637;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd741, {ah,al};}
	// end inline asm
$L__tmp195:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd625;  mov.b64 {bh,bl}, %rd637;  mov.b64 {ch,cl}, %rd753;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd625, {ah,al};}
	// end inline asm
$L__tmp196:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd637;  mov.b64 {bh,bl}, %rd753;  mov.b64 {ch,cl}, %rd754;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd637, {ah,al};}
	// end inline asm
$L__tmp197:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd753;  mov.b64 {bh,bl}, %rd754;  mov.b64 {ch,cl}, %rd755;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd753, {ah,al};}
	// end inline asm
$L__tmp198:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:437     state[0] = state[0] ^ RClocal[i];
	.loc	1 437 5, function_name $L__info_string0, inlined_at 1 475 7
	xor.b64  	%rd818, %rd657, -9223372036854742902;
$L__tmp199:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd760, %rd818;
	// begin inline asm
	  xor.b64 %rd760, %rd760, %rd677;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd760, %rd760, %rd697;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd760, %rd760, %rd717;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd760, %rd760, %rd737;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd772, %rd661;
	// begin inline asm
	  xor.b64 %rd772, %rd772, %rd681;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd772, %rd772, %rd701;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd772, %rd772, %rd721;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd772, %rd772, %rd741;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd784, %rd629;
	// begin inline asm
	  xor.b64 %rd784, %rd784, %rd685;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd784, %rd784, %rd631;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd784, %rd784, %rd653;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd784, %rd784, %rd625;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd796, %rd649;
	// begin inline asm
	  xor.b64 %rd796, %rd796, %rd643;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd796, %rd796, %rd633;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd796, %rd796, %rd651;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd796, %rd796, %rd637;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd808, %rd641;
	// begin inline asm
	  xor.b64 %rd808, %rd808, %rd693;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd808, %rd808, %rd627;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd808, %rd808, %rd635;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd808, %rd808, %rd753;
	// end inline asm
$L__tmp200:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r436}, %rd772;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r437,%dummy}, %rd772;
	}
	shf.l.wrap.b32 	%r438, %r437, %r436, 1;
	shf.l.wrap.b32 	%r439, %r436, %r437, 1;
	mov.b64 	%rd839, {%r439, %r438};
$L__tmp201:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd817, %rd7260;
	// begin inline asm
	{  xor.b64 %rd817, %rd818, %rd839;  xor.b64 %rd817, %rd817, %rd808;}
	// end inline asm
$L__tmp202:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd966, %rd7260;
	// begin inline asm
	{  xor.b64 %rd966, %rd677, %rd839;  xor.b64 %rd966, %rd966, %rd808;}
	// end inline asm
$L__tmp203:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd827, %rd7260;
	// begin inline asm
	{  xor.b64 %rd827, %rd697, %rd839;  xor.b64 %rd827, %rd827, %rd808;}
	// end inline asm
$L__tmp204:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd958, %rd7260;
	// begin inline asm
	{  xor.b64 %rd958, %rd717, %rd839;  xor.b64 %rd958, %rd958, %rd808;}
	// end inline asm
$L__tmp205:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd948, %rd7260;
	// begin inline asm
	{  xor.b64 %rd948, %rd737, %rd839;  xor.b64 %rd948, %rd948, %rd808;}
	// end inline asm
$L__tmp206:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r440}, %rd784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r441,%dummy}, %rd784;
	}
	shf.l.wrap.b32 	%r442, %r441, %r440, 1;
	shf.l.wrap.b32 	%r443, %r440, %r441, 1;
	mov.b64 	%rd864, {%r443, %r442};
$L__tmp207:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd976, %rd7260;
	// begin inline asm
	{  xor.b64 %rd976, %rd661, %rd864;  xor.b64 %rd976, %rd976, %rd760;}
	// end inline asm
$L__tmp208:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd942, %rd7260;
	// begin inline asm
	{  xor.b64 %rd942, %rd681, %rd864;  xor.b64 %rd942, %rd942, %rd760;}
	// end inline asm
$L__tmp209:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd974, %rd7260;
	// begin inline asm
	{  xor.b64 %rd974, %rd701, %rd864;  xor.b64 %rd974, %rd974, %rd760;}
	// end inline asm
$L__tmp210:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd964, %rd7260;
	// begin inline asm
	{  xor.b64 %rd964, %rd721, %rd864;  xor.b64 %rd964, %rd964, %rd760;}
	// end inline asm
$L__tmp211:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd862, %rd7260;
	// begin inline asm
	{  xor.b64 %rd862, %rd741, %rd864;  xor.b64 %rd862, %rd862, %rd760;}
	// end inline asm
$L__tmp212:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r444}, %rd796;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r445,%dummy}, %rd796;
	}
	shf.l.wrap.b32 	%r446, %r445, %r444, 1;
	shf.l.wrap.b32 	%r447, %r444, %r445, 1;
	mov.b64 	%rd889, {%r447, %r446};
$L__tmp213:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd867, %rd7260;
	// begin inline asm
	{  xor.b64 %rd867, %rd629, %rd889;  xor.b64 %rd867, %rd867, %rd772;}
	// end inline asm
$L__tmp214:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd872, %rd7260;
	// begin inline asm
	{  xor.b64 %rd872, %rd685, %rd889;  xor.b64 %rd872, %rd872, %rd772;}
	// end inline asm
$L__tmp215:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd950, %rd7260;
	// begin inline asm
	{  xor.b64 %rd950, %rd631, %rd889;  xor.b64 %rd950, %rd950, %rd772;}
	// end inline asm
$L__tmp216:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd972, %rd7260;
	// begin inline asm
	{  xor.b64 %rd972, %rd653, %rd889;  xor.b64 %rd972, %rd972, %rd772;}
	// end inline asm
$L__tmp217:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd887, %rd7260;
	// begin inline asm
	{  xor.b64 %rd887, %rd625, %rd889;  xor.b64 %rd887, %rd887, %rd772;}
	// end inline asm
$L__tmp218:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r448}, %rd808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r449,%dummy}, %rd808;
	}
	shf.l.wrap.b32 	%r450, %r449, %r448, 1;
	shf.l.wrap.b32 	%r451, %r448, %r449, 1;
	mov.b64 	%rd914, {%r451, %r450};
$L__tmp219:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd968, %rd7260;
	// begin inline asm
	{  xor.b64 %rd968, %rd649, %rd914;  xor.b64 %rd968, %rd968, %rd784;}
	// end inline asm
$L__tmp220:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd897, %rd7260;
	// begin inline asm
	{  xor.b64 %rd897, %rd643, %rd914;  xor.b64 %rd897, %rd897, %rd784;}
	// end inline asm
$L__tmp221:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd952, %rd7260;
	// begin inline asm
	{  xor.b64 %rd952, %rd633, %rd914;  xor.b64 %rd952, %rd952, %rd784;}
	// end inline asm
$L__tmp222:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd970, %rd7260;
	// begin inline asm
	{  xor.b64 %rd970, %rd651, %rd914;  xor.b64 %rd970, %rd970, %rd784;}
	// end inline asm
$L__tmp223:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd956, %rd7260;
	// begin inline asm
	{  xor.b64 %rd956, %rd637, %rd914;  xor.b64 %rd956, %rd956, %rd784;}
	// end inline asm
$L__tmp224:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r452}, %rd760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r453,%dummy}, %rd760;
	}
	shf.l.wrap.b32 	%r454, %r453, %r452, 1;
	shf.l.wrap.b32 	%r455, %r452, %r453, 1;
	mov.b64 	%rd939, {%r455, %r454};
$L__tmp225:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd960, %rd7260;
	// begin inline asm
	{  xor.b64 %rd960, %rd641, %rd939;  xor.b64 %rd960, %rd960, %rd796;}
	// end inline asm
$L__tmp226:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd944, %rd7260;
	// begin inline asm
	{  xor.b64 %rd944, %rd693, %rd939;  xor.b64 %rd944, %rd944, %rd796;}
	// end inline asm
$L__tmp227:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd946, %rd7260;
	// begin inline asm
	{  xor.b64 %rd946, %rd627, %rd939;  xor.b64 %rd946, %rd946, %rd796;}
	// end inline asm
$L__tmp228:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd954, %rd7260;
	// begin inline asm
	{  xor.b64 %rd954, %rd635, %rd939;  xor.b64 %rd954, %rd954, %rd796;}
	// end inline asm
$L__tmp229:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd962, %rd7260;
	// begin inline asm
	{  xor.b64 %rd962, %rd753, %rd939;  xor.b64 %rd962, %rd962, %rd796;}
	// end inline asm
$L__tmp230:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 372 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd942;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd942, {scr,lo};}
	// end inline asm
$L__tmp231:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 373 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd944;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd944, {scr,lo};}
	// end inline asm
$L__tmp232:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:374     state[ 9] = ROTR64( state[22],  3 );
	.loc	1 374 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r456,%dummy}, %rd887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r457}, %rd887;
	}
	shf.r.wrap.b32 	%r458, %r457, %r456, 3;
	shf.r.wrap.b32 	%r459, %r456, %r457, 3;
	mov.b64 	%rd1014, {%r459, %r458};
$L__tmp233:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 375 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd946;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd946, {scr,lo};}
	// end inline asm
$L__tmp234:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 376 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r323;mov.b64 {hi,lo}, %rd948;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd948, {scr,lo};}
	// end inline asm
$L__tmp235:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:377     state[20] = ROTR64( state[ 2],  2 );
	.loc	1 377 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r460,%dummy}, %rd867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r461}, %rd867;
	}
	shf.r.wrap.b32 	%r462, %r461, %r460, 2;
	shf.r.wrap.b32 	%r463, %r460, %r461, 2;
	mov.b64 	%rd1075, {%r463, %r462};
$L__tmp236:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 378 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd950;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd950, {scr,lo};}
	// end inline asm
$L__tmp237:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 379 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd952;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd952, {scr,lo};}
	// end inline asm
$L__tmp238:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:169     asm ( "{"
	.loc	1 169 5, function_name $L__info_string8, inlined_at 1 380 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd954;prmt.b32 scr, hi, lo, 0x2107;prmt.b32 lo, hi, lo, 0x6543;mov.b64 %rd954, {scr,lo};}
	// end inline asm
$L__tmp239:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:183       asm ( "{"
	.loc	1 183 7, function_name $L__info_string9, inlined_at 1 381 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd956;prmt.b32 scr, lo, hi, 0x0765;prmt.b32 lo, lo, hi, 0x4321;mov.b64 %rd956, {scr,lo};}
	// end inline asm
$L__tmp240:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 382 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r326;mov.b64 {hi,lo}, %rd958;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd958, {scr,lo};}
	// end inline asm
$L__tmp241:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 386 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd960;                  mov.b32 mag, %r327;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd960, {scr,lo};             }
	// end inline asm
$L__tmp242:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 397 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r328;mov.b64 {hi,lo}, %rd962;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd962, {scr,lo};}
	// end inline asm
$L__tmp243:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:398     state[24] = ROTL64( state[21],  2 );
	.loc	1 398 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r464}, %rd862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r465,%dummy}, %rd862;
	}
	shf.l.wrap.b32 	%r466, %r465, %r464, 2;
	shf.l.wrap.b32 	%r467, %r464, %r465, 2;
	mov.b64 	%rd1074, {%r467, %r466};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:399     state[21] = ROTR64( state[ 8], 9 );            // R9
	.loc	1 399 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r468,%dummy}, %rd897;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r469}, %rd897;
	}
	shf.r.wrap.b32 	%r470, %r469, %r468, 9;
	shf.r.wrap.b32 	%r471, %r468, %r469, 9;
	mov.b64 	%rd1076, {%r471, %r470};
$L__tmp244:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 400 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r329;mov.b64 {hi,lo}, %rd964;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd964, {scr,lo};}
	// end inline asm
$L__tmp245:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:124     asm ("{"
	.loc	1 124 5, function_name $L__info_string11, inlined_at 1 405 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd966;                  mov.b32 mag, %r331;                      shf.l.wrap.b32 scr, lo, hi, mag;      shf.l.wrap.b32 lo, hi, lo, mag;       mov.b64 %rd966, {scr,lo};             }
	// end inline asm
$L__tmp246:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 406 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd968;                  mov.b32 mag, %r331;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd968, {scr,lo};             }
	// end inline asm
$L__tmp247:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 414 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd970;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd970, {scr,lo};}
	// end inline asm
$L__tmp248:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 415 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r333;mov.b64 {hi,lo}, %rd972;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd972, {scr,lo};}
	// end inline asm
$L__tmp249:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 416 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r334;mov.b64 {hi,lo}, %rd974;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd974, {scr,lo};}
	// end inline asm
$L__tmp250:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:417     state[11] = ROTL64( state[ 7],  6 );
	.loc	1 417 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r472}, %rd872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r473,%dummy}, %rd872;
	}
	shf.l.wrap.b32 	%r474, %r473, %r472, 6;
	shf.l.wrap.b32 	%r475, %r472, %r473, 6;
	mov.b64 	%rd1036, {%r475, %r474};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:418     state[ 7] = ROTL64( state[10],  3 );
	.loc	1 418 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r476}, %rd827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r477,%dummy}, %rd827;
	}
	shf.l.wrap.b32 	%r478, %r477, %r476, 3;
	shf.l.wrap.b32 	%r479, %r476, %r477, 3;
	mov.b64 	%rd1006, {%r479, %r478};
$L__tmp251:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:199     asm ("{"
	.loc	1 199 5, function_name $L__info_string12, inlined_at 1 419 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd976;shf.l.wrap.b32 scr, lo, hi, 1;shf.l.wrap.b32 lo, hi, lo, 1;mov.b64 %rd976, {scr,lo};}
	// end inline asm
$L__tmp252:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd978, %rd817;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd978;  mov.b64 {bh,bl}, %rd942;  mov.b64 {ch,cl}, %rd950;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd978, {ah,al};}
	// end inline asm
$L__tmp253:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd982, %rd942;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd982;  mov.b64 {bh,bl}, %rd950;  mov.b64 {ch,cl}, %rd970;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd982, {ah,al};}
	// end inline asm
$L__tmp254:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd950;  mov.b64 {bh,bl}, %rd970;  mov.b64 {ch,cl}, %rd962;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd950, {ah,al};}
	// end inline asm
$L__tmp255:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd970;  mov.b64 {bh,bl}, %rd962;  mov.b64 {ch,cl}, %rd817;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd970, {ah,al};}
	// end inline asm
$L__tmp256:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd962;  mov.b64 {bh,bl}, %rd817;  mov.b64 {ch,cl}, %rd942;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd962, {ah,al};}
	// end inline asm
$L__tmp257:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd998, %rd968;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd998;  mov.b64 {bh,bl}, %rd944;  mov.b64 {ch,cl}, %rd1006;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd998, {ah,al};}
	// end inline asm
$L__tmp258:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd1002, %rd944;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1002;  mov.b64 {bh,bl}, %rd1006;  mov.b64 {ch,cl}, %rd964;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1002, {ah,al};}
	// end inline asm
$L__tmp259:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1006;  mov.b64 {bh,bl}, %rd964;  mov.b64 {ch,cl}, %rd1014;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1006, {ah,al};}
	// end inline asm
$L__tmp260:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd964;  mov.b64 {bh,bl}, %rd1014;  mov.b64 {ch,cl}, %rd968;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd964, {ah,al};}
	// end inline asm
$L__tmp261:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1014;  mov.b64 {bh,bl}, %rd968;  mov.b64 {ch,cl}, %rd944;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1014, {ah,al};}
	// end inline asm
$L__tmp262:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd1018, %rd976;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1018;  mov.b64 {bh,bl}, %rd1036;  mov.b64 {ch,cl}, %rd952;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1018, {ah,al};}
	// end inline asm
$L__tmp263:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd1022, %rd1036;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1022;  mov.b64 {bh,bl}, %rd952;  mov.b64 {ch,cl}, %rd954;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1022, {ah,al};}
	// end inline asm
$L__tmp264:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd952;  mov.b64 {bh,bl}, %rd954;  mov.b64 {ch,cl}, %rd948;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd952, {ah,al};}
	// end inline asm
$L__tmp265:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd954;  mov.b64 {bh,bl}, %rd948;  mov.b64 {ch,cl}, %rd976;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd954, {ah,al};}
	// end inline asm
$L__tmp266:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd948;  mov.b64 {bh,bl}, %rd976;  mov.b64 {ch,cl}, %rd1036;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd948, {ah,al};}
	// end inline asm
$L__tmp267:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd1038, %rd960;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1038;  mov.b64 {bh,bl}, %rd966;  mov.b64 {ch,cl}, %rd974;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1038, {ah,al};}
	// end inline asm
$L__tmp268:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd1042, %rd966;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1042;  mov.b64 {bh,bl}, %rd974;  mov.b64 {ch,cl}, %rd972;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1042, {ah,al};}
	// end inline asm
$L__tmp269:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd974;  mov.b64 {bh,bl}, %rd972;  mov.b64 {ch,cl}, %rd956;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd974, {ah,al};}
	// end inline asm
$L__tmp270:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd972;  mov.b64 {bh,bl}, %rd956;  mov.b64 {ch,cl}, %rd960;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd972, {ah,al};}
	// end inline asm
$L__tmp271:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd956;  mov.b64 {bh,bl}, %rd960;  mov.b64 {ch,cl}, %rd966;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd956, {ah,al};}
	// end inline asm
$L__tmp272:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd1058, %rd1075;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1058;  mov.b64 {bh,bl}, %rd1076;  mov.b64 {ch,cl}, %rd946;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1058, {ah,al};}
	// end inline asm
$L__tmp273:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd1062, %rd1076;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1062;  mov.b64 {bh,bl}, %rd946;  mov.b64 {ch,cl}, %rd958;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1062, {ah,al};}
	// end inline asm
$L__tmp274:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd946;  mov.b64 {bh,bl}, %rd958;  mov.b64 {ch,cl}, %rd1074;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd946, {ah,al};}
	// end inline asm
$L__tmp275:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd958;  mov.b64 {bh,bl}, %rd1074;  mov.b64 {ch,cl}, %rd1075;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd958, {ah,al};}
	// end inline asm
$L__tmp276:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1074;  mov.b64 {bh,bl}, %rd1075;  mov.b64 {ch,cl}, %rd1076;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1074, {ah,al};}
	// end inline asm
$L__tmp277:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:437     state[0] = state[0] ^ RClocal[i];
	.loc	1 437 5, function_name $L__info_string0, inlined_at 1 475 7
	xor.b64  	%rd1139, %rd978, -9223372034707259392;
$L__tmp278:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd1081, %rd1139;
	// begin inline asm
	  xor.b64 %rd1081, %rd1081, %rd998;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1081, %rd1081, %rd1018;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1081, %rd1081, %rd1038;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1081, %rd1081, %rd1058;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd1093, %rd982;
	// begin inline asm
	  xor.b64 %rd1093, %rd1093, %rd1002;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1093, %rd1093, %rd1022;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1093, %rd1093, %rd1042;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1093, %rd1093, %rd1062;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd1105, %rd950;
	// begin inline asm
	  xor.b64 %rd1105, %rd1105, %rd1006;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1105, %rd1105, %rd952;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1105, %rd1105, %rd974;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1105, %rd1105, %rd946;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd1117, %rd970;
	// begin inline asm
	  xor.b64 %rd1117, %rd1117, %rd964;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1117, %rd1117, %rd954;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1117, %rd1117, %rd972;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1117, %rd1117, %rd958;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd1129, %rd962;
	// begin inline asm
	  xor.b64 %rd1129, %rd1129, %rd1014;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1129, %rd1129, %rd948;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1129, %rd1129, %rd956;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1129, %rd1129, %rd1074;
	// end inline asm
$L__tmp279:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r480}, %rd1093;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r481,%dummy}, %rd1093;
	}
	shf.l.wrap.b32 	%r482, %r481, %r480, 1;
	shf.l.wrap.b32 	%r483, %r480, %r481, 1;
	mov.b64 	%rd1160, {%r483, %r482};
$L__tmp280:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd1138, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1138, %rd1139, %rd1160;  xor.b64 %rd1138, %rd1138, %rd1129;}
	// end inline asm
$L__tmp281:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd1287, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1287, %rd998, %rd1160;  xor.b64 %rd1287, %rd1287, %rd1129;}
	// end inline asm
$L__tmp282:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd1148, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1148, %rd1018, %rd1160;  xor.b64 %rd1148, %rd1148, %rd1129;}
	// end inline asm
$L__tmp283:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd1279, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1279, %rd1038, %rd1160;  xor.b64 %rd1279, %rd1279, %rd1129;}
	// end inline asm
$L__tmp284:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd1269, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1269, %rd1058, %rd1160;  xor.b64 %rd1269, %rd1269, %rd1129;}
	// end inline asm
$L__tmp285:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r484}, %rd1105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r485,%dummy}, %rd1105;
	}
	shf.l.wrap.b32 	%r486, %r485, %r484, 1;
	shf.l.wrap.b32 	%r487, %r484, %r485, 1;
	mov.b64 	%rd1185, {%r487, %r486};
$L__tmp286:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd1297, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1297, %rd982, %rd1185;  xor.b64 %rd1297, %rd1297, %rd1081;}
	// end inline asm
$L__tmp287:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd1263, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1263, %rd1002, %rd1185;  xor.b64 %rd1263, %rd1263, %rd1081;}
	// end inline asm
$L__tmp288:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd1295, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1295, %rd1022, %rd1185;  xor.b64 %rd1295, %rd1295, %rd1081;}
	// end inline asm
$L__tmp289:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd1285, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1285, %rd1042, %rd1185;  xor.b64 %rd1285, %rd1285, %rd1081;}
	// end inline asm
$L__tmp290:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd1183, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1183, %rd1062, %rd1185;  xor.b64 %rd1183, %rd1183, %rd1081;}
	// end inline asm
$L__tmp291:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r488}, %rd1117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r489,%dummy}, %rd1117;
	}
	shf.l.wrap.b32 	%r490, %r489, %r488, 1;
	shf.l.wrap.b32 	%r491, %r488, %r489, 1;
	mov.b64 	%rd1210, {%r491, %r490};
$L__tmp292:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd1188, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1188, %rd950, %rd1210;  xor.b64 %rd1188, %rd1188, %rd1093;}
	// end inline asm
$L__tmp293:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd1193, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1193, %rd1006, %rd1210;  xor.b64 %rd1193, %rd1193, %rd1093;}
	// end inline asm
$L__tmp294:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd1271, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1271, %rd952, %rd1210;  xor.b64 %rd1271, %rd1271, %rd1093;}
	// end inline asm
$L__tmp295:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd1293, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1293, %rd974, %rd1210;  xor.b64 %rd1293, %rd1293, %rd1093;}
	// end inline asm
$L__tmp296:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd1208, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1208, %rd946, %rd1210;  xor.b64 %rd1208, %rd1208, %rd1093;}
	// end inline asm
$L__tmp297:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r492}, %rd1129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r493,%dummy}, %rd1129;
	}
	shf.l.wrap.b32 	%r494, %r493, %r492, 1;
	shf.l.wrap.b32 	%r495, %r492, %r493, 1;
	mov.b64 	%rd1235, {%r495, %r494};
$L__tmp298:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd1289, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1289, %rd970, %rd1235;  xor.b64 %rd1289, %rd1289, %rd1105;}
	// end inline asm
$L__tmp299:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd1218, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1218, %rd964, %rd1235;  xor.b64 %rd1218, %rd1218, %rd1105;}
	// end inline asm
$L__tmp300:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd1273, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1273, %rd954, %rd1235;  xor.b64 %rd1273, %rd1273, %rd1105;}
	// end inline asm
$L__tmp301:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd1291, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1291, %rd972, %rd1235;  xor.b64 %rd1291, %rd1291, %rd1105;}
	// end inline asm
$L__tmp302:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd1277, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1277, %rd958, %rd1235;  xor.b64 %rd1277, %rd1277, %rd1105;}
	// end inline asm
$L__tmp303:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r496}, %rd1081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r497,%dummy}, %rd1081;
	}
	shf.l.wrap.b32 	%r498, %r497, %r496, 1;
	shf.l.wrap.b32 	%r499, %r496, %r497, 1;
	mov.b64 	%rd1260, {%r499, %r498};
$L__tmp304:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd1281, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1281, %rd962, %rd1260;  xor.b64 %rd1281, %rd1281, %rd1117;}
	// end inline asm
$L__tmp305:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd1265, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1265, %rd1014, %rd1260;  xor.b64 %rd1265, %rd1265, %rd1117;}
	// end inline asm
$L__tmp306:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd1267, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1267, %rd948, %rd1260;  xor.b64 %rd1267, %rd1267, %rd1117;}
	// end inline asm
$L__tmp307:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd1275, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1275, %rd956, %rd1260;  xor.b64 %rd1275, %rd1275, %rd1117;}
	// end inline asm
$L__tmp308:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd1283, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1283, %rd1074, %rd1260;  xor.b64 %rd1283, %rd1283, %rd1117;}
	// end inline asm
$L__tmp309:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 372 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd1263;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd1263, {scr,lo};}
	// end inline asm
$L__tmp310:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 373 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd1265;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd1265, {scr,lo};}
	// end inline asm
$L__tmp311:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:374     state[ 9] = ROTR64( state[22],  3 );
	.loc	1 374 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r500,%dummy}, %rd1208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r501}, %rd1208;
	}
	shf.r.wrap.b32 	%r502, %r501, %r500, 3;
	shf.r.wrap.b32 	%r503, %r500, %r501, 3;
	mov.b64 	%rd1335, {%r503, %r502};
$L__tmp312:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 375 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd1267;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd1267, {scr,lo};}
	// end inline asm
$L__tmp313:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 376 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r323;mov.b64 {hi,lo}, %rd1269;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd1269, {scr,lo};}
	// end inline asm
$L__tmp314:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:377     state[20] = ROTR64( state[ 2],  2 );
	.loc	1 377 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r504,%dummy}, %rd1188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r505}, %rd1188;
	}
	shf.r.wrap.b32 	%r506, %r505, %r504, 2;
	shf.r.wrap.b32 	%r507, %r504, %r505, 2;
	mov.b64 	%rd1396, {%r507, %r506};
$L__tmp315:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 378 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd1271;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd1271, {scr,lo};}
	// end inline asm
$L__tmp316:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 379 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd1273;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd1273, {scr,lo};}
	// end inline asm
$L__tmp317:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:169     asm ( "{"
	.loc	1 169 5, function_name $L__info_string8, inlined_at 1 380 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd1275;prmt.b32 scr, hi, lo, 0x2107;prmt.b32 lo, hi, lo, 0x6543;mov.b64 %rd1275, {scr,lo};}
	// end inline asm
$L__tmp318:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:183       asm ( "{"
	.loc	1 183 7, function_name $L__info_string9, inlined_at 1 381 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd1277;prmt.b32 scr, lo, hi, 0x0765;prmt.b32 lo, lo, hi, 0x4321;mov.b64 %rd1277, {scr,lo};}
	// end inline asm
$L__tmp319:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 382 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r326;mov.b64 {hi,lo}, %rd1279;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd1279, {scr,lo};}
	// end inline asm
$L__tmp320:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 386 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd1281;                  mov.b32 mag, %r327;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd1281, {scr,lo};             }
	// end inline asm
$L__tmp321:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 397 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r328;mov.b64 {hi,lo}, %rd1283;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd1283, {scr,lo};}
	// end inline asm
$L__tmp322:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:398     state[24] = ROTL64( state[21],  2 );
	.loc	1 398 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r508}, %rd1183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r509,%dummy}, %rd1183;
	}
	shf.l.wrap.b32 	%r510, %r509, %r508, 2;
	shf.l.wrap.b32 	%r511, %r508, %r509, 2;
	mov.b64 	%rd1395, {%r511, %r510};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:399     state[21] = ROTR64( state[ 8], 9 );            // R9
	.loc	1 399 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r512,%dummy}, %rd1218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r513}, %rd1218;
	}
	shf.r.wrap.b32 	%r514, %r513, %r512, 9;
	shf.r.wrap.b32 	%r515, %r512, %r513, 9;
	mov.b64 	%rd1397, {%r515, %r514};
$L__tmp323:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 400 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r329;mov.b64 {hi,lo}, %rd1285;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd1285, {scr,lo};}
	// end inline asm
$L__tmp324:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:124     asm ("{"
	.loc	1 124 5, function_name $L__info_string11, inlined_at 1 405 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd1287;                  mov.b32 mag, %r331;                      shf.l.wrap.b32 scr, lo, hi, mag;      shf.l.wrap.b32 lo, hi, lo, mag;       mov.b64 %rd1287, {scr,lo};             }
	// end inline asm
$L__tmp325:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 406 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd1289;                  mov.b32 mag, %r331;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd1289, {scr,lo};             }
	// end inline asm
$L__tmp326:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 414 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd1291;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd1291, {scr,lo};}
	// end inline asm
$L__tmp327:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 415 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r333;mov.b64 {hi,lo}, %rd1293;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd1293, {scr,lo};}
	// end inline asm
$L__tmp328:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 416 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r334;mov.b64 {hi,lo}, %rd1295;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd1295, {scr,lo};}
	// end inline asm
$L__tmp329:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:417     state[11] = ROTL64( state[ 7],  6 );
	.loc	1 417 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r516}, %rd1193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r517,%dummy}, %rd1193;
	}
	shf.l.wrap.b32 	%r518, %r517, %r516, 6;
	shf.l.wrap.b32 	%r519, %r516, %r517, 6;
	mov.b64 	%rd1357, {%r519, %r518};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:418     state[ 7] = ROTL64( state[10],  3 );
	.loc	1 418 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r520}, %rd1148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r521,%dummy}, %rd1148;
	}
	shf.l.wrap.b32 	%r522, %r521, %r520, 3;
	shf.l.wrap.b32 	%r523, %r520, %r521, 3;
	mov.b64 	%rd1327, {%r523, %r522};
$L__tmp330:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:199     asm ("{"
	.loc	1 199 5, function_name $L__info_string12, inlined_at 1 419 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd1297;shf.l.wrap.b32 scr, lo, hi, 1;shf.l.wrap.b32 lo, hi, lo, 1;mov.b64 %rd1297, {scr,lo};}
	// end inline asm
$L__tmp331:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd1299, %rd1138;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1299;  mov.b64 {bh,bl}, %rd1263;  mov.b64 {ch,cl}, %rd1271;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1299, {ah,al};}
	// end inline asm
$L__tmp332:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd1303, %rd1263;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1303;  mov.b64 {bh,bl}, %rd1271;  mov.b64 {ch,cl}, %rd1291;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1303, {ah,al};}
	// end inline asm
$L__tmp333:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1271;  mov.b64 {bh,bl}, %rd1291;  mov.b64 {ch,cl}, %rd1283;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1271, {ah,al};}
	// end inline asm
$L__tmp334:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1291;  mov.b64 {bh,bl}, %rd1283;  mov.b64 {ch,cl}, %rd1138;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1291, {ah,al};}
	// end inline asm
$L__tmp335:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1283;  mov.b64 {bh,bl}, %rd1138;  mov.b64 {ch,cl}, %rd1263;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1283, {ah,al};}
	// end inline asm
$L__tmp336:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd1319, %rd1289;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1319;  mov.b64 {bh,bl}, %rd1265;  mov.b64 {ch,cl}, %rd1327;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1319, {ah,al};}
	// end inline asm
$L__tmp337:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd1323, %rd1265;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1323;  mov.b64 {bh,bl}, %rd1327;  mov.b64 {ch,cl}, %rd1285;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1323, {ah,al};}
	// end inline asm
$L__tmp338:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1327;  mov.b64 {bh,bl}, %rd1285;  mov.b64 {ch,cl}, %rd1335;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1327, {ah,al};}
	// end inline asm
$L__tmp339:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1285;  mov.b64 {bh,bl}, %rd1335;  mov.b64 {ch,cl}, %rd1289;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1285, {ah,al};}
	// end inline asm
$L__tmp340:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1335;  mov.b64 {bh,bl}, %rd1289;  mov.b64 {ch,cl}, %rd1265;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1335, {ah,al};}
	// end inline asm
$L__tmp341:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd1339, %rd1297;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1339;  mov.b64 {bh,bl}, %rd1357;  mov.b64 {ch,cl}, %rd1273;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1339, {ah,al};}
	// end inline asm
$L__tmp342:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd1343, %rd1357;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1343;  mov.b64 {bh,bl}, %rd1273;  mov.b64 {ch,cl}, %rd1275;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1343, {ah,al};}
	// end inline asm
$L__tmp343:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1273;  mov.b64 {bh,bl}, %rd1275;  mov.b64 {ch,cl}, %rd1269;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1273, {ah,al};}
	// end inline asm
$L__tmp344:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1275;  mov.b64 {bh,bl}, %rd1269;  mov.b64 {ch,cl}, %rd1297;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1275, {ah,al};}
	// end inline asm
$L__tmp345:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1269;  mov.b64 {bh,bl}, %rd1297;  mov.b64 {ch,cl}, %rd1357;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1269, {ah,al};}
	// end inline asm
$L__tmp346:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd1359, %rd1281;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1359;  mov.b64 {bh,bl}, %rd1287;  mov.b64 {ch,cl}, %rd1295;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1359, {ah,al};}
	// end inline asm
$L__tmp347:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd1363, %rd1287;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1363;  mov.b64 {bh,bl}, %rd1295;  mov.b64 {ch,cl}, %rd1293;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1363, {ah,al};}
	// end inline asm
$L__tmp348:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1295;  mov.b64 {bh,bl}, %rd1293;  mov.b64 {ch,cl}, %rd1277;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1295, {ah,al};}
	// end inline asm
$L__tmp349:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1293;  mov.b64 {bh,bl}, %rd1277;  mov.b64 {ch,cl}, %rd1281;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1293, {ah,al};}
	// end inline asm
$L__tmp350:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1277;  mov.b64 {bh,bl}, %rd1281;  mov.b64 {ch,cl}, %rd1287;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1277, {ah,al};}
	// end inline asm
$L__tmp351:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd1379, %rd1396;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1379;  mov.b64 {bh,bl}, %rd1397;  mov.b64 {ch,cl}, %rd1267;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1379, {ah,al};}
	// end inline asm
$L__tmp352:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd1383, %rd1397;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1383;  mov.b64 {bh,bl}, %rd1267;  mov.b64 {ch,cl}, %rd1279;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1383, {ah,al};}
	// end inline asm
$L__tmp353:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1267;  mov.b64 {bh,bl}, %rd1279;  mov.b64 {ch,cl}, %rd1395;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1267, {ah,al};}
	// end inline asm
$L__tmp354:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1279;  mov.b64 {bh,bl}, %rd1395;  mov.b64 {ch,cl}, %rd1396;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1279, {ah,al};}
	// end inline asm
$L__tmp355:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1395;  mov.b64 {bh,bl}, %rd1396;  mov.b64 {ch,cl}, %rd1397;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1395, {ah,al};}
	// end inline asm
$L__tmp356:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:437     state[0] = state[0] ^ RClocal[i];
	.loc	1 437 5, function_name $L__info_string0, inlined_at 1 475 7
	xor.b64  	%rd1460, %rd1299, 32907;
$L__tmp357:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd1402, %rd1460;
	// begin inline asm
	  xor.b64 %rd1402, %rd1402, %rd1319;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1402, %rd1402, %rd1339;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1402, %rd1402, %rd1359;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1402, %rd1402, %rd1379;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd1414, %rd1303;
	// begin inline asm
	  xor.b64 %rd1414, %rd1414, %rd1323;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1414, %rd1414, %rd1343;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1414, %rd1414, %rd1363;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1414, %rd1414, %rd1383;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd1426, %rd1271;
	// begin inline asm
	  xor.b64 %rd1426, %rd1426, %rd1327;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1426, %rd1426, %rd1273;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1426, %rd1426, %rd1295;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1426, %rd1426, %rd1267;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd1438, %rd1291;
	// begin inline asm
	  xor.b64 %rd1438, %rd1438, %rd1285;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1438, %rd1438, %rd1275;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1438, %rd1438, %rd1293;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1438, %rd1438, %rd1279;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd1450, %rd1283;
	// begin inline asm
	  xor.b64 %rd1450, %rd1450, %rd1335;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1450, %rd1450, %rd1269;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1450, %rd1450, %rd1277;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1450, %rd1450, %rd1395;
	// end inline asm
$L__tmp358:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r524}, %rd1414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r525,%dummy}, %rd1414;
	}
	shf.l.wrap.b32 	%r526, %r525, %r524, 1;
	shf.l.wrap.b32 	%r527, %r524, %r525, 1;
	mov.b64 	%rd1481, {%r527, %r526};
$L__tmp359:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd1459, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1459, %rd1460, %rd1481;  xor.b64 %rd1459, %rd1459, %rd1450;}
	// end inline asm
$L__tmp360:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd1608, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1608, %rd1319, %rd1481;  xor.b64 %rd1608, %rd1608, %rd1450;}
	// end inline asm
$L__tmp361:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd1469, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1469, %rd1339, %rd1481;  xor.b64 %rd1469, %rd1469, %rd1450;}
	// end inline asm
$L__tmp362:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd1600, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1600, %rd1359, %rd1481;  xor.b64 %rd1600, %rd1600, %rd1450;}
	// end inline asm
$L__tmp363:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd1590, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1590, %rd1379, %rd1481;  xor.b64 %rd1590, %rd1590, %rd1450;}
	// end inline asm
$L__tmp364:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r528}, %rd1426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r529,%dummy}, %rd1426;
	}
	shf.l.wrap.b32 	%r530, %r529, %r528, 1;
	shf.l.wrap.b32 	%r531, %r528, %r529, 1;
	mov.b64 	%rd1506, {%r531, %r530};
$L__tmp365:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd1618, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1618, %rd1303, %rd1506;  xor.b64 %rd1618, %rd1618, %rd1402;}
	// end inline asm
$L__tmp366:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd1584, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1584, %rd1323, %rd1506;  xor.b64 %rd1584, %rd1584, %rd1402;}
	// end inline asm
$L__tmp367:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd1616, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1616, %rd1343, %rd1506;  xor.b64 %rd1616, %rd1616, %rd1402;}
	// end inline asm
$L__tmp368:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd1606, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1606, %rd1363, %rd1506;  xor.b64 %rd1606, %rd1606, %rd1402;}
	// end inline asm
$L__tmp369:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd1504, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1504, %rd1383, %rd1506;  xor.b64 %rd1504, %rd1504, %rd1402;}
	// end inline asm
$L__tmp370:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r532}, %rd1438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r533,%dummy}, %rd1438;
	}
	shf.l.wrap.b32 	%r534, %r533, %r532, 1;
	shf.l.wrap.b32 	%r535, %r532, %r533, 1;
	mov.b64 	%rd1531, {%r535, %r534};
$L__tmp371:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd1509, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1509, %rd1271, %rd1531;  xor.b64 %rd1509, %rd1509, %rd1414;}
	// end inline asm
$L__tmp372:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd1514, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1514, %rd1327, %rd1531;  xor.b64 %rd1514, %rd1514, %rd1414;}
	// end inline asm
$L__tmp373:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd1592, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1592, %rd1273, %rd1531;  xor.b64 %rd1592, %rd1592, %rd1414;}
	// end inline asm
$L__tmp374:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd1614, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1614, %rd1295, %rd1531;  xor.b64 %rd1614, %rd1614, %rd1414;}
	// end inline asm
$L__tmp375:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd1529, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1529, %rd1267, %rd1531;  xor.b64 %rd1529, %rd1529, %rd1414;}
	// end inline asm
$L__tmp376:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r536}, %rd1450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r537,%dummy}, %rd1450;
	}
	shf.l.wrap.b32 	%r538, %r537, %r536, 1;
	shf.l.wrap.b32 	%r539, %r536, %r537, 1;
	mov.b64 	%rd1556, {%r539, %r538};
$L__tmp377:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd1610, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1610, %rd1291, %rd1556;  xor.b64 %rd1610, %rd1610, %rd1426;}
	// end inline asm
$L__tmp378:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd1539, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1539, %rd1285, %rd1556;  xor.b64 %rd1539, %rd1539, %rd1426;}
	// end inline asm
$L__tmp379:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd1594, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1594, %rd1275, %rd1556;  xor.b64 %rd1594, %rd1594, %rd1426;}
	// end inline asm
$L__tmp380:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd1612, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1612, %rd1293, %rd1556;  xor.b64 %rd1612, %rd1612, %rd1426;}
	// end inline asm
$L__tmp381:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd1598, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1598, %rd1279, %rd1556;  xor.b64 %rd1598, %rd1598, %rd1426;}
	// end inline asm
$L__tmp382:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r540}, %rd1402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r541,%dummy}, %rd1402;
	}
	shf.l.wrap.b32 	%r542, %r541, %r540, 1;
	shf.l.wrap.b32 	%r543, %r540, %r541, 1;
	mov.b64 	%rd1581, {%r543, %r542};
$L__tmp383:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd1602, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1602, %rd1283, %rd1581;  xor.b64 %rd1602, %rd1602, %rd1438;}
	// end inline asm
$L__tmp384:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd1586, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1586, %rd1335, %rd1581;  xor.b64 %rd1586, %rd1586, %rd1438;}
	// end inline asm
$L__tmp385:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd1588, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1588, %rd1269, %rd1581;  xor.b64 %rd1588, %rd1588, %rd1438;}
	// end inline asm
$L__tmp386:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd1596, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1596, %rd1277, %rd1581;  xor.b64 %rd1596, %rd1596, %rd1438;}
	// end inline asm
$L__tmp387:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd1604, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1604, %rd1395, %rd1581;  xor.b64 %rd1604, %rd1604, %rd1438;}
	// end inline asm
$L__tmp388:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 372 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd1584;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd1584, {scr,lo};}
	// end inline asm
$L__tmp389:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 373 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd1586;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd1586, {scr,lo};}
	// end inline asm
$L__tmp390:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:374     state[ 9] = ROTR64( state[22],  3 );
	.loc	1 374 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r544,%dummy}, %rd1529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r545}, %rd1529;
	}
	shf.r.wrap.b32 	%r546, %r545, %r544, 3;
	shf.r.wrap.b32 	%r547, %r544, %r545, 3;
	mov.b64 	%rd1656, {%r547, %r546};
$L__tmp391:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 375 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd1588;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd1588, {scr,lo};}
	// end inline asm
$L__tmp392:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 376 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r323;mov.b64 {hi,lo}, %rd1590;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd1590, {scr,lo};}
	// end inline asm
$L__tmp393:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:377     state[20] = ROTR64( state[ 2],  2 );
	.loc	1 377 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r548,%dummy}, %rd1509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r549}, %rd1509;
	}
	shf.r.wrap.b32 	%r550, %r549, %r548, 2;
	shf.r.wrap.b32 	%r551, %r548, %r549, 2;
	mov.b64 	%rd1717, {%r551, %r550};
$L__tmp394:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 378 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd1592;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd1592, {scr,lo};}
	// end inline asm
$L__tmp395:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 379 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd1594;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd1594, {scr,lo};}
	// end inline asm
$L__tmp396:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:169     asm ( "{"
	.loc	1 169 5, function_name $L__info_string8, inlined_at 1 380 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd1596;prmt.b32 scr, hi, lo, 0x2107;prmt.b32 lo, hi, lo, 0x6543;mov.b64 %rd1596, {scr,lo};}
	// end inline asm
$L__tmp397:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:183       asm ( "{"
	.loc	1 183 7, function_name $L__info_string9, inlined_at 1 381 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd1598;prmt.b32 scr, lo, hi, 0x0765;prmt.b32 lo, lo, hi, 0x4321;mov.b64 %rd1598, {scr,lo};}
	// end inline asm
$L__tmp398:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 382 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r326;mov.b64 {hi,lo}, %rd1600;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd1600, {scr,lo};}
	// end inline asm
$L__tmp399:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 386 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd1602;                  mov.b32 mag, %r327;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd1602, {scr,lo};             }
	// end inline asm
$L__tmp400:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 397 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r328;mov.b64 {hi,lo}, %rd1604;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd1604, {scr,lo};}
	// end inline asm
$L__tmp401:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:398     state[24] = ROTL64( state[21],  2 );
	.loc	1 398 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r552}, %rd1504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r553,%dummy}, %rd1504;
	}
	shf.l.wrap.b32 	%r554, %r553, %r552, 2;
	shf.l.wrap.b32 	%r555, %r552, %r553, 2;
	mov.b64 	%rd1716, {%r555, %r554};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:399     state[21] = ROTR64( state[ 8], 9 );            // R9
	.loc	1 399 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r556,%dummy}, %rd1539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r557}, %rd1539;
	}
	shf.r.wrap.b32 	%r558, %r557, %r556, 9;
	shf.r.wrap.b32 	%r559, %r556, %r557, 9;
	mov.b64 	%rd1718, {%r559, %r558};
$L__tmp402:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 400 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r329;mov.b64 {hi,lo}, %rd1606;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd1606, {scr,lo};}
	// end inline asm
$L__tmp403:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:124     asm ("{"
	.loc	1 124 5, function_name $L__info_string11, inlined_at 1 405 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd1608;                  mov.b32 mag, %r331;                      shf.l.wrap.b32 scr, lo, hi, mag;      shf.l.wrap.b32 lo, hi, lo, mag;       mov.b64 %rd1608, {scr,lo};             }
	// end inline asm
$L__tmp404:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 406 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd1610;                  mov.b32 mag, %r331;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd1610, {scr,lo};             }
	// end inline asm
$L__tmp405:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 414 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd1612;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd1612, {scr,lo};}
	// end inline asm
$L__tmp406:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 415 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r333;mov.b64 {hi,lo}, %rd1614;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd1614, {scr,lo};}
	// end inline asm
$L__tmp407:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 416 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r334;mov.b64 {hi,lo}, %rd1616;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd1616, {scr,lo};}
	// end inline asm
$L__tmp408:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:417     state[11] = ROTL64( state[ 7],  6 );
	.loc	1 417 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r560}, %rd1514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r561,%dummy}, %rd1514;
	}
	shf.l.wrap.b32 	%r562, %r561, %r560, 6;
	shf.l.wrap.b32 	%r563, %r560, %r561, 6;
	mov.b64 	%rd1678, {%r563, %r562};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:418     state[ 7] = ROTL64( state[10],  3 );
	.loc	1 418 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r564}, %rd1469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r565,%dummy}, %rd1469;
	}
	shf.l.wrap.b32 	%r566, %r565, %r564, 3;
	shf.l.wrap.b32 	%r567, %r564, %r565, 3;
	mov.b64 	%rd1648, {%r567, %r566};
$L__tmp409:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:199     asm ("{"
	.loc	1 199 5, function_name $L__info_string12, inlined_at 1 419 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd1618;shf.l.wrap.b32 scr, lo, hi, 1;shf.l.wrap.b32 lo, hi, lo, 1;mov.b64 %rd1618, {scr,lo};}
	// end inline asm
$L__tmp410:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd1620, %rd1459;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1620;  mov.b64 {bh,bl}, %rd1584;  mov.b64 {ch,cl}, %rd1592;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1620, {ah,al};}
	// end inline asm
$L__tmp411:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd1624, %rd1584;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1624;  mov.b64 {bh,bl}, %rd1592;  mov.b64 {ch,cl}, %rd1612;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1624, {ah,al};}
	// end inline asm
$L__tmp412:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1592;  mov.b64 {bh,bl}, %rd1612;  mov.b64 {ch,cl}, %rd1604;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1592, {ah,al};}
	// end inline asm
$L__tmp413:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1612;  mov.b64 {bh,bl}, %rd1604;  mov.b64 {ch,cl}, %rd1459;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1612, {ah,al};}
	// end inline asm
$L__tmp414:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1604;  mov.b64 {bh,bl}, %rd1459;  mov.b64 {ch,cl}, %rd1584;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1604, {ah,al};}
	// end inline asm
$L__tmp415:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd1640, %rd1610;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1640;  mov.b64 {bh,bl}, %rd1586;  mov.b64 {ch,cl}, %rd1648;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1640, {ah,al};}
	// end inline asm
$L__tmp416:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd1644, %rd1586;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1644;  mov.b64 {bh,bl}, %rd1648;  mov.b64 {ch,cl}, %rd1606;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1644, {ah,al};}
	// end inline asm
$L__tmp417:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1648;  mov.b64 {bh,bl}, %rd1606;  mov.b64 {ch,cl}, %rd1656;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1648, {ah,al};}
	// end inline asm
$L__tmp418:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1606;  mov.b64 {bh,bl}, %rd1656;  mov.b64 {ch,cl}, %rd1610;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1606, {ah,al};}
	// end inline asm
$L__tmp419:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1656;  mov.b64 {bh,bl}, %rd1610;  mov.b64 {ch,cl}, %rd1586;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1656, {ah,al};}
	// end inline asm
$L__tmp420:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd1660, %rd1618;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1660;  mov.b64 {bh,bl}, %rd1678;  mov.b64 {ch,cl}, %rd1594;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1660, {ah,al};}
	// end inline asm
$L__tmp421:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd1664, %rd1678;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1664;  mov.b64 {bh,bl}, %rd1594;  mov.b64 {ch,cl}, %rd1596;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1664, {ah,al};}
	// end inline asm
$L__tmp422:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1594;  mov.b64 {bh,bl}, %rd1596;  mov.b64 {ch,cl}, %rd1590;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1594, {ah,al};}
	// end inline asm
$L__tmp423:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1596;  mov.b64 {bh,bl}, %rd1590;  mov.b64 {ch,cl}, %rd1618;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1596, {ah,al};}
	// end inline asm
$L__tmp424:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1590;  mov.b64 {bh,bl}, %rd1618;  mov.b64 {ch,cl}, %rd1678;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1590, {ah,al};}
	// end inline asm
$L__tmp425:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd1680, %rd1602;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1680;  mov.b64 {bh,bl}, %rd1608;  mov.b64 {ch,cl}, %rd1616;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1680, {ah,al};}
	// end inline asm
$L__tmp426:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd1684, %rd1608;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1684;  mov.b64 {bh,bl}, %rd1616;  mov.b64 {ch,cl}, %rd1614;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1684, {ah,al};}
	// end inline asm
$L__tmp427:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1616;  mov.b64 {bh,bl}, %rd1614;  mov.b64 {ch,cl}, %rd1598;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1616, {ah,al};}
	// end inline asm
$L__tmp428:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1614;  mov.b64 {bh,bl}, %rd1598;  mov.b64 {ch,cl}, %rd1602;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1614, {ah,al};}
	// end inline asm
$L__tmp429:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1598;  mov.b64 {bh,bl}, %rd1602;  mov.b64 {ch,cl}, %rd1608;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1598, {ah,al};}
	// end inline asm
$L__tmp430:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd1700, %rd1717;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1700;  mov.b64 {bh,bl}, %rd1718;  mov.b64 {ch,cl}, %rd1588;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1700, {ah,al};}
	// end inline asm
$L__tmp431:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd1704, %rd1718;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1704;  mov.b64 {bh,bl}, %rd1588;  mov.b64 {ch,cl}, %rd1600;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1704, {ah,al};}
	// end inline asm
$L__tmp432:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1588;  mov.b64 {bh,bl}, %rd1600;  mov.b64 {ch,cl}, %rd1716;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1588, {ah,al};}
	// end inline asm
$L__tmp433:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1600;  mov.b64 {bh,bl}, %rd1716;  mov.b64 {ch,cl}, %rd1717;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1600, {ah,al};}
	// end inline asm
$L__tmp434:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1716;  mov.b64 {bh,bl}, %rd1717;  mov.b64 {ch,cl}, %rd1718;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1716, {ah,al};}
	// end inline asm
$L__tmp435:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:437     state[0] = state[0] ^ RClocal[i];
	.loc	1 437 5, function_name $L__info_string0, inlined_at 1 475 7
	xor.b64  	%rd1781, %rd1620, 2147483649;
$L__tmp436:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd1723, %rd1781;
	// begin inline asm
	  xor.b64 %rd1723, %rd1723, %rd1640;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1723, %rd1723, %rd1660;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1723, %rd1723, %rd1680;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1723, %rd1723, %rd1700;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd1735, %rd1624;
	// begin inline asm
	  xor.b64 %rd1735, %rd1735, %rd1644;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1735, %rd1735, %rd1664;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1735, %rd1735, %rd1684;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1735, %rd1735, %rd1704;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd1747, %rd1592;
	// begin inline asm
	  xor.b64 %rd1747, %rd1747, %rd1648;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1747, %rd1747, %rd1594;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1747, %rd1747, %rd1616;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1747, %rd1747, %rd1588;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd1759, %rd1612;
	// begin inline asm
	  xor.b64 %rd1759, %rd1759, %rd1606;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1759, %rd1759, %rd1596;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1759, %rd1759, %rd1614;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1759, %rd1759, %rd1600;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd1771, %rd1604;
	// begin inline asm
	  xor.b64 %rd1771, %rd1771, %rd1656;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1771, %rd1771, %rd1590;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1771, %rd1771, %rd1598;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd1771, %rd1771, %rd1716;
	// end inline asm
$L__tmp437:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r568}, %rd1735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r569,%dummy}, %rd1735;
	}
	shf.l.wrap.b32 	%r570, %r569, %r568, 1;
	shf.l.wrap.b32 	%r571, %r568, %r569, 1;
	mov.b64 	%rd1802, {%r571, %r570};
$L__tmp438:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd1780, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1780, %rd1781, %rd1802;  xor.b64 %rd1780, %rd1780, %rd1771;}
	// end inline asm
$L__tmp439:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd1929, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1929, %rd1640, %rd1802;  xor.b64 %rd1929, %rd1929, %rd1771;}
	// end inline asm
$L__tmp440:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd1790, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1790, %rd1660, %rd1802;  xor.b64 %rd1790, %rd1790, %rd1771;}
	// end inline asm
$L__tmp441:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd1921, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1921, %rd1680, %rd1802;  xor.b64 %rd1921, %rd1921, %rd1771;}
	// end inline asm
$L__tmp442:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd1911, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1911, %rd1700, %rd1802;  xor.b64 %rd1911, %rd1911, %rd1771;}
	// end inline asm
$L__tmp443:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r572}, %rd1747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r573,%dummy}, %rd1747;
	}
	shf.l.wrap.b32 	%r574, %r573, %r572, 1;
	shf.l.wrap.b32 	%r575, %r572, %r573, 1;
	mov.b64 	%rd1827, {%r575, %r574};
$L__tmp444:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd1939, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1939, %rd1624, %rd1827;  xor.b64 %rd1939, %rd1939, %rd1723;}
	// end inline asm
$L__tmp445:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd1905, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1905, %rd1644, %rd1827;  xor.b64 %rd1905, %rd1905, %rd1723;}
	// end inline asm
$L__tmp446:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd1937, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1937, %rd1664, %rd1827;  xor.b64 %rd1937, %rd1937, %rd1723;}
	// end inline asm
$L__tmp447:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd1927, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1927, %rd1684, %rd1827;  xor.b64 %rd1927, %rd1927, %rd1723;}
	// end inline asm
$L__tmp448:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd1825, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1825, %rd1704, %rd1827;  xor.b64 %rd1825, %rd1825, %rd1723;}
	// end inline asm
$L__tmp449:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r576}, %rd1759;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r577,%dummy}, %rd1759;
	}
	shf.l.wrap.b32 	%r578, %r577, %r576, 1;
	shf.l.wrap.b32 	%r579, %r576, %r577, 1;
	mov.b64 	%rd1852, {%r579, %r578};
$L__tmp450:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd1830, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1830, %rd1592, %rd1852;  xor.b64 %rd1830, %rd1830, %rd1735;}
	// end inline asm
$L__tmp451:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd1835, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1835, %rd1648, %rd1852;  xor.b64 %rd1835, %rd1835, %rd1735;}
	// end inline asm
$L__tmp452:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd1913, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1913, %rd1594, %rd1852;  xor.b64 %rd1913, %rd1913, %rd1735;}
	// end inline asm
$L__tmp453:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd1935, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1935, %rd1616, %rd1852;  xor.b64 %rd1935, %rd1935, %rd1735;}
	// end inline asm
$L__tmp454:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd1850, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1850, %rd1588, %rd1852;  xor.b64 %rd1850, %rd1850, %rd1735;}
	// end inline asm
$L__tmp455:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r580}, %rd1771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r581,%dummy}, %rd1771;
	}
	shf.l.wrap.b32 	%r582, %r581, %r580, 1;
	shf.l.wrap.b32 	%r583, %r580, %r581, 1;
	mov.b64 	%rd1877, {%r583, %r582};
$L__tmp456:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd1931, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1931, %rd1612, %rd1877;  xor.b64 %rd1931, %rd1931, %rd1747;}
	// end inline asm
$L__tmp457:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd1860, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1860, %rd1606, %rd1877;  xor.b64 %rd1860, %rd1860, %rd1747;}
	// end inline asm
$L__tmp458:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd1915, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1915, %rd1596, %rd1877;  xor.b64 %rd1915, %rd1915, %rd1747;}
	// end inline asm
$L__tmp459:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd1933, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1933, %rd1614, %rd1877;  xor.b64 %rd1933, %rd1933, %rd1747;}
	// end inline asm
$L__tmp460:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd1919, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1919, %rd1600, %rd1877;  xor.b64 %rd1919, %rd1919, %rd1747;}
	// end inline asm
$L__tmp461:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r584}, %rd1723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r585,%dummy}, %rd1723;
	}
	shf.l.wrap.b32 	%r586, %r585, %r584, 1;
	shf.l.wrap.b32 	%r587, %r584, %r585, 1;
	mov.b64 	%rd1902, {%r587, %r586};
$L__tmp462:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd1923, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1923, %rd1604, %rd1902;  xor.b64 %rd1923, %rd1923, %rd1759;}
	// end inline asm
$L__tmp463:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd1907, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1907, %rd1656, %rd1902;  xor.b64 %rd1907, %rd1907, %rd1759;}
	// end inline asm
$L__tmp464:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd1909, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1909, %rd1590, %rd1902;  xor.b64 %rd1909, %rd1909, %rd1759;}
	// end inline asm
$L__tmp465:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd1917, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1917, %rd1598, %rd1902;  xor.b64 %rd1917, %rd1917, %rd1759;}
	// end inline asm
$L__tmp466:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd1925, %rd7260;
	// begin inline asm
	{  xor.b64 %rd1925, %rd1716, %rd1902;  xor.b64 %rd1925, %rd1925, %rd1759;}
	// end inline asm
$L__tmp467:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 372 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd1905;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd1905, {scr,lo};}
	// end inline asm
$L__tmp468:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 373 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd1907;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd1907, {scr,lo};}
	// end inline asm
$L__tmp469:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:374     state[ 9] = ROTR64( state[22],  3 );
	.loc	1 374 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r588,%dummy}, %rd1850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r589}, %rd1850;
	}
	shf.r.wrap.b32 	%r590, %r589, %r588, 3;
	shf.r.wrap.b32 	%r591, %r588, %r589, 3;
	mov.b64 	%rd1977, {%r591, %r590};
$L__tmp470:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 375 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd1909;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd1909, {scr,lo};}
	// end inline asm
$L__tmp471:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 376 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r323;mov.b64 {hi,lo}, %rd1911;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd1911, {scr,lo};}
	// end inline asm
$L__tmp472:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:377     state[20] = ROTR64( state[ 2],  2 );
	.loc	1 377 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r592,%dummy}, %rd1830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r593}, %rd1830;
	}
	shf.r.wrap.b32 	%r594, %r593, %r592, 2;
	shf.r.wrap.b32 	%r595, %r592, %r593, 2;
	mov.b64 	%rd2038, {%r595, %r594};
$L__tmp473:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 378 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd1913;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd1913, {scr,lo};}
	// end inline asm
$L__tmp474:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 379 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd1915;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd1915, {scr,lo};}
	// end inline asm
$L__tmp475:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:169     asm ( "{"
	.loc	1 169 5, function_name $L__info_string8, inlined_at 1 380 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd1917;prmt.b32 scr, hi, lo, 0x2107;prmt.b32 lo, hi, lo, 0x6543;mov.b64 %rd1917, {scr,lo};}
	// end inline asm
$L__tmp476:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:183       asm ( "{"
	.loc	1 183 7, function_name $L__info_string9, inlined_at 1 381 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd1919;prmt.b32 scr, lo, hi, 0x0765;prmt.b32 lo, lo, hi, 0x4321;mov.b64 %rd1919, {scr,lo};}
	// end inline asm
$L__tmp477:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 382 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r326;mov.b64 {hi,lo}, %rd1921;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd1921, {scr,lo};}
	// end inline asm
$L__tmp478:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 386 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd1923;                  mov.b32 mag, %r327;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd1923, {scr,lo};             }
	// end inline asm
$L__tmp479:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 397 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r328;mov.b64 {hi,lo}, %rd1925;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd1925, {scr,lo};}
	// end inline asm
$L__tmp480:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:398     state[24] = ROTL64( state[21],  2 );
	.loc	1 398 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r596}, %rd1825;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r597,%dummy}, %rd1825;
	}
	shf.l.wrap.b32 	%r598, %r597, %r596, 2;
	shf.l.wrap.b32 	%r599, %r596, %r597, 2;
	mov.b64 	%rd2037, {%r599, %r598};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:399     state[21] = ROTR64( state[ 8], 9 );            // R9
	.loc	1 399 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r600,%dummy}, %rd1860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r601}, %rd1860;
	}
	shf.r.wrap.b32 	%r602, %r601, %r600, 9;
	shf.r.wrap.b32 	%r603, %r600, %r601, 9;
	mov.b64 	%rd2039, {%r603, %r602};
$L__tmp481:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 400 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r329;mov.b64 {hi,lo}, %rd1927;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd1927, {scr,lo};}
	// end inline asm
$L__tmp482:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:124     asm ("{"
	.loc	1 124 5, function_name $L__info_string11, inlined_at 1 405 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd1929;                  mov.b32 mag, %r331;                      shf.l.wrap.b32 scr, lo, hi, mag;      shf.l.wrap.b32 lo, hi, lo, mag;       mov.b64 %rd1929, {scr,lo};             }
	// end inline asm
$L__tmp483:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 406 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd1931;                  mov.b32 mag, %r331;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd1931, {scr,lo};             }
	// end inline asm
$L__tmp484:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 414 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd1933;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd1933, {scr,lo};}
	// end inline asm
$L__tmp485:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 415 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r333;mov.b64 {hi,lo}, %rd1935;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd1935, {scr,lo};}
	// end inline asm
$L__tmp486:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 416 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r334;mov.b64 {hi,lo}, %rd1937;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd1937, {scr,lo};}
	// end inline asm
$L__tmp487:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:417     state[11] = ROTL64( state[ 7],  6 );
	.loc	1 417 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r604}, %rd1835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r605,%dummy}, %rd1835;
	}
	shf.l.wrap.b32 	%r606, %r605, %r604, 6;
	shf.l.wrap.b32 	%r607, %r604, %r605, 6;
	mov.b64 	%rd1999, {%r607, %r606};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:418     state[ 7] = ROTL64( state[10],  3 );
	.loc	1 418 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r608}, %rd1790;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r609,%dummy}, %rd1790;
	}
	shf.l.wrap.b32 	%r610, %r609, %r608, 3;
	shf.l.wrap.b32 	%r611, %r608, %r609, 3;
	mov.b64 	%rd1969, {%r611, %r610};
$L__tmp488:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:199     asm ("{"
	.loc	1 199 5, function_name $L__info_string12, inlined_at 1 419 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd1939;shf.l.wrap.b32 scr, lo, hi, 1;shf.l.wrap.b32 lo, hi, lo, 1;mov.b64 %rd1939, {scr,lo};}
	// end inline asm
$L__tmp489:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd1941, %rd1780;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1941;  mov.b64 {bh,bl}, %rd1905;  mov.b64 {ch,cl}, %rd1913;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1941, {ah,al};}
	// end inline asm
$L__tmp490:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd1945, %rd1905;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1945;  mov.b64 {bh,bl}, %rd1913;  mov.b64 {ch,cl}, %rd1933;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1945, {ah,al};}
	// end inline asm
$L__tmp491:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1913;  mov.b64 {bh,bl}, %rd1933;  mov.b64 {ch,cl}, %rd1925;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1913, {ah,al};}
	// end inline asm
$L__tmp492:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1933;  mov.b64 {bh,bl}, %rd1925;  mov.b64 {ch,cl}, %rd1780;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1933, {ah,al};}
	// end inline asm
$L__tmp493:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1925;  mov.b64 {bh,bl}, %rd1780;  mov.b64 {ch,cl}, %rd1905;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1925, {ah,al};}
	// end inline asm
$L__tmp494:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd1961, %rd1931;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1961;  mov.b64 {bh,bl}, %rd1907;  mov.b64 {ch,cl}, %rd1969;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1961, {ah,al};}
	// end inline asm
$L__tmp495:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd1965, %rd1907;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1965;  mov.b64 {bh,bl}, %rd1969;  mov.b64 {ch,cl}, %rd1927;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1965, {ah,al};}
	// end inline asm
$L__tmp496:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1969;  mov.b64 {bh,bl}, %rd1927;  mov.b64 {ch,cl}, %rd1977;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1969, {ah,al};}
	// end inline asm
$L__tmp497:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1927;  mov.b64 {bh,bl}, %rd1977;  mov.b64 {ch,cl}, %rd1931;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1927, {ah,al};}
	// end inline asm
$L__tmp498:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1977;  mov.b64 {bh,bl}, %rd1931;  mov.b64 {ch,cl}, %rd1907;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1977, {ah,al};}
	// end inline asm
$L__tmp499:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd1981, %rd1939;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1981;  mov.b64 {bh,bl}, %rd1999;  mov.b64 {ch,cl}, %rd1915;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1981, {ah,al};}
	// end inline asm
$L__tmp500:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd1985, %rd1999;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1985;  mov.b64 {bh,bl}, %rd1915;  mov.b64 {ch,cl}, %rd1917;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1985, {ah,al};}
	// end inline asm
$L__tmp501:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1915;  mov.b64 {bh,bl}, %rd1917;  mov.b64 {ch,cl}, %rd1911;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1915, {ah,al};}
	// end inline asm
$L__tmp502:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1917;  mov.b64 {bh,bl}, %rd1911;  mov.b64 {ch,cl}, %rd1939;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1917, {ah,al};}
	// end inline asm
$L__tmp503:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1911;  mov.b64 {bh,bl}, %rd1939;  mov.b64 {ch,cl}, %rd1999;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1911, {ah,al};}
	// end inline asm
$L__tmp504:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd2001, %rd1923;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2001;  mov.b64 {bh,bl}, %rd1929;  mov.b64 {ch,cl}, %rd1937;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2001, {ah,al};}
	// end inline asm
$L__tmp505:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd2005, %rd1929;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2005;  mov.b64 {bh,bl}, %rd1937;  mov.b64 {ch,cl}, %rd1935;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2005, {ah,al};}
	// end inline asm
$L__tmp506:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1937;  mov.b64 {bh,bl}, %rd1935;  mov.b64 {ch,cl}, %rd1919;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1937, {ah,al};}
	// end inline asm
$L__tmp507:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1935;  mov.b64 {bh,bl}, %rd1919;  mov.b64 {ch,cl}, %rd1923;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1935, {ah,al};}
	// end inline asm
$L__tmp508:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1919;  mov.b64 {bh,bl}, %rd1923;  mov.b64 {ch,cl}, %rd1929;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1919, {ah,al};}
	// end inline asm
$L__tmp509:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd2021, %rd2038;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2021;  mov.b64 {bh,bl}, %rd2039;  mov.b64 {ch,cl}, %rd1909;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2021, {ah,al};}
	// end inline asm
$L__tmp510:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd2025, %rd2039;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2025;  mov.b64 {bh,bl}, %rd1909;  mov.b64 {ch,cl}, %rd1921;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2025, {ah,al};}
	// end inline asm
$L__tmp511:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1909;  mov.b64 {bh,bl}, %rd1921;  mov.b64 {ch,cl}, %rd2037;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1909, {ah,al};}
	// end inline asm
$L__tmp512:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd1921;  mov.b64 {bh,bl}, %rd2037;  mov.b64 {ch,cl}, %rd2038;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd1921, {ah,al};}
	// end inline asm
$L__tmp513:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2037;  mov.b64 {bh,bl}, %rd2038;  mov.b64 {ch,cl}, %rd2039;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2037, {ah,al};}
	// end inline asm
$L__tmp514:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:437     state[0] = state[0] ^ RClocal[i];
	.loc	1 437 5, function_name $L__info_string0, inlined_at 1 475 7
	xor.b64  	%rd2102, %rd1941, -9223372034707259263;
$L__tmp515:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd2044, %rd2102;
	// begin inline asm
	  xor.b64 %rd2044, %rd2044, %rd1961;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2044, %rd2044, %rd1981;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2044, %rd2044, %rd2001;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2044, %rd2044, %rd2021;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd2056, %rd1945;
	// begin inline asm
	  xor.b64 %rd2056, %rd2056, %rd1965;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2056, %rd2056, %rd1985;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2056, %rd2056, %rd2005;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2056, %rd2056, %rd2025;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd2068, %rd1913;
	// begin inline asm
	  xor.b64 %rd2068, %rd2068, %rd1969;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2068, %rd2068, %rd1915;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2068, %rd2068, %rd1937;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2068, %rd2068, %rd1909;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd2080, %rd1933;
	// begin inline asm
	  xor.b64 %rd2080, %rd2080, %rd1927;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2080, %rd2080, %rd1917;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2080, %rd2080, %rd1935;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2080, %rd2080, %rd1921;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd2092, %rd1925;
	// begin inline asm
	  xor.b64 %rd2092, %rd2092, %rd1977;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2092, %rd2092, %rd1911;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2092, %rd2092, %rd1919;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2092, %rd2092, %rd2037;
	// end inline asm
$L__tmp516:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r612}, %rd2056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r613,%dummy}, %rd2056;
	}
	shf.l.wrap.b32 	%r614, %r613, %r612, 1;
	shf.l.wrap.b32 	%r615, %r612, %r613, 1;
	mov.b64 	%rd2123, {%r615, %r614};
$L__tmp517:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd2101, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2101, %rd2102, %rd2123;  xor.b64 %rd2101, %rd2101, %rd2092;}
	// end inline asm
$L__tmp518:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd2250, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2250, %rd1961, %rd2123;  xor.b64 %rd2250, %rd2250, %rd2092;}
	// end inline asm
$L__tmp519:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd2111, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2111, %rd1981, %rd2123;  xor.b64 %rd2111, %rd2111, %rd2092;}
	// end inline asm
$L__tmp520:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd2242, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2242, %rd2001, %rd2123;  xor.b64 %rd2242, %rd2242, %rd2092;}
	// end inline asm
$L__tmp521:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd2232, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2232, %rd2021, %rd2123;  xor.b64 %rd2232, %rd2232, %rd2092;}
	// end inline asm
$L__tmp522:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r616}, %rd2068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r617,%dummy}, %rd2068;
	}
	shf.l.wrap.b32 	%r618, %r617, %r616, 1;
	shf.l.wrap.b32 	%r619, %r616, %r617, 1;
	mov.b64 	%rd2148, {%r619, %r618};
$L__tmp523:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd2260, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2260, %rd1945, %rd2148;  xor.b64 %rd2260, %rd2260, %rd2044;}
	// end inline asm
$L__tmp524:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd2226, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2226, %rd1965, %rd2148;  xor.b64 %rd2226, %rd2226, %rd2044;}
	// end inline asm
$L__tmp525:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd2258, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2258, %rd1985, %rd2148;  xor.b64 %rd2258, %rd2258, %rd2044;}
	// end inline asm
$L__tmp526:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd2248, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2248, %rd2005, %rd2148;  xor.b64 %rd2248, %rd2248, %rd2044;}
	// end inline asm
$L__tmp527:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd2146, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2146, %rd2025, %rd2148;  xor.b64 %rd2146, %rd2146, %rd2044;}
	// end inline asm
$L__tmp528:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r620}, %rd2080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r621,%dummy}, %rd2080;
	}
	shf.l.wrap.b32 	%r622, %r621, %r620, 1;
	shf.l.wrap.b32 	%r623, %r620, %r621, 1;
	mov.b64 	%rd2173, {%r623, %r622};
$L__tmp529:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd2151, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2151, %rd1913, %rd2173;  xor.b64 %rd2151, %rd2151, %rd2056;}
	// end inline asm
$L__tmp530:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd2156, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2156, %rd1969, %rd2173;  xor.b64 %rd2156, %rd2156, %rd2056;}
	// end inline asm
$L__tmp531:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd2234, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2234, %rd1915, %rd2173;  xor.b64 %rd2234, %rd2234, %rd2056;}
	// end inline asm
$L__tmp532:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd2256, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2256, %rd1937, %rd2173;  xor.b64 %rd2256, %rd2256, %rd2056;}
	// end inline asm
$L__tmp533:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd2171, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2171, %rd1909, %rd2173;  xor.b64 %rd2171, %rd2171, %rd2056;}
	// end inline asm
$L__tmp534:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r624}, %rd2092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r625,%dummy}, %rd2092;
	}
	shf.l.wrap.b32 	%r626, %r625, %r624, 1;
	shf.l.wrap.b32 	%r627, %r624, %r625, 1;
	mov.b64 	%rd2198, {%r627, %r626};
$L__tmp535:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd2252, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2252, %rd1933, %rd2198;  xor.b64 %rd2252, %rd2252, %rd2068;}
	// end inline asm
$L__tmp536:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd2181, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2181, %rd1927, %rd2198;  xor.b64 %rd2181, %rd2181, %rd2068;}
	// end inline asm
$L__tmp537:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd2236, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2236, %rd1917, %rd2198;  xor.b64 %rd2236, %rd2236, %rd2068;}
	// end inline asm
$L__tmp538:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd2254, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2254, %rd1935, %rd2198;  xor.b64 %rd2254, %rd2254, %rd2068;}
	// end inline asm
$L__tmp539:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd2240, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2240, %rd1921, %rd2198;  xor.b64 %rd2240, %rd2240, %rd2068;}
	// end inline asm
$L__tmp540:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r628}, %rd2044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r629,%dummy}, %rd2044;
	}
	shf.l.wrap.b32 	%r630, %r629, %r628, 1;
	shf.l.wrap.b32 	%r631, %r628, %r629, 1;
	mov.b64 	%rd2223, {%r631, %r630};
$L__tmp541:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd2244, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2244, %rd1925, %rd2223;  xor.b64 %rd2244, %rd2244, %rd2080;}
	// end inline asm
$L__tmp542:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd2228, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2228, %rd1977, %rd2223;  xor.b64 %rd2228, %rd2228, %rd2080;}
	// end inline asm
$L__tmp543:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd2230, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2230, %rd1911, %rd2223;  xor.b64 %rd2230, %rd2230, %rd2080;}
	// end inline asm
$L__tmp544:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd2238, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2238, %rd1919, %rd2223;  xor.b64 %rd2238, %rd2238, %rd2080;}
	// end inline asm
$L__tmp545:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd2246, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2246, %rd2037, %rd2223;  xor.b64 %rd2246, %rd2246, %rd2080;}
	// end inline asm
$L__tmp546:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 372 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd2226;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd2226, {scr,lo};}
	// end inline asm
$L__tmp547:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 373 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd2228;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd2228, {scr,lo};}
	// end inline asm
$L__tmp548:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:374     state[ 9] = ROTR64( state[22],  3 );
	.loc	1 374 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r632,%dummy}, %rd2171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r633}, %rd2171;
	}
	shf.r.wrap.b32 	%r634, %r633, %r632, 3;
	shf.r.wrap.b32 	%r635, %r632, %r633, 3;
	mov.b64 	%rd2298, {%r635, %r634};
$L__tmp549:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 375 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd2230;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd2230, {scr,lo};}
	// end inline asm
$L__tmp550:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 376 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r323;mov.b64 {hi,lo}, %rd2232;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd2232, {scr,lo};}
	// end inline asm
$L__tmp551:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:377     state[20] = ROTR64( state[ 2],  2 );
	.loc	1 377 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r636,%dummy}, %rd2151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r637}, %rd2151;
	}
	shf.r.wrap.b32 	%r638, %r637, %r636, 2;
	shf.r.wrap.b32 	%r639, %r636, %r637, 2;
	mov.b64 	%rd2359, {%r639, %r638};
$L__tmp552:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 378 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd2234;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd2234, {scr,lo};}
	// end inline asm
$L__tmp553:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 379 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd2236;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd2236, {scr,lo};}
	// end inline asm
$L__tmp554:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:169     asm ( "{"
	.loc	1 169 5, function_name $L__info_string8, inlined_at 1 380 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd2238;prmt.b32 scr, hi, lo, 0x2107;prmt.b32 lo, hi, lo, 0x6543;mov.b64 %rd2238, {scr,lo};}
	// end inline asm
$L__tmp555:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:183       asm ( "{"
	.loc	1 183 7, function_name $L__info_string9, inlined_at 1 381 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd2240;prmt.b32 scr, lo, hi, 0x0765;prmt.b32 lo, lo, hi, 0x4321;mov.b64 %rd2240, {scr,lo};}
	// end inline asm
$L__tmp556:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 382 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r326;mov.b64 {hi,lo}, %rd2242;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd2242, {scr,lo};}
	// end inline asm
$L__tmp557:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 386 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd2244;                  mov.b32 mag, %r327;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd2244, {scr,lo};             }
	// end inline asm
$L__tmp558:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 397 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r328;mov.b64 {hi,lo}, %rd2246;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd2246, {scr,lo};}
	// end inline asm
$L__tmp559:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:398     state[24] = ROTL64( state[21],  2 );
	.loc	1 398 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r640}, %rd2146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r641,%dummy}, %rd2146;
	}
	shf.l.wrap.b32 	%r642, %r641, %r640, 2;
	shf.l.wrap.b32 	%r643, %r640, %r641, 2;
	mov.b64 	%rd2358, {%r643, %r642};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:399     state[21] = ROTR64( state[ 8], 9 );            // R9
	.loc	1 399 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r644,%dummy}, %rd2181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r645}, %rd2181;
	}
	shf.r.wrap.b32 	%r646, %r645, %r644, 9;
	shf.r.wrap.b32 	%r647, %r644, %r645, 9;
	mov.b64 	%rd2360, {%r647, %r646};
$L__tmp560:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 400 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r329;mov.b64 {hi,lo}, %rd2248;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd2248, {scr,lo};}
	// end inline asm
$L__tmp561:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:124     asm ("{"
	.loc	1 124 5, function_name $L__info_string11, inlined_at 1 405 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd2250;                  mov.b32 mag, %r331;                      shf.l.wrap.b32 scr, lo, hi, mag;      shf.l.wrap.b32 lo, hi, lo, mag;       mov.b64 %rd2250, {scr,lo};             }
	// end inline asm
$L__tmp562:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 406 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd2252;                  mov.b32 mag, %r331;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd2252, {scr,lo};             }
	// end inline asm
$L__tmp563:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 414 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd2254;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd2254, {scr,lo};}
	// end inline asm
$L__tmp564:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 415 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r333;mov.b64 {hi,lo}, %rd2256;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd2256, {scr,lo};}
	// end inline asm
$L__tmp565:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 416 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r334;mov.b64 {hi,lo}, %rd2258;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd2258, {scr,lo};}
	// end inline asm
$L__tmp566:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:417     state[11] = ROTL64( state[ 7],  6 );
	.loc	1 417 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r648}, %rd2156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r649,%dummy}, %rd2156;
	}
	shf.l.wrap.b32 	%r650, %r649, %r648, 6;
	shf.l.wrap.b32 	%r651, %r648, %r649, 6;
	mov.b64 	%rd2320, {%r651, %r650};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:418     state[ 7] = ROTL64( state[10],  3 );
	.loc	1 418 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r652}, %rd2111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r653,%dummy}, %rd2111;
	}
	shf.l.wrap.b32 	%r654, %r653, %r652, 3;
	shf.l.wrap.b32 	%r655, %r652, %r653, 3;
	mov.b64 	%rd2290, {%r655, %r654};
$L__tmp567:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:199     asm ("{"
	.loc	1 199 5, function_name $L__info_string12, inlined_at 1 419 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd2260;shf.l.wrap.b32 scr, lo, hi, 1;shf.l.wrap.b32 lo, hi, lo, 1;mov.b64 %rd2260, {scr,lo};}
	// end inline asm
$L__tmp568:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd2262, %rd2101;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2262;  mov.b64 {bh,bl}, %rd2226;  mov.b64 {ch,cl}, %rd2234;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2262, {ah,al};}
	// end inline asm
$L__tmp569:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd2266, %rd2226;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2266;  mov.b64 {bh,bl}, %rd2234;  mov.b64 {ch,cl}, %rd2254;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2266, {ah,al};}
	// end inline asm
$L__tmp570:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2234;  mov.b64 {bh,bl}, %rd2254;  mov.b64 {ch,cl}, %rd2246;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2234, {ah,al};}
	// end inline asm
$L__tmp571:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2254;  mov.b64 {bh,bl}, %rd2246;  mov.b64 {ch,cl}, %rd2101;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2254, {ah,al};}
	// end inline asm
$L__tmp572:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2246;  mov.b64 {bh,bl}, %rd2101;  mov.b64 {ch,cl}, %rd2226;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2246, {ah,al};}
	// end inline asm
$L__tmp573:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd2282, %rd2252;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2282;  mov.b64 {bh,bl}, %rd2228;  mov.b64 {ch,cl}, %rd2290;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2282, {ah,al};}
	// end inline asm
$L__tmp574:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd2286, %rd2228;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2286;  mov.b64 {bh,bl}, %rd2290;  mov.b64 {ch,cl}, %rd2248;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2286, {ah,al};}
	// end inline asm
$L__tmp575:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2290;  mov.b64 {bh,bl}, %rd2248;  mov.b64 {ch,cl}, %rd2298;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2290, {ah,al};}
	// end inline asm
$L__tmp576:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2248;  mov.b64 {bh,bl}, %rd2298;  mov.b64 {ch,cl}, %rd2252;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2248, {ah,al};}
	// end inline asm
$L__tmp577:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2298;  mov.b64 {bh,bl}, %rd2252;  mov.b64 {ch,cl}, %rd2228;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2298, {ah,al};}
	// end inline asm
$L__tmp578:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd2302, %rd2260;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2302;  mov.b64 {bh,bl}, %rd2320;  mov.b64 {ch,cl}, %rd2236;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2302, {ah,al};}
	// end inline asm
$L__tmp579:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd2306, %rd2320;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2306;  mov.b64 {bh,bl}, %rd2236;  mov.b64 {ch,cl}, %rd2238;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2306, {ah,al};}
	// end inline asm
$L__tmp580:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2236;  mov.b64 {bh,bl}, %rd2238;  mov.b64 {ch,cl}, %rd2232;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2236, {ah,al};}
	// end inline asm
$L__tmp581:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2238;  mov.b64 {bh,bl}, %rd2232;  mov.b64 {ch,cl}, %rd2260;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2238, {ah,al};}
	// end inline asm
$L__tmp582:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2232;  mov.b64 {bh,bl}, %rd2260;  mov.b64 {ch,cl}, %rd2320;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2232, {ah,al};}
	// end inline asm
$L__tmp583:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd2322, %rd2244;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2322;  mov.b64 {bh,bl}, %rd2250;  mov.b64 {ch,cl}, %rd2258;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2322, {ah,al};}
	// end inline asm
$L__tmp584:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd2326, %rd2250;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2326;  mov.b64 {bh,bl}, %rd2258;  mov.b64 {ch,cl}, %rd2256;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2326, {ah,al};}
	// end inline asm
$L__tmp585:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2258;  mov.b64 {bh,bl}, %rd2256;  mov.b64 {ch,cl}, %rd2240;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2258, {ah,al};}
	// end inline asm
$L__tmp586:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2256;  mov.b64 {bh,bl}, %rd2240;  mov.b64 {ch,cl}, %rd2244;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2256, {ah,al};}
	// end inline asm
$L__tmp587:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2240;  mov.b64 {bh,bl}, %rd2244;  mov.b64 {ch,cl}, %rd2250;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2240, {ah,al};}
	// end inline asm
$L__tmp588:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd2342, %rd2359;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2342;  mov.b64 {bh,bl}, %rd2360;  mov.b64 {ch,cl}, %rd2230;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2342, {ah,al};}
	// end inline asm
$L__tmp589:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd2346, %rd2360;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2346;  mov.b64 {bh,bl}, %rd2230;  mov.b64 {ch,cl}, %rd2242;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2346, {ah,al};}
	// end inline asm
$L__tmp590:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2230;  mov.b64 {bh,bl}, %rd2242;  mov.b64 {ch,cl}, %rd2358;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2230, {ah,al};}
	// end inline asm
$L__tmp591:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2242;  mov.b64 {bh,bl}, %rd2358;  mov.b64 {ch,cl}, %rd2359;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2242, {ah,al};}
	// end inline asm
$L__tmp592:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2358;  mov.b64 {bh,bl}, %rd2359;  mov.b64 {ch,cl}, %rd2360;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2358, {ah,al};}
	// end inline asm
$L__tmp593:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:437     state[0] = state[0] ^ RClocal[i];
	.loc	1 437 5, function_name $L__info_string0, inlined_at 1 475 7
	xor.b64  	%rd2423, %rd2262, -9223372036854743031;
$L__tmp594:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd2365, %rd2423;
	// begin inline asm
	  xor.b64 %rd2365, %rd2365, %rd2282;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2365, %rd2365, %rd2302;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2365, %rd2365, %rd2322;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2365, %rd2365, %rd2342;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd2377, %rd2266;
	// begin inline asm
	  xor.b64 %rd2377, %rd2377, %rd2286;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2377, %rd2377, %rd2306;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2377, %rd2377, %rd2326;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2377, %rd2377, %rd2346;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd2389, %rd2234;
	// begin inline asm
	  xor.b64 %rd2389, %rd2389, %rd2290;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2389, %rd2389, %rd2236;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2389, %rd2389, %rd2258;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2389, %rd2389, %rd2230;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd2401, %rd2254;
	// begin inline asm
	  xor.b64 %rd2401, %rd2401, %rd2248;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2401, %rd2401, %rd2238;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2401, %rd2401, %rd2256;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2401, %rd2401, %rd2242;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd2413, %rd2246;
	// begin inline asm
	  xor.b64 %rd2413, %rd2413, %rd2298;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2413, %rd2413, %rd2232;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2413, %rd2413, %rd2240;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2413, %rd2413, %rd2358;
	// end inline asm
$L__tmp595:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r656}, %rd2377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r657,%dummy}, %rd2377;
	}
	shf.l.wrap.b32 	%r658, %r657, %r656, 1;
	shf.l.wrap.b32 	%r659, %r656, %r657, 1;
	mov.b64 	%rd2444, {%r659, %r658};
$L__tmp596:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd2422, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2422, %rd2423, %rd2444;  xor.b64 %rd2422, %rd2422, %rd2413;}
	// end inline asm
$L__tmp597:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd2571, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2571, %rd2282, %rd2444;  xor.b64 %rd2571, %rd2571, %rd2413;}
	// end inline asm
$L__tmp598:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd2432, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2432, %rd2302, %rd2444;  xor.b64 %rd2432, %rd2432, %rd2413;}
	// end inline asm
$L__tmp599:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd2563, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2563, %rd2322, %rd2444;  xor.b64 %rd2563, %rd2563, %rd2413;}
	// end inline asm
$L__tmp600:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd2553, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2553, %rd2342, %rd2444;  xor.b64 %rd2553, %rd2553, %rd2413;}
	// end inline asm
$L__tmp601:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r660}, %rd2389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r661,%dummy}, %rd2389;
	}
	shf.l.wrap.b32 	%r662, %r661, %r660, 1;
	shf.l.wrap.b32 	%r663, %r660, %r661, 1;
	mov.b64 	%rd2469, {%r663, %r662};
$L__tmp602:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd2581, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2581, %rd2266, %rd2469;  xor.b64 %rd2581, %rd2581, %rd2365;}
	// end inline asm
$L__tmp603:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd2547, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2547, %rd2286, %rd2469;  xor.b64 %rd2547, %rd2547, %rd2365;}
	// end inline asm
$L__tmp604:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd2579, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2579, %rd2306, %rd2469;  xor.b64 %rd2579, %rd2579, %rd2365;}
	// end inline asm
$L__tmp605:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd2569, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2569, %rd2326, %rd2469;  xor.b64 %rd2569, %rd2569, %rd2365;}
	// end inline asm
$L__tmp606:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd2467, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2467, %rd2346, %rd2469;  xor.b64 %rd2467, %rd2467, %rd2365;}
	// end inline asm
$L__tmp607:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r664}, %rd2401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r665,%dummy}, %rd2401;
	}
	shf.l.wrap.b32 	%r666, %r665, %r664, 1;
	shf.l.wrap.b32 	%r667, %r664, %r665, 1;
	mov.b64 	%rd2494, {%r667, %r666};
$L__tmp608:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd2472, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2472, %rd2234, %rd2494;  xor.b64 %rd2472, %rd2472, %rd2377;}
	// end inline asm
$L__tmp609:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd2477, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2477, %rd2290, %rd2494;  xor.b64 %rd2477, %rd2477, %rd2377;}
	// end inline asm
$L__tmp610:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd2555, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2555, %rd2236, %rd2494;  xor.b64 %rd2555, %rd2555, %rd2377;}
	// end inline asm
$L__tmp611:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd2577, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2577, %rd2258, %rd2494;  xor.b64 %rd2577, %rd2577, %rd2377;}
	// end inline asm
$L__tmp612:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd2492, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2492, %rd2230, %rd2494;  xor.b64 %rd2492, %rd2492, %rd2377;}
	// end inline asm
$L__tmp613:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r668}, %rd2413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r669,%dummy}, %rd2413;
	}
	shf.l.wrap.b32 	%r670, %r669, %r668, 1;
	shf.l.wrap.b32 	%r671, %r668, %r669, 1;
	mov.b64 	%rd2519, {%r671, %r670};
$L__tmp614:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd2573, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2573, %rd2254, %rd2519;  xor.b64 %rd2573, %rd2573, %rd2389;}
	// end inline asm
$L__tmp615:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd2502, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2502, %rd2248, %rd2519;  xor.b64 %rd2502, %rd2502, %rd2389;}
	// end inline asm
$L__tmp616:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd2557, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2557, %rd2238, %rd2519;  xor.b64 %rd2557, %rd2557, %rd2389;}
	// end inline asm
$L__tmp617:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd2575, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2575, %rd2256, %rd2519;  xor.b64 %rd2575, %rd2575, %rd2389;}
	// end inline asm
$L__tmp618:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd2561, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2561, %rd2242, %rd2519;  xor.b64 %rd2561, %rd2561, %rd2389;}
	// end inline asm
$L__tmp619:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r672}, %rd2365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r673,%dummy}, %rd2365;
	}
	shf.l.wrap.b32 	%r674, %r673, %r672, 1;
	shf.l.wrap.b32 	%r675, %r672, %r673, 1;
	mov.b64 	%rd2544, {%r675, %r674};
$L__tmp620:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd2565, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2565, %rd2246, %rd2544;  xor.b64 %rd2565, %rd2565, %rd2401;}
	// end inline asm
$L__tmp621:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd2549, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2549, %rd2298, %rd2544;  xor.b64 %rd2549, %rd2549, %rd2401;}
	// end inline asm
$L__tmp622:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd2551, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2551, %rd2232, %rd2544;  xor.b64 %rd2551, %rd2551, %rd2401;}
	// end inline asm
$L__tmp623:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd2559, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2559, %rd2240, %rd2544;  xor.b64 %rd2559, %rd2559, %rd2401;}
	// end inline asm
$L__tmp624:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd2567, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2567, %rd2358, %rd2544;  xor.b64 %rd2567, %rd2567, %rd2401;}
	// end inline asm
$L__tmp625:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 372 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd2547;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd2547, {scr,lo};}
	// end inline asm
$L__tmp626:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 373 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd2549;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd2549, {scr,lo};}
	// end inline asm
$L__tmp627:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:374     state[ 9] = ROTR64( state[22],  3 );
	.loc	1 374 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r676,%dummy}, %rd2492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r677}, %rd2492;
	}
	shf.r.wrap.b32 	%r678, %r677, %r676, 3;
	shf.r.wrap.b32 	%r679, %r676, %r677, 3;
	mov.b64 	%rd2619, {%r679, %r678};
$L__tmp628:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 375 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd2551;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd2551, {scr,lo};}
	// end inline asm
$L__tmp629:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 376 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r323;mov.b64 {hi,lo}, %rd2553;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd2553, {scr,lo};}
	// end inline asm
$L__tmp630:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:377     state[20] = ROTR64( state[ 2],  2 );
	.loc	1 377 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r680,%dummy}, %rd2472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r681}, %rd2472;
	}
	shf.r.wrap.b32 	%r682, %r681, %r680, 2;
	shf.r.wrap.b32 	%r683, %r680, %r681, 2;
	mov.b64 	%rd2680, {%r683, %r682};
$L__tmp631:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 378 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd2555;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd2555, {scr,lo};}
	// end inline asm
$L__tmp632:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 379 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd2557;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd2557, {scr,lo};}
	// end inline asm
$L__tmp633:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:169     asm ( "{"
	.loc	1 169 5, function_name $L__info_string8, inlined_at 1 380 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd2559;prmt.b32 scr, hi, lo, 0x2107;prmt.b32 lo, hi, lo, 0x6543;mov.b64 %rd2559, {scr,lo};}
	// end inline asm
$L__tmp634:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:183       asm ( "{"
	.loc	1 183 7, function_name $L__info_string9, inlined_at 1 381 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd2561;prmt.b32 scr, lo, hi, 0x0765;prmt.b32 lo, lo, hi, 0x4321;mov.b64 %rd2561, {scr,lo};}
	// end inline asm
$L__tmp635:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 382 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r326;mov.b64 {hi,lo}, %rd2563;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd2563, {scr,lo};}
	// end inline asm
$L__tmp636:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 386 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd2565;                  mov.b32 mag, %r327;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd2565, {scr,lo};             }
	// end inline asm
$L__tmp637:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 397 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r328;mov.b64 {hi,lo}, %rd2567;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd2567, {scr,lo};}
	// end inline asm
$L__tmp638:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:398     state[24] = ROTL64( state[21],  2 );
	.loc	1 398 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r684}, %rd2467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r685,%dummy}, %rd2467;
	}
	shf.l.wrap.b32 	%r686, %r685, %r684, 2;
	shf.l.wrap.b32 	%r687, %r684, %r685, 2;
	mov.b64 	%rd2679, {%r687, %r686};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:399     state[21] = ROTR64( state[ 8], 9 );            // R9
	.loc	1 399 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r688,%dummy}, %rd2502;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r689}, %rd2502;
	}
	shf.r.wrap.b32 	%r690, %r689, %r688, 9;
	shf.r.wrap.b32 	%r691, %r688, %r689, 9;
	mov.b64 	%rd2681, {%r691, %r690};
$L__tmp639:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 400 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r329;mov.b64 {hi,lo}, %rd2569;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd2569, {scr,lo};}
	// end inline asm
$L__tmp640:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:124     asm ("{"
	.loc	1 124 5, function_name $L__info_string11, inlined_at 1 405 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd2571;                  mov.b32 mag, %r331;                      shf.l.wrap.b32 scr, lo, hi, mag;      shf.l.wrap.b32 lo, hi, lo, mag;       mov.b64 %rd2571, {scr,lo};             }
	// end inline asm
$L__tmp641:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 406 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd2573;                  mov.b32 mag, %r331;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd2573, {scr,lo};             }
	// end inline asm
$L__tmp642:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 414 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd2575;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd2575, {scr,lo};}
	// end inline asm
$L__tmp643:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 415 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r333;mov.b64 {hi,lo}, %rd2577;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd2577, {scr,lo};}
	// end inline asm
$L__tmp644:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 416 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r334;mov.b64 {hi,lo}, %rd2579;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd2579, {scr,lo};}
	// end inline asm
$L__tmp645:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:417     state[11] = ROTL64( state[ 7],  6 );
	.loc	1 417 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r692}, %rd2477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r693,%dummy}, %rd2477;
	}
	shf.l.wrap.b32 	%r694, %r693, %r692, 6;
	shf.l.wrap.b32 	%r695, %r692, %r693, 6;
	mov.b64 	%rd2641, {%r695, %r694};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:418     state[ 7] = ROTL64( state[10],  3 );
	.loc	1 418 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r696}, %rd2432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r697,%dummy}, %rd2432;
	}
	shf.l.wrap.b32 	%r698, %r697, %r696, 3;
	shf.l.wrap.b32 	%r699, %r696, %r697, 3;
	mov.b64 	%rd2611, {%r699, %r698};
$L__tmp646:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:199     asm ("{"
	.loc	1 199 5, function_name $L__info_string12, inlined_at 1 419 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd2581;shf.l.wrap.b32 scr, lo, hi, 1;shf.l.wrap.b32 lo, hi, lo, 1;mov.b64 %rd2581, {scr,lo};}
	// end inline asm
$L__tmp647:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd2583, %rd2422;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2583;  mov.b64 {bh,bl}, %rd2547;  mov.b64 {ch,cl}, %rd2555;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2583, {ah,al};}
	// end inline asm
$L__tmp648:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd2587, %rd2547;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2587;  mov.b64 {bh,bl}, %rd2555;  mov.b64 {ch,cl}, %rd2575;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2587, {ah,al};}
	// end inline asm
$L__tmp649:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2555;  mov.b64 {bh,bl}, %rd2575;  mov.b64 {ch,cl}, %rd2567;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2555, {ah,al};}
	// end inline asm
$L__tmp650:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2575;  mov.b64 {bh,bl}, %rd2567;  mov.b64 {ch,cl}, %rd2422;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2575, {ah,al};}
	// end inline asm
$L__tmp651:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2567;  mov.b64 {bh,bl}, %rd2422;  mov.b64 {ch,cl}, %rd2547;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2567, {ah,al};}
	// end inline asm
$L__tmp652:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd2603, %rd2573;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2603;  mov.b64 {bh,bl}, %rd2549;  mov.b64 {ch,cl}, %rd2611;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2603, {ah,al};}
	// end inline asm
$L__tmp653:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd2607, %rd2549;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2607;  mov.b64 {bh,bl}, %rd2611;  mov.b64 {ch,cl}, %rd2569;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2607, {ah,al};}
	// end inline asm
$L__tmp654:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2611;  mov.b64 {bh,bl}, %rd2569;  mov.b64 {ch,cl}, %rd2619;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2611, {ah,al};}
	// end inline asm
$L__tmp655:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2569;  mov.b64 {bh,bl}, %rd2619;  mov.b64 {ch,cl}, %rd2573;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2569, {ah,al};}
	// end inline asm
$L__tmp656:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2619;  mov.b64 {bh,bl}, %rd2573;  mov.b64 {ch,cl}, %rd2549;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2619, {ah,al};}
	// end inline asm
$L__tmp657:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd2623, %rd2581;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2623;  mov.b64 {bh,bl}, %rd2641;  mov.b64 {ch,cl}, %rd2557;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2623, {ah,al};}
	// end inline asm
$L__tmp658:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd2627, %rd2641;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2627;  mov.b64 {bh,bl}, %rd2557;  mov.b64 {ch,cl}, %rd2559;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2627, {ah,al};}
	// end inline asm
$L__tmp659:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2557;  mov.b64 {bh,bl}, %rd2559;  mov.b64 {ch,cl}, %rd2553;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2557, {ah,al};}
	// end inline asm
$L__tmp660:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2559;  mov.b64 {bh,bl}, %rd2553;  mov.b64 {ch,cl}, %rd2581;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2559, {ah,al};}
	// end inline asm
$L__tmp661:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2553;  mov.b64 {bh,bl}, %rd2581;  mov.b64 {ch,cl}, %rd2641;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2553, {ah,al};}
	// end inline asm
$L__tmp662:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd2643, %rd2565;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2643;  mov.b64 {bh,bl}, %rd2571;  mov.b64 {ch,cl}, %rd2579;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2643, {ah,al};}
	// end inline asm
$L__tmp663:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd2647, %rd2571;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2647;  mov.b64 {bh,bl}, %rd2579;  mov.b64 {ch,cl}, %rd2577;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2647, {ah,al};}
	// end inline asm
$L__tmp664:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2579;  mov.b64 {bh,bl}, %rd2577;  mov.b64 {ch,cl}, %rd2561;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2579, {ah,al};}
	// end inline asm
$L__tmp665:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2577;  mov.b64 {bh,bl}, %rd2561;  mov.b64 {ch,cl}, %rd2565;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2577, {ah,al};}
	// end inline asm
$L__tmp666:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2561;  mov.b64 {bh,bl}, %rd2565;  mov.b64 {ch,cl}, %rd2571;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2561, {ah,al};}
	// end inline asm
$L__tmp667:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd2663, %rd2680;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2663;  mov.b64 {bh,bl}, %rd2681;  mov.b64 {ch,cl}, %rd2551;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2663, {ah,al};}
	// end inline asm
$L__tmp668:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd2667, %rd2681;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2667;  mov.b64 {bh,bl}, %rd2551;  mov.b64 {ch,cl}, %rd2563;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2667, {ah,al};}
	// end inline asm
$L__tmp669:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2551;  mov.b64 {bh,bl}, %rd2563;  mov.b64 {ch,cl}, %rd2679;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2551, {ah,al};}
	// end inline asm
$L__tmp670:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2563;  mov.b64 {bh,bl}, %rd2679;  mov.b64 {ch,cl}, %rd2680;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2563, {ah,al};}
	// end inline asm
$L__tmp671:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2679;  mov.b64 {bh,bl}, %rd2680;  mov.b64 {ch,cl}, %rd2681;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2679, {ah,al};}
	// end inline asm
$L__tmp672:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:437     state[0] = state[0] ^ RClocal[i];
	.loc	1 437 5, function_name $L__info_string0, inlined_at 1 475 7
	xor.b64  	%rd2744, %rd2583, 138;
$L__tmp673:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd2686, %rd2744;
	// begin inline asm
	  xor.b64 %rd2686, %rd2686, %rd2603;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2686, %rd2686, %rd2623;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2686, %rd2686, %rd2643;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2686, %rd2686, %rd2663;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd2698, %rd2587;
	// begin inline asm
	  xor.b64 %rd2698, %rd2698, %rd2607;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2698, %rd2698, %rd2627;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2698, %rd2698, %rd2647;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2698, %rd2698, %rd2667;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd2710, %rd2555;
	// begin inline asm
	  xor.b64 %rd2710, %rd2710, %rd2611;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2710, %rd2710, %rd2557;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2710, %rd2710, %rd2579;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2710, %rd2710, %rd2551;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd2722, %rd2575;
	// begin inline asm
	  xor.b64 %rd2722, %rd2722, %rd2569;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2722, %rd2722, %rd2559;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2722, %rd2722, %rd2577;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2722, %rd2722, %rd2563;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd2734, %rd2567;
	// begin inline asm
	  xor.b64 %rd2734, %rd2734, %rd2619;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2734, %rd2734, %rd2553;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2734, %rd2734, %rd2561;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd2734, %rd2734, %rd2679;
	// end inline asm
$L__tmp674:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r700}, %rd2698;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r701,%dummy}, %rd2698;
	}
	shf.l.wrap.b32 	%r702, %r701, %r700, 1;
	shf.l.wrap.b32 	%r703, %r700, %r701, 1;
	mov.b64 	%rd2765, {%r703, %r702};
$L__tmp675:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd2743, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2743, %rd2744, %rd2765;  xor.b64 %rd2743, %rd2743, %rd2734;}
	// end inline asm
$L__tmp676:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd2892, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2892, %rd2603, %rd2765;  xor.b64 %rd2892, %rd2892, %rd2734;}
	// end inline asm
$L__tmp677:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd2753, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2753, %rd2623, %rd2765;  xor.b64 %rd2753, %rd2753, %rd2734;}
	// end inline asm
$L__tmp678:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd2884, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2884, %rd2643, %rd2765;  xor.b64 %rd2884, %rd2884, %rd2734;}
	// end inline asm
$L__tmp679:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd2874, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2874, %rd2663, %rd2765;  xor.b64 %rd2874, %rd2874, %rd2734;}
	// end inline asm
$L__tmp680:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r704}, %rd2710;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r705,%dummy}, %rd2710;
	}
	shf.l.wrap.b32 	%r706, %r705, %r704, 1;
	shf.l.wrap.b32 	%r707, %r704, %r705, 1;
	mov.b64 	%rd2790, {%r707, %r706};
$L__tmp681:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd2902, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2902, %rd2587, %rd2790;  xor.b64 %rd2902, %rd2902, %rd2686;}
	// end inline asm
$L__tmp682:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd2868, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2868, %rd2607, %rd2790;  xor.b64 %rd2868, %rd2868, %rd2686;}
	// end inline asm
$L__tmp683:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd2900, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2900, %rd2627, %rd2790;  xor.b64 %rd2900, %rd2900, %rd2686;}
	// end inline asm
$L__tmp684:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd2890, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2890, %rd2647, %rd2790;  xor.b64 %rd2890, %rd2890, %rd2686;}
	// end inline asm
$L__tmp685:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd2788, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2788, %rd2667, %rd2790;  xor.b64 %rd2788, %rd2788, %rd2686;}
	// end inline asm
$L__tmp686:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r708}, %rd2722;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r709,%dummy}, %rd2722;
	}
	shf.l.wrap.b32 	%r710, %r709, %r708, 1;
	shf.l.wrap.b32 	%r711, %r708, %r709, 1;
	mov.b64 	%rd2815, {%r711, %r710};
$L__tmp687:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd2793, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2793, %rd2555, %rd2815;  xor.b64 %rd2793, %rd2793, %rd2698;}
	// end inline asm
$L__tmp688:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd2798, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2798, %rd2611, %rd2815;  xor.b64 %rd2798, %rd2798, %rd2698;}
	// end inline asm
$L__tmp689:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd2876, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2876, %rd2557, %rd2815;  xor.b64 %rd2876, %rd2876, %rd2698;}
	// end inline asm
$L__tmp690:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd2898, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2898, %rd2579, %rd2815;  xor.b64 %rd2898, %rd2898, %rd2698;}
	// end inline asm
$L__tmp691:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd2813, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2813, %rd2551, %rd2815;  xor.b64 %rd2813, %rd2813, %rd2698;}
	// end inline asm
$L__tmp692:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r712}, %rd2734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r713,%dummy}, %rd2734;
	}
	shf.l.wrap.b32 	%r714, %r713, %r712, 1;
	shf.l.wrap.b32 	%r715, %r712, %r713, 1;
	mov.b64 	%rd2840, {%r715, %r714};
$L__tmp693:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd2894, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2894, %rd2575, %rd2840;  xor.b64 %rd2894, %rd2894, %rd2710;}
	// end inline asm
$L__tmp694:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd2823, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2823, %rd2569, %rd2840;  xor.b64 %rd2823, %rd2823, %rd2710;}
	// end inline asm
$L__tmp695:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd2878, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2878, %rd2559, %rd2840;  xor.b64 %rd2878, %rd2878, %rd2710;}
	// end inline asm
$L__tmp696:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd2896, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2896, %rd2577, %rd2840;  xor.b64 %rd2896, %rd2896, %rd2710;}
	// end inline asm
$L__tmp697:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd2882, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2882, %rd2563, %rd2840;  xor.b64 %rd2882, %rd2882, %rd2710;}
	// end inline asm
$L__tmp698:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r716}, %rd2686;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r717,%dummy}, %rd2686;
	}
	shf.l.wrap.b32 	%r718, %r717, %r716, 1;
	shf.l.wrap.b32 	%r719, %r716, %r717, 1;
	mov.b64 	%rd2865, {%r719, %r718};
$L__tmp699:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd2886, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2886, %rd2567, %rd2865;  xor.b64 %rd2886, %rd2886, %rd2722;}
	// end inline asm
$L__tmp700:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd2870, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2870, %rd2619, %rd2865;  xor.b64 %rd2870, %rd2870, %rd2722;}
	// end inline asm
$L__tmp701:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd2872, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2872, %rd2553, %rd2865;  xor.b64 %rd2872, %rd2872, %rd2722;}
	// end inline asm
$L__tmp702:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd2880, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2880, %rd2561, %rd2865;  xor.b64 %rd2880, %rd2880, %rd2722;}
	// end inline asm
$L__tmp703:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd2888, %rd7260;
	// begin inline asm
	{  xor.b64 %rd2888, %rd2679, %rd2865;  xor.b64 %rd2888, %rd2888, %rd2722;}
	// end inline asm
$L__tmp704:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 372 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd2868;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd2868, {scr,lo};}
	// end inline asm
$L__tmp705:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 373 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd2870;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd2870, {scr,lo};}
	// end inline asm
$L__tmp706:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:374     state[ 9] = ROTR64( state[22],  3 );
	.loc	1 374 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r720,%dummy}, %rd2813;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r721}, %rd2813;
	}
	shf.r.wrap.b32 	%r722, %r721, %r720, 3;
	shf.r.wrap.b32 	%r723, %r720, %r721, 3;
	mov.b64 	%rd2940, {%r723, %r722};
$L__tmp707:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 375 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd2872;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd2872, {scr,lo};}
	// end inline asm
$L__tmp708:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 376 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r323;mov.b64 {hi,lo}, %rd2874;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd2874, {scr,lo};}
	// end inline asm
$L__tmp709:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:377     state[20] = ROTR64( state[ 2],  2 );
	.loc	1 377 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r724,%dummy}, %rd2793;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r725}, %rd2793;
	}
	shf.r.wrap.b32 	%r726, %r725, %r724, 2;
	shf.r.wrap.b32 	%r727, %r724, %r725, 2;
	mov.b64 	%rd3001, {%r727, %r726};
$L__tmp710:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 378 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd2876;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd2876, {scr,lo};}
	// end inline asm
$L__tmp711:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 379 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd2878;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd2878, {scr,lo};}
	// end inline asm
$L__tmp712:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:169     asm ( "{"
	.loc	1 169 5, function_name $L__info_string8, inlined_at 1 380 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd2880;prmt.b32 scr, hi, lo, 0x2107;prmt.b32 lo, hi, lo, 0x6543;mov.b64 %rd2880, {scr,lo};}
	// end inline asm
$L__tmp713:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:183       asm ( "{"
	.loc	1 183 7, function_name $L__info_string9, inlined_at 1 381 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd2882;prmt.b32 scr, lo, hi, 0x0765;prmt.b32 lo, lo, hi, 0x4321;mov.b64 %rd2882, {scr,lo};}
	// end inline asm
$L__tmp714:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 382 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r326;mov.b64 {hi,lo}, %rd2884;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd2884, {scr,lo};}
	// end inline asm
$L__tmp715:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 386 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd2886;                  mov.b32 mag, %r327;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd2886, {scr,lo};             }
	// end inline asm
$L__tmp716:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 397 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r328;mov.b64 {hi,lo}, %rd2888;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd2888, {scr,lo};}
	// end inline asm
$L__tmp717:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:398     state[24] = ROTL64( state[21],  2 );
	.loc	1 398 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r728}, %rd2788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r729,%dummy}, %rd2788;
	}
	shf.l.wrap.b32 	%r730, %r729, %r728, 2;
	shf.l.wrap.b32 	%r731, %r728, %r729, 2;
	mov.b64 	%rd3000, {%r731, %r730};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:399     state[21] = ROTR64( state[ 8], 9 );            // R9
	.loc	1 399 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r732,%dummy}, %rd2823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r733}, %rd2823;
	}
	shf.r.wrap.b32 	%r734, %r733, %r732, 9;
	shf.r.wrap.b32 	%r735, %r732, %r733, 9;
	mov.b64 	%rd3002, {%r735, %r734};
$L__tmp718:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 400 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r329;mov.b64 {hi,lo}, %rd2890;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd2890, {scr,lo};}
	// end inline asm
$L__tmp719:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:124     asm ("{"
	.loc	1 124 5, function_name $L__info_string11, inlined_at 1 405 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd2892;                  mov.b32 mag, %r331;                      shf.l.wrap.b32 scr, lo, hi, mag;      shf.l.wrap.b32 lo, hi, lo, mag;       mov.b64 %rd2892, {scr,lo};             }
	// end inline asm
$L__tmp720:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 406 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd2894;                  mov.b32 mag, %r331;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd2894, {scr,lo};             }
	// end inline asm
$L__tmp721:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 414 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd2896;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd2896, {scr,lo};}
	// end inline asm
$L__tmp722:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 415 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r333;mov.b64 {hi,lo}, %rd2898;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd2898, {scr,lo};}
	// end inline asm
$L__tmp723:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 416 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r334;mov.b64 {hi,lo}, %rd2900;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd2900, {scr,lo};}
	// end inline asm
$L__tmp724:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:417     state[11] = ROTL64( state[ 7],  6 );
	.loc	1 417 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r736}, %rd2798;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r737,%dummy}, %rd2798;
	}
	shf.l.wrap.b32 	%r738, %r737, %r736, 6;
	shf.l.wrap.b32 	%r739, %r736, %r737, 6;
	mov.b64 	%rd2962, {%r739, %r738};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:418     state[ 7] = ROTL64( state[10],  3 );
	.loc	1 418 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r740}, %rd2753;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r741,%dummy}, %rd2753;
	}
	shf.l.wrap.b32 	%r742, %r741, %r740, 3;
	shf.l.wrap.b32 	%r743, %r740, %r741, 3;
	mov.b64 	%rd2932, {%r743, %r742};
$L__tmp725:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:199     asm ("{"
	.loc	1 199 5, function_name $L__info_string12, inlined_at 1 419 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd2902;shf.l.wrap.b32 scr, lo, hi, 1;shf.l.wrap.b32 lo, hi, lo, 1;mov.b64 %rd2902, {scr,lo};}
	// end inline asm
$L__tmp726:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd2904, %rd2743;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2904;  mov.b64 {bh,bl}, %rd2868;  mov.b64 {ch,cl}, %rd2876;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2904, {ah,al};}
	// end inline asm
$L__tmp727:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd2908, %rd2868;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2908;  mov.b64 {bh,bl}, %rd2876;  mov.b64 {ch,cl}, %rd2896;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2908, {ah,al};}
	// end inline asm
$L__tmp728:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2876;  mov.b64 {bh,bl}, %rd2896;  mov.b64 {ch,cl}, %rd2888;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2876, {ah,al};}
	// end inline asm
$L__tmp729:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2896;  mov.b64 {bh,bl}, %rd2888;  mov.b64 {ch,cl}, %rd2743;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2896, {ah,al};}
	// end inline asm
$L__tmp730:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2888;  mov.b64 {bh,bl}, %rd2743;  mov.b64 {ch,cl}, %rd2868;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2888, {ah,al};}
	// end inline asm
$L__tmp731:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd2924, %rd2894;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2924;  mov.b64 {bh,bl}, %rd2870;  mov.b64 {ch,cl}, %rd2932;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2924, {ah,al};}
	// end inline asm
$L__tmp732:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd2928, %rd2870;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2928;  mov.b64 {bh,bl}, %rd2932;  mov.b64 {ch,cl}, %rd2890;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2928, {ah,al};}
	// end inline asm
$L__tmp733:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2932;  mov.b64 {bh,bl}, %rd2890;  mov.b64 {ch,cl}, %rd2940;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2932, {ah,al};}
	// end inline asm
$L__tmp734:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2890;  mov.b64 {bh,bl}, %rd2940;  mov.b64 {ch,cl}, %rd2894;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2890, {ah,al};}
	// end inline asm
$L__tmp735:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2940;  mov.b64 {bh,bl}, %rd2894;  mov.b64 {ch,cl}, %rd2870;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2940, {ah,al};}
	// end inline asm
$L__tmp736:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd2944, %rd2902;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2944;  mov.b64 {bh,bl}, %rd2962;  mov.b64 {ch,cl}, %rd2878;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2944, {ah,al};}
	// end inline asm
$L__tmp737:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd2948, %rd2962;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2948;  mov.b64 {bh,bl}, %rd2878;  mov.b64 {ch,cl}, %rd2880;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2948, {ah,al};}
	// end inline asm
$L__tmp738:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2878;  mov.b64 {bh,bl}, %rd2880;  mov.b64 {ch,cl}, %rd2874;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2878, {ah,al};}
	// end inline asm
$L__tmp739:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2880;  mov.b64 {bh,bl}, %rd2874;  mov.b64 {ch,cl}, %rd2902;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2880, {ah,al};}
	// end inline asm
$L__tmp740:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2874;  mov.b64 {bh,bl}, %rd2902;  mov.b64 {ch,cl}, %rd2962;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2874, {ah,al};}
	// end inline asm
$L__tmp741:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd2964, %rd2886;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2964;  mov.b64 {bh,bl}, %rd2892;  mov.b64 {ch,cl}, %rd2900;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2964, {ah,al};}
	// end inline asm
$L__tmp742:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd2968, %rd2892;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2968;  mov.b64 {bh,bl}, %rd2900;  mov.b64 {ch,cl}, %rd2898;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2968, {ah,al};}
	// end inline asm
$L__tmp743:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2900;  mov.b64 {bh,bl}, %rd2898;  mov.b64 {ch,cl}, %rd2882;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2900, {ah,al};}
	// end inline asm
$L__tmp744:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2898;  mov.b64 {bh,bl}, %rd2882;  mov.b64 {ch,cl}, %rd2886;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2898, {ah,al};}
	// end inline asm
$L__tmp745:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2882;  mov.b64 {bh,bl}, %rd2886;  mov.b64 {ch,cl}, %rd2892;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2882, {ah,al};}
	// end inline asm
$L__tmp746:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd2984, %rd3001;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2984;  mov.b64 {bh,bl}, %rd3002;  mov.b64 {ch,cl}, %rd2872;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2984, {ah,al};}
	// end inline asm
$L__tmp747:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd2988, %rd3002;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2988;  mov.b64 {bh,bl}, %rd2872;  mov.b64 {ch,cl}, %rd2884;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2988, {ah,al};}
	// end inline asm
$L__tmp748:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2872;  mov.b64 {bh,bl}, %rd2884;  mov.b64 {ch,cl}, %rd3000;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2872, {ah,al};}
	// end inline asm
$L__tmp749:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd2884;  mov.b64 {bh,bl}, %rd3000;  mov.b64 {ch,cl}, %rd3001;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd2884, {ah,al};}
	// end inline asm
$L__tmp750:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3000;  mov.b64 {bh,bl}, %rd3001;  mov.b64 {ch,cl}, %rd3002;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3000, {ah,al};}
	// end inline asm
$L__tmp751:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:437     state[0] = state[0] ^ RClocal[i];
	.loc	1 437 5, function_name $L__info_string0, inlined_at 1 475 7
	xor.b64  	%rd3065, %rd2904, 136;
$L__tmp752:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd3007, %rd3065;
	// begin inline asm
	  xor.b64 %rd3007, %rd3007, %rd2924;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3007, %rd3007, %rd2944;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3007, %rd3007, %rd2964;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3007, %rd3007, %rd2984;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd3019, %rd2908;
	// begin inline asm
	  xor.b64 %rd3019, %rd3019, %rd2928;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3019, %rd3019, %rd2948;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3019, %rd3019, %rd2968;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3019, %rd3019, %rd2988;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd3031, %rd2876;
	// begin inline asm
	  xor.b64 %rd3031, %rd3031, %rd2932;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3031, %rd3031, %rd2878;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3031, %rd3031, %rd2900;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3031, %rd3031, %rd2872;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd3043, %rd2896;
	// begin inline asm
	  xor.b64 %rd3043, %rd3043, %rd2890;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3043, %rd3043, %rd2880;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3043, %rd3043, %rd2898;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3043, %rd3043, %rd2884;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd3055, %rd2888;
	// begin inline asm
	  xor.b64 %rd3055, %rd3055, %rd2940;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3055, %rd3055, %rd2874;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3055, %rd3055, %rd2882;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3055, %rd3055, %rd3000;
	// end inline asm
$L__tmp753:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r744}, %rd3019;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r745,%dummy}, %rd3019;
	}
	shf.l.wrap.b32 	%r746, %r745, %r744, 1;
	shf.l.wrap.b32 	%r747, %r744, %r745, 1;
	mov.b64 	%rd3086, {%r747, %r746};
$L__tmp754:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd3064, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3064, %rd3065, %rd3086;  xor.b64 %rd3064, %rd3064, %rd3055;}
	// end inline asm
$L__tmp755:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd3213, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3213, %rd2924, %rd3086;  xor.b64 %rd3213, %rd3213, %rd3055;}
	// end inline asm
$L__tmp756:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd3074, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3074, %rd2944, %rd3086;  xor.b64 %rd3074, %rd3074, %rd3055;}
	// end inline asm
$L__tmp757:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd3205, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3205, %rd2964, %rd3086;  xor.b64 %rd3205, %rd3205, %rd3055;}
	// end inline asm
$L__tmp758:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd3195, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3195, %rd2984, %rd3086;  xor.b64 %rd3195, %rd3195, %rd3055;}
	// end inline asm
$L__tmp759:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r748}, %rd3031;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r749,%dummy}, %rd3031;
	}
	shf.l.wrap.b32 	%r750, %r749, %r748, 1;
	shf.l.wrap.b32 	%r751, %r748, %r749, 1;
	mov.b64 	%rd3111, {%r751, %r750};
$L__tmp760:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd3223, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3223, %rd2908, %rd3111;  xor.b64 %rd3223, %rd3223, %rd3007;}
	// end inline asm
$L__tmp761:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd3189, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3189, %rd2928, %rd3111;  xor.b64 %rd3189, %rd3189, %rd3007;}
	// end inline asm
$L__tmp762:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd3221, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3221, %rd2948, %rd3111;  xor.b64 %rd3221, %rd3221, %rd3007;}
	// end inline asm
$L__tmp763:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd3211, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3211, %rd2968, %rd3111;  xor.b64 %rd3211, %rd3211, %rd3007;}
	// end inline asm
$L__tmp764:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd3109, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3109, %rd2988, %rd3111;  xor.b64 %rd3109, %rd3109, %rd3007;}
	// end inline asm
$L__tmp765:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r752}, %rd3043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r753,%dummy}, %rd3043;
	}
	shf.l.wrap.b32 	%r754, %r753, %r752, 1;
	shf.l.wrap.b32 	%r755, %r752, %r753, 1;
	mov.b64 	%rd3136, {%r755, %r754};
$L__tmp766:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd3114, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3114, %rd2876, %rd3136;  xor.b64 %rd3114, %rd3114, %rd3019;}
	// end inline asm
$L__tmp767:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd3119, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3119, %rd2932, %rd3136;  xor.b64 %rd3119, %rd3119, %rd3019;}
	// end inline asm
$L__tmp768:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd3197, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3197, %rd2878, %rd3136;  xor.b64 %rd3197, %rd3197, %rd3019;}
	// end inline asm
$L__tmp769:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd3219, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3219, %rd2900, %rd3136;  xor.b64 %rd3219, %rd3219, %rd3019;}
	// end inline asm
$L__tmp770:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd3134, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3134, %rd2872, %rd3136;  xor.b64 %rd3134, %rd3134, %rd3019;}
	// end inline asm
$L__tmp771:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r756}, %rd3055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r757,%dummy}, %rd3055;
	}
	shf.l.wrap.b32 	%r758, %r757, %r756, 1;
	shf.l.wrap.b32 	%r759, %r756, %r757, 1;
	mov.b64 	%rd3161, {%r759, %r758};
$L__tmp772:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd3215, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3215, %rd2896, %rd3161;  xor.b64 %rd3215, %rd3215, %rd3031;}
	// end inline asm
$L__tmp773:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd3144, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3144, %rd2890, %rd3161;  xor.b64 %rd3144, %rd3144, %rd3031;}
	// end inline asm
$L__tmp774:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd3199, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3199, %rd2880, %rd3161;  xor.b64 %rd3199, %rd3199, %rd3031;}
	// end inline asm
$L__tmp775:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd3217, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3217, %rd2898, %rd3161;  xor.b64 %rd3217, %rd3217, %rd3031;}
	// end inline asm
$L__tmp776:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd3203, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3203, %rd2884, %rd3161;  xor.b64 %rd3203, %rd3203, %rd3031;}
	// end inline asm
$L__tmp777:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r760}, %rd3007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r761,%dummy}, %rd3007;
	}
	shf.l.wrap.b32 	%r762, %r761, %r760, 1;
	shf.l.wrap.b32 	%r763, %r760, %r761, 1;
	mov.b64 	%rd3186, {%r763, %r762};
$L__tmp778:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd3207, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3207, %rd2888, %rd3186;  xor.b64 %rd3207, %rd3207, %rd3043;}
	// end inline asm
$L__tmp779:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd3191, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3191, %rd2940, %rd3186;  xor.b64 %rd3191, %rd3191, %rd3043;}
	// end inline asm
$L__tmp780:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd3193, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3193, %rd2874, %rd3186;  xor.b64 %rd3193, %rd3193, %rd3043;}
	// end inline asm
$L__tmp781:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd3201, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3201, %rd2882, %rd3186;  xor.b64 %rd3201, %rd3201, %rd3043;}
	// end inline asm
$L__tmp782:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd3209, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3209, %rd3000, %rd3186;  xor.b64 %rd3209, %rd3209, %rd3043;}
	// end inline asm
$L__tmp783:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 372 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd3189;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd3189, {scr,lo};}
	// end inline asm
$L__tmp784:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 373 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd3191;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd3191, {scr,lo};}
	// end inline asm
$L__tmp785:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:374     state[ 9] = ROTR64( state[22],  3 );
	.loc	1 374 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r764,%dummy}, %rd3134;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r765}, %rd3134;
	}
	shf.r.wrap.b32 	%r766, %r765, %r764, 3;
	shf.r.wrap.b32 	%r767, %r764, %r765, 3;
	mov.b64 	%rd3261, {%r767, %r766};
$L__tmp786:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 375 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd3193;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd3193, {scr,lo};}
	// end inline asm
$L__tmp787:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 376 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r323;mov.b64 {hi,lo}, %rd3195;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd3195, {scr,lo};}
	// end inline asm
$L__tmp788:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:377     state[20] = ROTR64( state[ 2],  2 );
	.loc	1 377 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r768,%dummy}, %rd3114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r769}, %rd3114;
	}
	shf.r.wrap.b32 	%r770, %r769, %r768, 2;
	shf.r.wrap.b32 	%r771, %r768, %r769, 2;
	mov.b64 	%rd3322, {%r771, %r770};
$L__tmp789:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 378 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd3197;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd3197, {scr,lo};}
	// end inline asm
$L__tmp790:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 379 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd3199;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd3199, {scr,lo};}
	// end inline asm
$L__tmp791:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:169     asm ( "{"
	.loc	1 169 5, function_name $L__info_string8, inlined_at 1 380 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd3201;prmt.b32 scr, hi, lo, 0x2107;prmt.b32 lo, hi, lo, 0x6543;mov.b64 %rd3201, {scr,lo};}
	// end inline asm
$L__tmp792:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:183       asm ( "{"
	.loc	1 183 7, function_name $L__info_string9, inlined_at 1 381 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd3203;prmt.b32 scr, lo, hi, 0x0765;prmt.b32 lo, lo, hi, 0x4321;mov.b64 %rd3203, {scr,lo};}
	// end inline asm
$L__tmp793:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 382 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r326;mov.b64 {hi,lo}, %rd3205;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd3205, {scr,lo};}
	// end inline asm
$L__tmp794:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 386 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd3207;                  mov.b32 mag, %r327;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd3207, {scr,lo};             }
	// end inline asm
$L__tmp795:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 397 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r328;mov.b64 {hi,lo}, %rd3209;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd3209, {scr,lo};}
	// end inline asm
$L__tmp796:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:398     state[24] = ROTL64( state[21],  2 );
	.loc	1 398 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r772}, %rd3109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r773,%dummy}, %rd3109;
	}
	shf.l.wrap.b32 	%r774, %r773, %r772, 2;
	shf.l.wrap.b32 	%r775, %r772, %r773, 2;
	mov.b64 	%rd3321, {%r775, %r774};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:399     state[21] = ROTR64( state[ 8], 9 );            // R9
	.loc	1 399 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r776,%dummy}, %rd3144;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r777}, %rd3144;
	}
	shf.r.wrap.b32 	%r778, %r777, %r776, 9;
	shf.r.wrap.b32 	%r779, %r776, %r777, 9;
	mov.b64 	%rd3323, {%r779, %r778};
$L__tmp797:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 400 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r329;mov.b64 {hi,lo}, %rd3211;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd3211, {scr,lo};}
	// end inline asm
$L__tmp798:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:124     asm ("{"
	.loc	1 124 5, function_name $L__info_string11, inlined_at 1 405 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd3213;                  mov.b32 mag, %r331;                      shf.l.wrap.b32 scr, lo, hi, mag;      shf.l.wrap.b32 lo, hi, lo, mag;       mov.b64 %rd3213, {scr,lo};             }
	// end inline asm
$L__tmp799:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 406 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd3215;                  mov.b32 mag, %r331;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd3215, {scr,lo};             }
	// end inline asm
$L__tmp800:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 414 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd3217;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd3217, {scr,lo};}
	// end inline asm
$L__tmp801:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 415 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r333;mov.b64 {hi,lo}, %rd3219;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd3219, {scr,lo};}
	// end inline asm
$L__tmp802:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 416 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r334;mov.b64 {hi,lo}, %rd3221;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd3221, {scr,lo};}
	// end inline asm
$L__tmp803:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:417     state[11] = ROTL64( state[ 7],  6 );
	.loc	1 417 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r780}, %rd3119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r781,%dummy}, %rd3119;
	}
	shf.l.wrap.b32 	%r782, %r781, %r780, 6;
	shf.l.wrap.b32 	%r783, %r780, %r781, 6;
	mov.b64 	%rd3283, {%r783, %r782};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:418     state[ 7] = ROTL64( state[10],  3 );
	.loc	1 418 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r784}, %rd3074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r785,%dummy}, %rd3074;
	}
	shf.l.wrap.b32 	%r786, %r785, %r784, 3;
	shf.l.wrap.b32 	%r787, %r784, %r785, 3;
	mov.b64 	%rd3253, {%r787, %r786};
$L__tmp804:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:199     asm ("{"
	.loc	1 199 5, function_name $L__info_string12, inlined_at 1 419 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd3223;shf.l.wrap.b32 scr, lo, hi, 1;shf.l.wrap.b32 lo, hi, lo, 1;mov.b64 %rd3223, {scr,lo};}
	// end inline asm
$L__tmp805:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd3225, %rd3064;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3225;  mov.b64 {bh,bl}, %rd3189;  mov.b64 {ch,cl}, %rd3197;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3225, {ah,al};}
	// end inline asm
$L__tmp806:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd3229, %rd3189;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3229;  mov.b64 {bh,bl}, %rd3197;  mov.b64 {ch,cl}, %rd3217;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3229, {ah,al};}
	// end inline asm
$L__tmp807:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3197;  mov.b64 {bh,bl}, %rd3217;  mov.b64 {ch,cl}, %rd3209;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3197, {ah,al};}
	// end inline asm
$L__tmp808:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3217;  mov.b64 {bh,bl}, %rd3209;  mov.b64 {ch,cl}, %rd3064;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3217, {ah,al};}
	// end inline asm
$L__tmp809:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3209;  mov.b64 {bh,bl}, %rd3064;  mov.b64 {ch,cl}, %rd3189;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3209, {ah,al};}
	// end inline asm
$L__tmp810:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd3245, %rd3215;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3245;  mov.b64 {bh,bl}, %rd3191;  mov.b64 {ch,cl}, %rd3253;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3245, {ah,al};}
	// end inline asm
$L__tmp811:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd3249, %rd3191;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3249;  mov.b64 {bh,bl}, %rd3253;  mov.b64 {ch,cl}, %rd3211;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3249, {ah,al};}
	// end inline asm
$L__tmp812:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3253;  mov.b64 {bh,bl}, %rd3211;  mov.b64 {ch,cl}, %rd3261;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3253, {ah,al};}
	// end inline asm
$L__tmp813:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3211;  mov.b64 {bh,bl}, %rd3261;  mov.b64 {ch,cl}, %rd3215;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3211, {ah,al};}
	// end inline asm
$L__tmp814:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3261;  mov.b64 {bh,bl}, %rd3215;  mov.b64 {ch,cl}, %rd3191;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3261, {ah,al};}
	// end inline asm
$L__tmp815:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd3265, %rd3223;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3265;  mov.b64 {bh,bl}, %rd3283;  mov.b64 {ch,cl}, %rd3199;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3265, {ah,al};}
	// end inline asm
$L__tmp816:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd3269, %rd3283;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3269;  mov.b64 {bh,bl}, %rd3199;  mov.b64 {ch,cl}, %rd3201;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3269, {ah,al};}
	// end inline asm
$L__tmp817:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3199;  mov.b64 {bh,bl}, %rd3201;  mov.b64 {ch,cl}, %rd3195;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3199, {ah,al};}
	// end inline asm
$L__tmp818:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3201;  mov.b64 {bh,bl}, %rd3195;  mov.b64 {ch,cl}, %rd3223;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3201, {ah,al};}
	// end inline asm
$L__tmp819:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3195;  mov.b64 {bh,bl}, %rd3223;  mov.b64 {ch,cl}, %rd3283;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3195, {ah,al};}
	// end inline asm
$L__tmp820:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd3285, %rd3207;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3285;  mov.b64 {bh,bl}, %rd3213;  mov.b64 {ch,cl}, %rd3221;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3285, {ah,al};}
	// end inline asm
$L__tmp821:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd3289, %rd3213;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3289;  mov.b64 {bh,bl}, %rd3221;  mov.b64 {ch,cl}, %rd3219;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3289, {ah,al};}
	// end inline asm
$L__tmp822:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3221;  mov.b64 {bh,bl}, %rd3219;  mov.b64 {ch,cl}, %rd3203;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3221, {ah,al};}
	// end inline asm
$L__tmp823:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3219;  mov.b64 {bh,bl}, %rd3203;  mov.b64 {ch,cl}, %rd3207;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3219, {ah,al};}
	// end inline asm
$L__tmp824:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3203;  mov.b64 {bh,bl}, %rd3207;  mov.b64 {ch,cl}, %rd3213;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3203, {ah,al};}
	// end inline asm
$L__tmp825:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd3305, %rd3322;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3305;  mov.b64 {bh,bl}, %rd3323;  mov.b64 {ch,cl}, %rd3193;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3305, {ah,al};}
	// end inline asm
$L__tmp826:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd3309, %rd3323;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3309;  mov.b64 {bh,bl}, %rd3193;  mov.b64 {ch,cl}, %rd3205;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3309, {ah,al};}
	// end inline asm
$L__tmp827:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3193;  mov.b64 {bh,bl}, %rd3205;  mov.b64 {ch,cl}, %rd3321;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3193, {ah,al};}
	// end inline asm
$L__tmp828:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3205;  mov.b64 {bh,bl}, %rd3321;  mov.b64 {ch,cl}, %rd3322;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3205, {ah,al};}
	// end inline asm
$L__tmp829:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3321;  mov.b64 {bh,bl}, %rd3322;  mov.b64 {ch,cl}, %rd3323;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3321, {ah,al};}
	// end inline asm
$L__tmp830:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:437     state[0] = state[0] ^ RClocal[i];
	.loc	1 437 5, function_name $L__info_string0, inlined_at 1 475 7
	xor.b64  	%rd3386, %rd3225, 2147516425;
$L__tmp831:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd3328, %rd3386;
	// begin inline asm
	  xor.b64 %rd3328, %rd3328, %rd3245;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3328, %rd3328, %rd3265;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3328, %rd3328, %rd3285;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3328, %rd3328, %rd3305;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd3340, %rd3229;
	// begin inline asm
	  xor.b64 %rd3340, %rd3340, %rd3249;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3340, %rd3340, %rd3269;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3340, %rd3340, %rd3289;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3340, %rd3340, %rd3309;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd3352, %rd3197;
	// begin inline asm
	  xor.b64 %rd3352, %rd3352, %rd3253;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3352, %rd3352, %rd3199;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3352, %rd3352, %rd3221;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3352, %rd3352, %rd3193;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd3364, %rd3217;
	// begin inline asm
	  xor.b64 %rd3364, %rd3364, %rd3211;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3364, %rd3364, %rd3201;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3364, %rd3364, %rd3219;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3364, %rd3364, %rd3205;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd3376, %rd3209;
	// begin inline asm
	  xor.b64 %rd3376, %rd3376, %rd3261;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3376, %rd3376, %rd3195;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3376, %rd3376, %rd3203;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3376, %rd3376, %rd3321;
	// end inline asm
$L__tmp832:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r788}, %rd3340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r789,%dummy}, %rd3340;
	}
	shf.l.wrap.b32 	%r790, %r789, %r788, 1;
	shf.l.wrap.b32 	%r791, %r788, %r789, 1;
	mov.b64 	%rd3407, {%r791, %r790};
$L__tmp833:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd3385, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3385, %rd3386, %rd3407;  xor.b64 %rd3385, %rd3385, %rd3376;}
	// end inline asm
$L__tmp834:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd3534, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3534, %rd3245, %rd3407;  xor.b64 %rd3534, %rd3534, %rd3376;}
	// end inline asm
$L__tmp835:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd3395, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3395, %rd3265, %rd3407;  xor.b64 %rd3395, %rd3395, %rd3376;}
	// end inline asm
$L__tmp836:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd3526, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3526, %rd3285, %rd3407;  xor.b64 %rd3526, %rd3526, %rd3376;}
	// end inline asm
$L__tmp837:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd3516, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3516, %rd3305, %rd3407;  xor.b64 %rd3516, %rd3516, %rd3376;}
	// end inline asm
$L__tmp838:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r792}, %rd3352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r793,%dummy}, %rd3352;
	}
	shf.l.wrap.b32 	%r794, %r793, %r792, 1;
	shf.l.wrap.b32 	%r795, %r792, %r793, 1;
	mov.b64 	%rd3432, {%r795, %r794};
$L__tmp839:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd3544, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3544, %rd3229, %rd3432;  xor.b64 %rd3544, %rd3544, %rd3328;}
	// end inline asm
$L__tmp840:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd3510, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3510, %rd3249, %rd3432;  xor.b64 %rd3510, %rd3510, %rd3328;}
	// end inline asm
$L__tmp841:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd3542, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3542, %rd3269, %rd3432;  xor.b64 %rd3542, %rd3542, %rd3328;}
	// end inline asm
$L__tmp842:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd3532, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3532, %rd3289, %rd3432;  xor.b64 %rd3532, %rd3532, %rd3328;}
	// end inline asm
$L__tmp843:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd3430, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3430, %rd3309, %rd3432;  xor.b64 %rd3430, %rd3430, %rd3328;}
	// end inline asm
$L__tmp844:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r796}, %rd3364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r797,%dummy}, %rd3364;
	}
	shf.l.wrap.b32 	%r798, %r797, %r796, 1;
	shf.l.wrap.b32 	%r799, %r796, %r797, 1;
	mov.b64 	%rd3457, {%r799, %r798};
$L__tmp845:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd3435, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3435, %rd3197, %rd3457;  xor.b64 %rd3435, %rd3435, %rd3340;}
	// end inline asm
$L__tmp846:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd3440, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3440, %rd3253, %rd3457;  xor.b64 %rd3440, %rd3440, %rd3340;}
	// end inline asm
$L__tmp847:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd3518, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3518, %rd3199, %rd3457;  xor.b64 %rd3518, %rd3518, %rd3340;}
	// end inline asm
$L__tmp848:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd3540, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3540, %rd3221, %rd3457;  xor.b64 %rd3540, %rd3540, %rd3340;}
	// end inline asm
$L__tmp849:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd3455, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3455, %rd3193, %rd3457;  xor.b64 %rd3455, %rd3455, %rd3340;}
	// end inline asm
$L__tmp850:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r800}, %rd3376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r801,%dummy}, %rd3376;
	}
	shf.l.wrap.b32 	%r802, %r801, %r800, 1;
	shf.l.wrap.b32 	%r803, %r800, %r801, 1;
	mov.b64 	%rd3482, {%r803, %r802};
$L__tmp851:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd3536, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3536, %rd3217, %rd3482;  xor.b64 %rd3536, %rd3536, %rd3352;}
	// end inline asm
$L__tmp852:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd3465, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3465, %rd3211, %rd3482;  xor.b64 %rd3465, %rd3465, %rd3352;}
	// end inline asm
$L__tmp853:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd3520, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3520, %rd3201, %rd3482;  xor.b64 %rd3520, %rd3520, %rd3352;}
	// end inline asm
$L__tmp854:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd3538, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3538, %rd3219, %rd3482;  xor.b64 %rd3538, %rd3538, %rd3352;}
	// end inline asm
$L__tmp855:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd3524, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3524, %rd3205, %rd3482;  xor.b64 %rd3524, %rd3524, %rd3352;}
	// end inline asm
$L__tmp856:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r804}, %rd3328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r805,%dummy}, %rd3328;
	}
	shf.l.wrap.b32 	%r806, %r805, %r804, 1;
	shf.l.wrap.b32 	%r807, %r804, %r805, 1;
	mov.b64 	%rd3507, {%r807, %r806};
$L__tmp857:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd3528, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3528, %rd3209, %rd3507;  xor.b64 %rd3528, %rd3528, %rd3364;}
	// end inline asm
$L__tmp858:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd3512, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3512, %rd3261, %rd3507;  xor.b64 %rd3512, %rd3512, %rd3364;}
	// end inline asm
$L__tmp859:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd3514, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3514, %rd3195, %rd3507;  xor.b64 %rd3514, %rd3514, %rd3364;}
	// end inline asm
$L__tmp860:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd3522, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3522, %rd3203, %rd3507;  xor.b64 %rd3522, %rd3522, %rd3364;}
	// end inline asm
$L__tmp861:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd3530, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3530, %rd3321, %rd3507;  xor.b64 %rd3530, %rd3530, %rd3364;}
	// end inline asm
$L__tmp862:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 372 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd3510;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd3510, {scr,lo};}
	// end inline asm
$L__tmp863:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 373 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd3512;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd3512, {scr,lo};}
	// end inline asm
$L__tmp864:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:374     state[ 9] = ROTR64( state[22],  3 );
	.loc	1 374 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r808,%dummy}, %rd3455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r809}, %rd3455;
	}
	shf.r.wrap.b32 	%r810, %r809, %r808, 3;
	shf.r.wrap.b32 	%r811, %r808, %r809, 3;
	mov.b64 	%rd3582, {%r811, %r810};
$L__tmp865:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 375 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd3514;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd3514, {scr,lo};}
	// end inline asm
$L__tmp866:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 376 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r323;mov.b64 {hi,lo}, %rd3516;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd3516, {scr,lo};}
	// end inline asm
$L__tmp867:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:377     state[20] = ROTR64( state[ 2],  2 );
	.loc	1 377 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r812,%dummy}, %rd3435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r813}, %rd3435;
	}
	shf.r.wrap.b32 	%r814, %r813, %r812, 2;
	shf.r.wrap.b32 	%r815, %r812, %r813, 2;
	mov.b64 	%rd3643, {%r815, %r814};
$L__tmp868:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 378 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd3518;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd3518, {scr,lo};}
	// end inline asm
$L__tmp869:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 379 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd3520;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd3520, {scr,lo};}
	// end inline asm
$L__tmp870:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:169     asm ( "{"
	.loc	1 169 5, function_name $L__info_string8, inlined_at 1 380 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd3522;prmt.b32 scr, hi, lo, 0x2107;prmt.b32 lo, hi, lo, 0x6543;mov.b64 %rd3522, {scr,lo};}
	// end inline asm
$L__tmp871:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:183       asm ( "{"
	.loc	1 183 7, function_name $L__info_string9, inlined_at 1 381 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd3524;prmt.b32 scr, lo, hi, 0x0765;prmt.b32 lo, lo, hi, 0x4321;mov.b64 %rd3524, {scr,lo};}
	// end inline asm
$L__tmp872:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 382 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r326;mov.b64 {hi,lo}, %rd3526;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd3526, {scr,lo};}
	// end inline asm
$L__tmp873:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 386 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd3528;                  mov.b32 mag, %r327;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd3528, {scr,lo};             }
	// end inline asm
$L__tmp874:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 397 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r328;mov.b64 {hi,lo}, %rd3530;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd3530, {scr,lo};}
	// end inline asm
$L__tmp875:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:398     state[24] = ROTL64( state[21],  2 );
	.loc	1 398 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r816}, %rd3430;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r817,%dummy}, %rd3430;
	}
	shf.l.wrap.b32 	%r818, %r817, %r816, 2;
	shf.l.wrap.b32 	%r819, %r816, %r817, 2;
	mov.b64 	%rd3642, {%r819, %r818};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:399     state[21] = ROTR64( state[ 8], 9 );            // R9
	.loc	1 399 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r820,%dummy}, %rd3465;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r821}, %rd3465;
	}
	shf.r.wrap.b32 	%r822, %r821, %r820, 9;
	shf.r.wrap.b32 	%r823, %r820, %r821, 9;
	mov.b64 	%rd3644, {%r823, %r822};
$L__tmp876:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 400 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r329;mov.b64 {hi,lo}, %rd3532;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd3532, {scr,lo};}
	// end inline asm
$L__tmp877:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:124     asm ("{"
	.loc	1 124 5, function_name $L__info_string11, inlined_at 1 405 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd3534;                  mov.b32 mag, %r331;                      shf.l.wrap.b32 scr, lo, hi, mag;      shf.l.wrap.b32 lo, hi, lo, mag;       mov.b64 %rd3534, {scr,lo};             }
	// end inline asm
$L__tmp878:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 406 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd3536;                  mov.b32 mag, %r331;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd3536, {scr,lo};             }
	// end inline asm
$L__tmp879:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 414 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd3538;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd3538, {scr,lo};}
	// end inline asm
$L__tmp880:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 415 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r333;mov.b64 {hi,lo}, %rd3540;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd3540, {scr,lo};}
	// end inline asm
$L__tmp881:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 416 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r334;mov.b64 {hi,lo}, %rd3542;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd3542, {scr,lo};}
	// end inline asm
$L__tmp882:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:417     state[11] = ROTL64( state[ 7],  6 );
	.loc	1 417 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r824}, %rd3440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r825,%dummy}, %rd3440;
	}
	shf.l.wrap.b32 	%r826, %r825, %r824, 6;
	shf.l.wrap.b32 	%r827, %r824, %r825, 6;
	mov.b64 	%rd3604, {%r827, %r826};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:418     state[ 7] = ROTL64( state[10],  3 );
	.loc	1 418 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r828}, %rd3395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r829,%dummy}, %rd3395;
	}
	shf.l.wrap.b32 	%r830, %r829, %r828, 3;
	shf.l.wrap.b32 	%r831, %r828, %r829, 3;
	mov.b64 	%rd3574, {%r831, %r830};
$L__tmp883:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:199     asm ("{"
	.loc	1 199 5, function_name $L__info_string12, inlined_at 1 419 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd3544;shf.l.wrap.b32 scr, lo, hi, 1;shf.l.wrap.b32 lo, hi, lo, 1;mov.b64 %rd3544, {scr,lo};}
	// end inline asm
$L__tmp884:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd3546, %rd3385;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3546;  mov.b64 {bh,bl}, %rd3510;  mov.b64 {ch,cl}, %rd3518;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3546, {ah,al};}
	// end inline asm
$L__tmp885:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd3550, %rd3510;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3550;  mov.b64 {bh,bl}, %rd3518;  mov.b64 {ch,cl}, %rd3538;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3550, {ah,al};}
	// end inline asm
$L__tmp886:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3518;  mov.b64 {bh,bl}, %rd3538;  mov.b64 {ch,cl}, %rd3530;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3518, {ah,al};}
	// end inline asm
$L__tmp887:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3538;  mov.b64 {bh,bl}, %rd3530;  mov.b64 {ch,cl}, %rd3385;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3538, {ah,al};}
	// end inline asm
$L__tmp888:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3530;  mov.b64 {bh,bl}, %rd3385;  mov.b64 {ch,cl}, %rd3510;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3530, {ah,al};}
	// end inline asm
$L__tmp889:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd3566, %rd3536;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3566;  mov.b64 {bh,bl}, %rd3512;  mov.b64 {ch,cl}, %rd3574;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3566, {ah,al};}
	// end inline asm
$L__tmp890:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd3570, %rd3512;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3570;  mov.b64 {bh,bl}, %rd3574;  mov.b64 {ch,cl}, %rd3532;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3570, {ah,al};}
	// end inline asm
$L__tmp891:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3574;  mov.b64 {bh,bl}, %rd3532;  mov.b64 {ch,cl}, %rd3582;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3574, {ah,al};}
	// end inline asm
$L__tmp892:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3532;  mov.b64 {bh,bl}, %rd3582;  mov.b64 {ch,cl}, %rd3536;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3532, {ah,al};}
	// end inline asm
$L__tmp893:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3582;  mov.b64 {bh,bl}, %rd3536;  mov.b64 {ch,cl}, %rd3512;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3582, {ah,al};}
	// end inline asm
$L__tmp894:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd3586, %rd3544;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3586;  mov.b64 {bh,bl}, %rd3604;  mov.b64 {ch,cl}, %rd3520;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3586, {ah,al};}
	// end inline asm
$L__tmp895:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd3590, %rd3604;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3590;  mov.b64 {bh,bl}, %rd3520;  mov.b64 {ch,cl}, %rd3522;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3590, {ah,al};}
	// end inline asm
$L__tmp896:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3520;  mov.b64 {bh,bl}, %rd3522;  mov.b64 {ch,cl}, %rd3516;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3520, {ah,al};}
	// end inline asm
$L__tmp897:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3522;  mov.b64 {bh,bl}, %rd3516;  mov.b64 {ch,cl}, %rd3544;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3522, {ah,al};}
	// end inline asm
$L__tmp898:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3516;  mov.b64 {bh,bl}, %rd3544;  mov.b64 {ch,cl}, %rd3604;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3516, {ah,al};}
	// end inline asm
$L__tmp899:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd3606, %rd3528;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3606;  mov.b64 {bh,bl}, %rd3534;  mov.b64 {ch,cl}, %rd3542;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3606, {ah,al};}
	// end inline asm
$L__tmp900:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd3610, %rd3534;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3610;  mov.b64 {bh,bl}, %rd3542;  mov.b64 {ch,cl}, %rd3540;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3610, {ah,al};}
	// end inline asm
$L__tmp901:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3542;  mov.b64 {bh,bl}, %rd3540;  mov.b64 {ch,cl}, %rd3524;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3542, {ah,al};}
	// end inline asm
$L__tmp902:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3540;  mov.b64 {bh,bl}, %rd3524;  mov.b64 {ch,cl}, %rd3528;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3540, {ah,al};}
	// end inline asm
$L__tmp903:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3524;  mov.b64 {bh,bl}, %rd3528;  mov.b64 {ch,cl}, %rd3534;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3524, {ah,al};}
	// end inline asm
$L__tmp904:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd3626, %rd3643;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3626;  mov.b64 {bh,bl}, %rd3644;  mov.b64 {ch,cl}, %rd3514;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3626, {ah,al};}
	// end inline asm
$L__tmp905:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd3630, %rd3644;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3630;  mov.b64 {bh,bl}, %rd3514;  mov.b64 {ch,cl}, %rd3526;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3630, {ah,al};}
	// end inline asm
$L__tmp906:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3514;  mov.b64 {bh,bl}, %rd3526;  mov.b64 {ch,cl}, %rd3642;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3514, {ah,al};}
	// end inline asm
$L__tmp907:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3526;  mov.b64 {bh,bl}, %rd3642;  mov.b64 {ch,cl}, %rd3643;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3526, {ah,al};}
	// end inline asm
$L__tmp908:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3642;  mov.b64 {bh,bl}, %rd3643;  mov.b64 {ch,cl}, %rd3644;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3642, {ah,al};}
	// end inline asm
$L__tmp909:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:437     state[0] = state[0] ^ RClocal[i];
	.loc	1 437 5, function_name $L__info_string0, inlined_at 1 475 7
	xor.b64  	%rd3707, %rd3546, 2147483658;
$L__tmp910:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd3649, %rd3707;
	// begin inline asm
	  xor.b64 %rd3649, %rd3649, %rd3566;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3649, %rd3649, %rd3586;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3649, %rd3649, %rd3606;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3649, %rd3649, %rd3626;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd3661, %rd3550;
	// begin inline asm
	  xor.b64 %rd3661, %rd3661, %rd3570;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3661, %rd3661, %rd3590;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3661, %rd3661, %rd3610;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3661, %rd3661, %rd3630;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd3673, %rd3518;
	// begin inline asm
	  xor.b64 %rd3673, %rd3673, %rd3574;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3673, %rd3673, %rd3520;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3673, %rd3673, %rd3542;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3673, %rd3673, %rd3514;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd3685, %rd3538;
	// begin inline asm
	  xor.b64 %rd3685, %rd3685, %rd3532;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3685, %rd3685, %rd3522;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3685, %rd3685, %rd3540;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3685, %rd3685, %rd3526;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd3697, %rd3530;
	// begin inline asm
	  xor.b64 %rd3697, %rd3697, %rd3582;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3697, %rd3697, %rd3516;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3697, %rd3697, %rd3524;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3697, %rd3697, %rd3642;
	// end inline asm
$L__tmp911:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r832}, %rd3661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r833,%dummy}, %rd3661;
	}
	shf.l.wrap.b32 	%r834, %r833, %r832, 1;
	shf.l.wrap.b32 	%r835, %r832, %r833, 1;
	mov.b64 	%rd3728, {%r835, %r834};
$L__tmp912:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd3706, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3706, %rd3707, %rd3728;  xor.b64 %rd3706, %rd3706, %rd3697;}
	// end inline asm
$L__tmp913:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd3855, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3855, %rd3566, %rd3728;  xor.b64 %rd3855, %rd3855, %rd3697;}
	// end inline asm
$L__tmp914:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd3716, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3716, %rd3586, %rd3728;  xor.b64 %rd3716, %rd3716, %rd3697;}
	// end inline asm
$L__tmp915:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd3847, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3847, %rd3606, %rd3728;  xor.b64 %rd3847, %rd3847, %rd3697;}
	// end inline asm
$L__tmp916:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd3837, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3837, %rd3626, %rd3728;  xor.b64 %rd3837, %rd3837, %rd3697;}
	// end inline asm
$L__tmp917:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r836}, %rd3673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r837,%dummy}, %rd3673;
	}
	shf.l.wrap.b32 	%r838, %r837, %r836, 1;
	shf.l.wrap.b32 	%r839, %r836, %r837, 1;
	mov.b64 	%rd3753, {%r839, %r838};
$L__tmp918:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd3865, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3865, %rd3550, %rd3753;  xor.b64 %rd3865, %rd3865, %rd3649;}
	// end inline asm
$L__tmp919:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd3831, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3831, %rd3570, %rd3753;  xor.b64 %rd3831, %rd3831, %rd3649;}
	// end inline asm
$L__tmp920:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd3863, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3863, %rd3590, %rd3753;  xor.b64 %rd3863, %rd3863, %rd3649;}
	// end inline asm
$L__tmp921:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd3853, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3853, %rd3610, %rd3753;  xor.b64 %rd3853, %rd3853, %rd3649;}
	// end inline asm
$L__tmp922:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd3751, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3751, %rd3630, %rd3753;  xor.b64 %rd3751, %rd3751, %rd3649;}
	// end inline asm
$L__tmp923:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r840}, %rd3685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r841,%dummy}, %rd3685;
	}
	shf.l.wrap.b32 	%r842, %r841, %r840, 1;
	shf.l.wrap.b32 	%r843, %r840, %r841, 1;
	mov.b64 	%rd3778, {%r843, %r842};
$L__tmp924:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd3756, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3756, %rd3518, %rd3778;  xor.b64 %rd3756, %rd3756, %rd3661;}
	// end inline asm
$L__tmp925:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd3761, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3761, %rd3574, %rd3778;  xor.b64 %rd3761, %rd3761, %rd3661;}
	// end inline asm
$L__tmp926:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd3839, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3839, %rd3520, %rd3778;  xor.b64 %rd3839, %rd3839, %rd3661;}
	// end inline asm
$L__tmp927:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd3861, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3861, %rd3542, %rd3778;  xor.b64 %rd3861, %rd3861, %rd3661;}
	// end inline asm
$L__tmp928:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd3776, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3776, %rd3514, %rd3778;  xor.b64 %rd3776, %rd3776, %rd3661;}
	// end inline asm
$L__tmp929:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r844}, %rd3697;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r845,%dummy}, %rd3697;
	}
	shf.l.wrap.b32 	%r846, %r845, %r844, 1;
	shf.l.wrap.b32 	%r847, %r844, %r845, 1;
	mov.b64 	%rd3803, {%r847, %r846};
$L__tmp930:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd3857, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3857, %rd3538, %rd3803;  xor.b64 %rd3857, %rd3857, %rd3673;}
	// end inline asm
$L__tmp931:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd3786, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3786, %rd3532, %rd3803;  xor.b64 %rd3786, %rd3786, %rd3673;}
	// end inline asm
$L__tmp932:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd3841, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3841, %rd3522, %rd3803;  xor.b64 %rd3841, %rd3841, %rd3673;}
	// end inline asm
$L__tmp933:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd3859, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3859, %rd3540, %rd3803;  xor.b64 %rd3859, %rd3859, %rd3673;}
	// end inline asm
$L__tmp934:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd3845, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3845, %rd3526, %rd3803;  xor.b64 %rd3845, %rd3845, %rd3673;}
	// end inline asm
$L__tmp935:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r848}, %rd3649;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r849,%dummy}, %rd3649;
	}
	shf.l.wrap.b32 	%r850, %r849, %r848, 1;
	shf.l.wrap.b32 	%r851, %r848, %r849, 1;
	mov.b64 	%rd3828, {%r851, %r850};
$L__tmp936:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd3849, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3849, %rd3530, %rd3828;  xor.b64 %rd3849, %rd3849, %rd3685;}
	// end inline asm
$L__tmp937:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd3833, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3833, %rd3582, %rd3828;  xor.b64 %rd3833, %rd3833, %rd3685;}
	// end inline asm
$L__tmp938:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd3835, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3835, %rd3516, %rd3828;  xor.b64 %rd3835, %rd3835, %rd3685;}
	// end inline asm
$L__tmp939:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd3843, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3843, %rd3524, %rd3828;  xor.b64 %rd3843, %rd3843, %rd3685;}
	// end inline asm
$L__tmp940:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd3851, %rd7260;
	// begin inline asm
	{  xor.b64 %rd3851, %rd3642, %rd3828;  xor.b64 %rd3851, %rd3851, %rd3685;}
	// end inline asm
$L__tmp941:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 372 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd3831;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd3831, {scr,lo};}
	// end inline asm
$L__tmp942:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 373 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd3833;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd3833, {scr,lo};}
	// end inline asm
$L__tmp943:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:374     state[ 9] = ROTR64( state[22],  3 );
	.loc	1 374 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r852,%dummy}, %rd3776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r853}, %rd3776;
	}
	shf.r.wrap.b32 	%r854, %r853, %r852, 3;
	shf.r.wrap.b32 	%r855, %r852, %r853, 3;
	mov.b64 	%rd3903, {%r855, %r854};
$L__tmp944:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 375 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd3835;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd3835, {scr,lo};}
	// end inline asm
$L__tmp945:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 376 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r323;mov.b64 {hi,lo}, %rd3837;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd3837, {scr,lo};}
	// end inline asm
$L__tmp946:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:377     state[20] = ROTR64( state[ 2],  2 );
	.loc	1 377 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r856,%dummy}, %rd3756;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r857}, %rd3756;
	}
	shf.r.wrap.b32 	%r858, %r857, %r856, 2;
	shf.r.wrap.b32 	%r859, %r856, %r857, 2;
	mov.b64 	%rd3964, {%r859, %r858};
$L__tmp947:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 378 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd3839;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd3839, {scr,lo};}
	// end inline asm
$L__tmp948:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 379 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd3841;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd3841, {scr,lo};}
	// end inline asm
$L__tmp949:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:169     asm ( "{"
	.loc	1 169 5, function_name $L__info_string8, inlined_at 1 380 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd3843;prmt.b32 scr, hi, lo, 0x2107;prmt.b32 lo, hi, lo, 0x6543;mov.b64 %rd3843, {scr,lo};}
	// end inline asm
$L__tmp950:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:183       asm ( "{"
	.loc	1 183 7, function_name $L__info_string9, inlined_at 1 381 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd3845;prmt.b32 scr, lo, hi, 0x0765;prmt.b32 lo, lo, hi, 0x4321;mov.b64 %rd3845, {scr,lo};}
	// end inline asm
$L__tmp951:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 382 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r326;mov.b64 {hi,lo}, %rd3847;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd3847, {scr,lo};}
	// end inline asm
$L__tmp952:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 386 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd3849;                  mov.b32 mag, %r327;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd3849, {scr,lo};             }
	// end inline asm
$L__tmp953:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 397 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r328;mov.b64 {hi,lo}, %rd3851;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd3851, {scr,lo};}
	// end inline asm
$L__tmp954:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:398     state[24] = ROTL64( state[21],  2 );
	.loc	1 398 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r860}, %rd3751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r861,%dummy}, %rd3751;
	}
	shf.l.wrap.b32 	%r862, %r861, %r860, 2;
	shf.l.wrap.b32 	%r863, %r860, %r861, 2;
	mov.b64 	%rd3963, {%r863, %r862};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:399     state[21] = ROTR64( state[ 8], 9 );            // R9
	.loc	1 399 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r864,%dummy}, %rd3786;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r865}, %rd3786;
	}
	shf.r.wrap.b32 	%r866, %r865, %r864, 9;
	shf.r.wrap.b32 	%r867, %r864, %r865, 9;
	mov.b64 	%rd3965, {%r867, %r866};
$L__tmp955:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 400 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r329;mov.b64 {hi,lo}, %rd3853;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd3853, {scr,lo};}
	// end inline asm
$L__tmp956:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:124     asm ("{"
	.loc	1 124 5, function_name $L__info_string11, inlined_at 1 405 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd3855;                  mov.b32 mag, %r331;                      shf.l.wrap.b32 scr, lo, hi, mag;      shf.l.wrap.b32 lo, hi, lo, mag;       mov.b64 %rd3855, {scr,lo};             }
	// end inline asm
$L__tmp957:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 406 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd3857;                  mov.b32 mag, %r331;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd3857, {scr,lo};             }
	// end inline asm
$L__tmp958:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 414 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd3859;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd3859, {scr,lo};}
	// end inline asm
$L__tmp959:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 415 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r333;mov.b64 {hi,lo}, %rd3861;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd3861, {scr,lo};}
	// end inline asm
$L__tmp960:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 416 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r334;mov.b64 {hi,lo}, %rd3863;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd3863, {scr,lo};}
	// end inline asm
$L__tmp961:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:417     state[11] = ROTL64( state[ 7],  6 );
	.loc	1 417 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r868}, %rd3761;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r869,%dummy}, %rd3761;
	}
	shf.l.wrap.b32 	%r870, %r869, %r868, 6;
	shf.l.wrap.b32 	%r871, %r868, %r869, 6;
	mov.b64 	%rd3925, {%r871, %r870};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:418     state[ 7] = ROTL64( state[10],  3 );
	.loc	1 418 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r872}, %rd3716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r873,%dummy}, %rd3716;
	}
	shf.l.wrap.b32 	%r874, %r873, %r872, 3;
	shf.l.wrap.b32 	%r875, %r872, %r873, 3;
	mov.b64 	%rd3895, {%r875, %r874};
$L__tmp962:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:199     asm ("{"
	.loc	1 199 5, function_name $L__info_string12, inlined_at 1 419 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd3865;shf.l.wrap.b32 scr, lo, hi, 1;shf.l.wrap.b32 lo, hi, lo, 1;mov.b64 %rd3865, {scr,lo};}
	// end inline asm
$L__tmp963:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd3867, %rd3706;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3867;  mov.b64 {bh,bl}, %rd3831;  mov.b64 {ch,cl}, %rd3839;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3867, {ah,al};}
	// end inline asm
$L__tmp964:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd3871, %rd3831;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3871;  mov.b64 {bh,bl}, %rd3839;  mov.b64 {ch,cl}, %rd3859;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3871, {ah,al};}
	// end inline asm
$L__tmp965:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3839;  mov.b64 {bh,bl}, %rd3859;  mov.b64 {ch,cl}, %rd3851;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3839, {ah,al};}
	// end inline asm
$L__tmp966:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3859;  mov.b64 {bh,bl}, %rd3851;  mov.b64 {ch,cl}, %rd3706;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3859, {ah,al};}
	// end inline asm
$L__tmp967:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3851;  mov.b64 {bh,bl}, %rd3706;  mov.b64 {ch,cl}, %rd3831;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3851, {ah,al};}
	// end inline asm
$L__tmp968:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd3887, %rd3857;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3887;  mov.b64 {bh,bl}, %rd3833;  mov.b64 {ch,cl}, %rd3895;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3887, {ah,al};}
	// end inline asm
$L__tmp969:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd3891, %rd3833;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3891;  mov.b64 {bh,bl}, %rd3895;  mov.b64 {ch,cl}, %rd3853;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3891, {ah,al};}
	// end inline asm
$L__tmp970:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3895;  mov.b64 {bh,bl}, %rd3853;  mov.b64 {ch,cl}, %rd3903;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3895, {ah,al};}
	// end inline asm
$L__tmp971:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3853;  mov.b64 {bh,bl}, %rd3903;  mov.b64 {ch,cl}, %rd3857;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3853, {ah,al};}
	// end inline asm
$L__tmp972:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3903;  mov.b64 {bh,bl}, %rd3857;  mov.b64 {ch,cl}, %rd3833;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3903, {ah,al};}
	// end inline asm
$L__tmp973:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd3907, %rd3865;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3907;  mov.b64 {bh,bl}, %rd3925;  mov.b64 {ch,cl}, %rd3841;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3907, {ah,al};}
	// end inline asm
$L__tmp974:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd3911, %rd3925;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3911;  mov.b64 {bh,bl}, %rd3841;  mov.b64 {ch,cl}, %rd3843;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3911, {ah,al};}
	// end inline asm
$L__tmp975:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3841;  mov.b64 {bh,bl}, %rd3843;  mov.b64 {ch,cl}, %rd3837;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3841, {ah,al};}
	// end inline asm
$L__tmp976:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3843;  mov.b64 {bh,bl}, %rd3837;  mov.b64 {ch,cl}, %rd3865;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3843, {ah,al};}
	// end inline asm
$L__tmp977:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3837;  mov.b64 {bh,bl}, %rd3865;  mov.b64 {ch,cl}, %rd3925;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3837, {ah,al};}
	// end inline asm
$L__tmp978:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd3927, %rd3849;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3927;  mov.b64 {bh,bl}, %rd3855;  mov.b64 {ch,cl}, %rd3863;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3927, {ah,al};}
	// end inline asm
$L__tmp979:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd3931, %rd3855;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3931;  mov.b64 {bh,bl}, %rd3863;  mov.b64 {ch,cl}, %rd3861;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3931, {ah,al};}
	// end inline asm
$L__tmp980:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3863;  mov.b64 {bh,bl}, %rd3861;  mov.b64 {ch,cl}, %rd3845;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3863, {ah,al};}
	// end inline asm
$L__tmp981:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3861;  mov.b64 {bh,bl}, %rd3845;  mov.b64 {ch,cl}, %rd3849;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3861, {ah,al};}
	// end inline asm
$L__tmp982:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3845;  mov.b64 {bh,bl}, %rd3849;  mov.b64 {ch,cl}, %rd3855;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3845, {ah,al};}
	// end inline asm
$L__tmp983:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd3947, %rd3964;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3947;  mov.b64 {bh,bl}, %rd3965;  mov.b64 {ch,cl}, %rd3835;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3947, {ah,al};}
	// end inline asm
$L__tmp984:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd3951, %rd3965;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3951;  mov.b64 {bh,bl}, %rd3835;  mov.b64 {ch,cl}, %rd3847;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3951, {ah,al};}
	// end inline asm
$L__tmp985:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3835;  mov.b64 {bh,bl}, %rd3847;  mov.b64 {ch,cl}, %rd3963;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3835, {ah,al};}
	// end inline asm
$L__tmp986:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3847;  mov.b64 {bh,bl}, %rd3963;  mov.b64 {ch,cl}, %rd3964;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3847, {ah,al};}
	// end inline asm
$L__tmp987:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd3963;  mov.b64 {bh,bl}, %rd3964;  mov.b64 {ch,cl}, %rd3965;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd3963, {ah,al};}
	// end inline asm
$L__tmp988:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:437     state[0] = state[0] ^ RClocal[i];
	.loc	1 437 5, function_name $L__info_string0, inlined_at 1 475 7
	xor.b64  	%rd4028, %rd3867, 2147516555;
$L__tmp989:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd3970, %rd4028;
	// begin inline asm
	  xor.b64 %rd3970, %rd3970, %rd3887;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3970, %rd3970, %rd3907;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3970, %rd3970, %rd3927;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3970, %rd3970, %rd3947;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd3982, %rd3871;
	// begin inline asm
	  xor.b64 %rd3982, %rd3982, %rd3891;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3982, %rd3982, %rd3911;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3982, %rd3982, %rd3931;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3982, %rd3982, %rd3951;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd3994, %rd3839;
	// begin inline asm
	  xor.b64 %rd3994, %rd3994, %rd3895;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3994, %rd3994, %rd3841;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3994, %rd3994, %rd3863;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd3994, %rd3994, %rd3835;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd4006, %rd3859;
	// begin inline asm
	  xor.b64 %rd4006, %rd4006, %rd3853;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4006, %rd4006, %rd3843;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4006, %rd4006, %rd3861;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4006, %rd4006, %rd3847;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd4018, %rd3851;
	// begin inline asm
	  xor.b64 %rd4018, %rd4018, %rd3903;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4018, %rd4018, %rd3837;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4018, %rd4018, %rd3845;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4018, %rd4018, %rd3963;
	// end inline asm
$L__tmp990:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r876}, %rd3982;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r877,%dummy}, %rd3982;
	}
	shf.l.wrap.b32 	%r878, %r877, %r876, 1;
	shf.l.wrap.b32 	%r879, %r876, %r877, 1;
	mov.b64 	%rd4049, {%r879, %r878};
$L__tmp991:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd4027, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4027, %rd4028, %rd4049;  xor.b64 %rd4027, %rd4027, %rd4018;}
	// end inline asm
$L__tmp992:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd4176, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4176, %rd3887, %rd4049;  xor.b64 %rd4176, %rd4176, %rd4018;}
	// end inline asm
$L__tmp993:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd4037, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4037, %rd3907, %rd4049;  xor.b64 %rd4037, %rd4037, %rd4018;}
	// end inline asm
$L__tmp994:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd4168, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4168, %rd3927, %rd4049;  xor.b64 %rd4168, %rd4168, %rd4018;}
	// end inline asm
$L__tmp995:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd4158, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4158, %rd3947, %rd4049;  xor.b64 %rd4158, %rd4158, %rd4018;}
	// end inline asm
$L__tmp996:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r880}, %rd3994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r881,%dummy}, %rd3994;
	}
	shf.l.wrap.b32 	%r882, %r881, %r880, 1;
	shf.l.wrap.b32 	%r883, %r880, %r881, 1;
	mov.b64 	%rd4074, {%r883, %r882};
$L__tmp997:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd4186, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4186, %rd3871, %rd4074;  xor.b64 %rd4186, %rd4186, %rd3970;}
	// end inline asm
$L__tmp998:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd4152, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4152, %rd3891, %rd4074;  xor.b64 %rd4152, %rd4152, %rd3970;}
	// end inline asm
$L__tmp999:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd4184, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4184, %rd3911, %rd4074;  xor.b64 %rd4184, %rd4184, %rd3970;}
	// end inline asm
$L__tmp1000:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd4174, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4174, %rd3931, %rd4074;  xor.b64 %rd4174, %rd4174, %rd3970;}
	// end inline asm
$L__tmp1001:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd4072, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4072, %rd3951, %rd4074;  xor.b64 %rd4072, %rd4072, %rd3970;}
	// end inline asm
$L__tmp1002:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r884}, %rd4006;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r885,%dummy}, %rd4006;
	}
	shf.l.wrap.b32 	%r886, %r885, %r884, 1;
	shf.l.wrap.b32 	%r887, %r884, %r885, 1;
	mov.b64 	%rd4099, {%r887, %r886};
$L__tmp1003:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd4077, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4077, %rd3839, %rd4099;  xor.b64 %rd4077, %rd4077, %rd3982;}
	// end inline asm
$L__tmp1004:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd4082, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4082, %rd3895, %rd4099;  xor.b64 %rd4082, %rd4082, %rd3982;}
	// end inline asm
$L__tmp1005:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd4160, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4160, %rd3841, %rd4099;  xor.b64 %rd4160, %rd4160, %rd3982;}
	// end inline asm
$L__tmp1006:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd4182, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4182, %rd3863, %rd4099;  xor.b64 %rd4182, %rd4182, %rd3982;}
	// end inline asm
$L__tmp1007:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd4097, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4097, %rd3835, %rd4099;  xor.b64 %rd4097, %rd4097, %rd3982;}
	// end inline asm
$L__tmp1008:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r888}, %rd4018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r889,%dummy}, %rd4018;
	}
	shf.l.wrap.b32 	%r890, %r889, %r888, 1;
	shf.l.wrap.b32 	%r891, %r888, %r889, 1;
	mov.b64 	%rd4124, {%r891, %r890};
$L__tmp1009:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd4178, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4178, %rd3859, %rd4124;  xor.b64 %rd4178, %rd4178, %rd3994;}
	// end inline asm
$L__tmp1010:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd4107, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4107, %rd3853, %rd4124;  xor.b64 %rd4107, %rd4107, %rd3994;}
	// end inline asm
$L__tmp1011:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd4162, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4162, %rd3843, %rd4124;  xor.b64 %rd4162, %rd4162, %rd3994;}
	// end inline asm
$L__tmp1012:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd4180, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4180, %rd3861, %rd4124;  xor.b64 %rd4180, %rd4180, %rd3994;}
	// end inline asm
$L__tmp1013:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd4166, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4166, %rd3847, %rd4124;  xor.b64 %rd4166, %rd4166, %rd3994;}
	// end inline asm
$L__tmp1014:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r892}, %rd3970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r893,%dummy}, %rd3970;
	}
	shf.l.wrap.b32 	%r894, %r893, %r892, 1;
	shf.l.wrap.b32 	%r895, %r892, %r893, 1;
	mov.b64 	%rd4149, {%r895, %r894};
$L__tmp1015:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd4170, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4170, %rd3851, %rd4149;  xor.b64 %rd4170, %rd4170, %rd4006;}
	// end inline asm
$L__tmp1016:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd4154, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4154, %rd3903, %rd4149;  xor.b64 %rd4154, %rd4154, %rd4006;}
	// end inline asm
$L__tmp1017:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd4156, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4156, %rd3837, %rd4149;  xor.b64 %rd4156, %rd4156, %rd4006;}
	// end inline asm
$L__tmp1018:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd4164, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4164, %rd3845, %rd4149;  xor.b64 %rd4164, %rd4164, %rd4006;}
	// end inline asm
$L__tmp1019:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd4172, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4172, %rd3963, %rd4149;  xor.b64 %rd4172, %rd4172, %rd4006;}
	// end inline asm
$L__tmp1020:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 372 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd4152;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd4152, {scr,lo};}
	// end inline asm
$L__tmp1021:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 373 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd4154;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd4154, {scr,lo};}
	// end inline asm
$L__tmp1022:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:374     state[ 9] = ROTR64( state[22],  3 );
	.loc	1 374 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r896,%dummy}, %rd4097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r897}, %rd4097;
	}
	shf.r.wrap.b32 	%r898, %r897, %r896, 3;
	shf.r.wrap.b32 	%r899, %r896, %r897, 3;
	mov.b64 	%rd4224, {%r899, %r898};
$L__tmp1023:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 375 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd4156;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd4156, {scr,lo};}
	// end inline asm
$L__tmp1024:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 376 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r323;mov.b64 {hi,lo}, %rd4158;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd4158, {scr,lo};}
	// end inline asm
$L__tmp1025:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:377     state[20] = ROTR64( state[ 2],  2 );
	.loc	1 377 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r900,%dummy}, %rd4077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r901}, %rd4077;
	}
	shf.r.wrap.b32 	%r902, %r901, %r900, 2;
	shf.r.wrap.b32 	%r903, %r900, %r901, 2;
	mov.b64 	%rd4285, {%r903, %r902};
$L__tmp1026:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 378 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd4160;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd4160, {scr,lo};}
	// end inline asm
$L__tmp1027:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 379 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd4162;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd4162, {scr,lo};}
	// end inline asm
$L__tmp1028:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:169     asm ( "{"
	.loc	1 169 5, function_name $L__info_string8, inlined_at 1 380 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd4164;prmt.b32 scr, hi, lo, 0x2107;prmt.b32 lo, hi, lo, 0x6543;mov.b64 %rd4164, {scr,lo};}
	// end inline asm
$L__tmp1029:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:183       asm ( "{"
	.loc	1 183 7, function_name $L__info_string9, inlined_at 1 381 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd4166;prmt.b32 scr, lo, hi, 0x0765;prmt.b32 lo, lo, hi, 0x4321;mov.b64 %rd4166, {scr,lo};}
	// end inline asm
$L__tmp1030:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 382 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r326;mov.b64 {hi,lo}, %rd4168;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd4168, {scr,lo};}
	// end inline asm
$L__tmp1031:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 386 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd4170;                  mov.b32 mag, %r327;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd4170, {scr,lo};             }
	// end inline asm
$L__tmp1032:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 397 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r328;mov.b64 {hi,lo}, %rd4172;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd4172, {scr,lo};}
	// end inline asm
$L__tmp1033:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:398     state[24] = ROTL64( state[21],  2 );
	.loc	1 398 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r904}, %rd4072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r905,%dummy}, %rd4072;
	}
	shf.l.wrap.b32 	%r906, %r905, %r904, 2;
	shf.l.wrap.b32 	%r907, %r904, %r905, 2;
	mov.b64 	%rd4284, {%r907, %r906};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:399     state[21] = ROTR64( state[ 8], 9 );            // R9
	.loc	1 399 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r908,%dummy}, %rd4107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r909}, %rd4107;
	}
	shf.r.wrap.b32 	%r910, %r909, %r908, 9;
	shf.r.wrap.b32 	%r911, %r908, %r909, 9;
	mov.b64 	%rd4286, {%r911, %r910};
$L__tmp1034:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 400 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r329;mov.b64 {hi,lo}, %rd4174;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd4174, {scr,lo};}
	// end inline asm
$L__tmp1035:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:124     asm ("{"
	.loc	1 124 5, function_name $L__info_string11, inlined_at 1 405 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd4176;                  mov.b32 mag, %r331;                      shf.l.wrap.b32 scr, lo, hi, mag;      shf.l.wrap.b32 lo, hi, lo, mag;       mov.b64 %rd4176, {scr,lo};             }
	// end inline asm
$L__tmp1036:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 406 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd4178;                  mov.b32 mag, %r331;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd4178, {scr,lo};             }
	// end inline asm
$L__tmp1037:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 414 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd4180;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd4180, {scr,lo};}
	// end inline asm
$L__tmp1038:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 415 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r333;mov.b64 {hi,lo}, %rd4182;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd4182, {scr,lo};}
	// end inline asm
$L__tmp1039:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 416 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r334;mov.b64 {hi,lo}, %rd4184;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd4184, {scr,lo};}
	// end inline asm
$L__tmp1040:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:417     state[11] = ROTL64( state[ 7],  6 );
	.loc	1 417 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r912}, %rd4082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r913,%dummy}, %rd4082;
	}
	shf.l.wrap.b32 	%r914, %r913, %r912, 6;
	shf.l.wrap.b32 	%r915, %r912, %r913, 6;
	mov.b64 	%rd4246, {%r915, %r914};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:418     state[ 7] = ROTL64( state[10],  3 );
	.loc	1 418 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r916}, %rd4037;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r917,%dummy}, %rd4037;
	}
	shf.l.wrap.b32 	%r918, %r917, %r916, 3;
	shf.l.wrap.b32 	%r919, %r916, %r917, 3;
	mov.b64 	%rd4216, {%r919, %r918};
$L__tmp1041:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:199     asm ("{"
	.loc	1 199 5, function_name $L__info_string12, inlined_at 1 419 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd4186;shf.l.wrap.b32 scr, lo, hi, 1;shf.l.wrap.b32 lo, hi, lo, 1;mov.b64 %rd4186, {scr,lo};}
	// end inline asm
$L__tmp1042:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd4188, %rd4027;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4188;  mov.b64 {bh,bl}, %rd4152;  mov.b64 {ch,cl}, %rd4160;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4188, {ah,al};}
	// end inline asm
$L__tmp1043:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd4192, %rd4152;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4192;  mov.b64 {bh,bl}, %rd4160;  mov.b64 {ch,cl}, %rd4180;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4192, {ah,al};}
	// end inline asm
$L__tmp1044:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4160;  mov.b64 {bh,bl}, %rd4180;  mov.b64 {ch,cl}, %rd4172;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4160, {ah,al};}
	// end inline asm
$L__tmp1045:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4180;  mov.b64 {bh,bl}, %rd4172;  mov.b64 {ch,cl}, %rd4027;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4180, {ah,al};}
	// end inline asm
$L__tmp1046:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4172;  mov.b64 {bh,bl}, %rd4027;  mov.b64 {ch,cl}, %rd4152;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4172, {ah,al};}
	// end inline asm
$L__tmp1047:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd4208, %rd4178;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4208;  mov.b64 {bh,bl}, %rd4154;  mov.b64 {ch,cl}, %rd4216;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4208, {ah,al};}
	// end inline asm
$L__tmp1048:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd4212, %rd4154;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4212;  mov.b64 {bh,bl}, %rd4216;  mov.b64 {ch,cl}, %rd4174;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4212, {ah,al};}
	// end inline asm
$L__tmp1049:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4216;  mov.b64 {bh,bl}, %rd4174;  mov.b64 {ch,cl}, %rd4224;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4216, {ah,al};}
	// end inline asm
$L__tmp1050:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4174;  mov.b64 {bh,bl}, %rd4224;  mov.b64 {ch,cl}, %rd4178;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4174, {ah,al};}
	// end inline asm
$L__tmp1051:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4224;  mov.b64 {bh,bl}, %rd4178;  mov.b64 {ch,cl}, %rd4154;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4224, {ah,al};}
	// end inline asm
$L__tmp1052:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd4228, %rd4186;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4228;  mov.b64 {bh,bl}, %rd4246;  mov.b64 {ch,cl}, %rd4162;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4228, {ah,al};}
	// end inline asm
$L__tmp1053:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd4232, %rd4246;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4232;  mov.b64 {bh,bl}, %rd4162;  mov.b64 {ch,cl}, %rd4164;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4232, {ah,al};}
	// end inline asm
$L__tmp1054:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4162;  mov.b64 {bh,bl}, %rd4164;  mov.b64 {ch,cl}, %rd4158;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4162, {ah,al};}
	// end inline asm
$L__tmp1055:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4164;  mov.b64 {bh,bl}, %rd4158;  mov.b64 {ch,cl}, %rd4186;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4164, {ah,al};}
	// end inline asm
$L__tmp1056:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4158;  mov.b64 {bh,bl}, %rd4186;  mov.b64 {ch,cl}, %rd4246;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4158, {ah,al};}
	// end inline asm
$L__tmp1057:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd4248, %rd4170;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4248;  mov.b64 {bh,bl}, %rd4176;  mov.b64 {ch,cl}, %rd4184;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4248, {ah,al};}
	// end inline asm
$L__tmp1058:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd4252, %rd4176;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4252;  mov.b64 {bh,bl}, %rd4184;  mov.b64 {ch,cl}, %rd4182;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4252, {ah,al};}
	// end inline asm
$L__tmp1059:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4184;  mov.b64 {bh,bl}, %rd4182;  mov.b64 {ch,cl}, %rd4166;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4184, {ah,al};}
	// end inline asm
$L__tmp1060:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4182;  mov.b64 {bh,bl}, %rd4166;  mov.b64 {ch,cl}, %rd4170;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4182, {ah,al};}
	// end inline asm
$L__tmp1061:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4166;  mov.b64 {bh,bl}, %rd4170;  mov.b64 {ch,cl}, %rd4176;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4166, {ah,al};}
	// end inline asm
$L__tmp1062:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd4268, %rd4285;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4268;  mov.b64 {bh,bl}, %rd4286;  mov.b64 {ch,cl}, %rd4156;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4268, {ah,al};}
	// end inline asm
$L__tmp1063:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd4272, %rd4286;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4272;  mov.b64 {bh,bl}, %rd4156;  mov.b64 {ch,cl}, %rd4168;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4272, {ah,al};}
	// end inline asm
$L__tmp1064:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4156;  mov.b64 {bh,bl}, %rd4168;  mov.b64 {ch,cl}, %rd4284;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4156, {ah,al};}
	// end inline asm
$L__tmp1065:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4168;  mov.b64 {bh,bl}, %rd4284;  mov.b64 {ch,cl}, %rd4285;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4168, {ah,al};}
	// end inline asm
$L__tmp1066:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4284;  mov.b64 {bh,bl}, %rd4285;  mov.b64 {ch,cl}, %rd4286;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4284, {ah,al};}
	// end inline asm
$L__tmp1067:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:437     state[0] = state[0] ^ RClocal[i];
	.loc	1 437 5, function_name $L__info_string0, inlined_at 1 475 7
	xor.b64  	%rd4349, %rd4188, -9223372036854775669;
$L__tmp1068:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd4291, %rd4349;
	// begin inline asm
	  xor.b64 %rd4291, %rd4291, %rd4208;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4291, %rd4291, %rd4228;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4291, %rd4291, %rd4248;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4291, %rd4291, %rd4268;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd4303, %rd4192;
	// begin inline asm
	  xor.b64 %rd4303, %rd4303, %rd4212;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4303, %rd4303, %rd4232;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4303, %rd4303, %rd4252;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4303, %rd4303, %rd4272;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd4315, %rd4160;
	// begin inline asm
	  xor.b64 %rd4315, %rd4315, %rd4216;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4315, %rd4315, %rd4162;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4315, %rd4315, %rd4184;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4315, %rd4315, %rd4156;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd4327, %rd4180;
	// begin inline asm
	  xor.b64 %rd4327, %rd4327, %rd4174;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4327, %rd4327, %rd4164;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4327, %rd4327, %rd4182;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4327, %rd4327, %rd4168;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd4339, %rd4172;
	// begin inline asm
	  xor.b64 %rd4339, %rd4339, %rd4224;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4339, %rd4339, %rd4158;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4339, %rd4339, %rd4166;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4339, %rd4339, %rd4284;
	// end inline asm
$L__tmp1069:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r920}, %rd4303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r921,%dummy}, %rd4303;
	}
	shf.l.wrap.b32 	%r922, %r921, %r920, 1;
	shf.l.wrap.b32 	%r923, %r920, %r921, 1;
	mov.b64 	%rd4370, {%r923, %r922};
$L__tmp1070:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd4348, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4348, %rd4349, %rd4370;  xor.b64 %rd4348, %rd4348, %rd4339;}
	// end inline asm
$L__tmp1071:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd4497, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4497, %rd4208, %rd4370;  xor.b64 %rd4497, %rd4497, %rd4339;}
	// end inline asm
$L__tmp1072:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd4358, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4358, %rd4228, %rd4370;  xor.b64 %rd4358, %rd4358, %rd4339;}
	// end inline asm
$L__tmp1073:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd4489, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4489, %rd4248, %rd4370;  xor.b64 %rd4489, %rd4489, %rd4339;}
	// end inline asm
$L__tmp1074:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd4479, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4479, %rd4268, %rd4370;  xor.b64 %rd4479, %rd4479, %rd4339;}
	// end inline asm
$L__tmp1075:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r924}, %rd4315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r925,%dummy}, %rd4315;
	}
	shf.l.wrap.b32 	%r926, %r925, %r924, 1;
	shf.l.wrap.b32 	%r927, %r924, %r925, 1;
	mov.b64 	%rd4395, {%r927, %r926};
$L__tmp1076:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd4507, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4507, %rd4192, %rd4395;  xor.b64 %rd4507, %rd4507, %rd4291;}
	// end inline asm
$L__tmp1077:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd4473, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4473, %rd4212, %rd4395;  xor.b64 %rd4473, %rd4473, %rd4291;}
	// end inline asm
$L__tmp1078:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd4505, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4505, %rd4232, %rd4395;  xor.b64 %rd4505, %rd4505, %rd4291;}
	// end inline asm
$L__tmp1079:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd4495, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4495, %rd4252, %rd4395;  xor.b64 %rd4495, %rd4495, %rd4291;}
	// end inline asm
$L__tmp1080:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd4393, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4393, %rd4272, %rd4395;  xor.b64 %rd4393, %rd4393, %rd4291;}
	// end inline asm
$L__tmp1081:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r928}, %rd4327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r929,%dummy}, %rd4327;
	}
	shf.l.wrap.b32 	%r930, %r929, %r928, 1;
	shf.l.wrap.b32 	%r931, %r928, %r929, 1;
	mov.b64 	%rd4420, {%r931, %r930};
$L__tmp1082:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd4398, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4398, %rd4160, %rd4420;  xor.b64 %rd4398, %rd4398, %rd4303;}
	// end inline asm
$L__tmp1083:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd4403, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4403, %rd4216, %rd4420;  xor.b64 %rd4403, %rd4403, %rd4303;}
	// end inline asm
$L__tmp1084:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd4481, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4481, %rd4162, %rd4420;  xor.b64 %rd4481, %rd4481, %rd4303;}
	// end inline asm
$L__tmp1085:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd4503, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4503, %rd4184, %rd4420;  xor.b64 %rd4503, %rd4503, %rd4303;}
	// end inline asm
$L__tmp1086:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd4418, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4418, %rd4156, %rd4420;  xor.b64 %rd4418, %rd4418, %rd4303;}
	// end inline asm
$L__tmp1087:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r932}, %rd4339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r933,%dummy}, %rd4339;
	}
	shf.l.wrap.b32 	%r934, %r933, %r932, 1;
	shf.l.wrap.b32 	%r935, %r932, %r933, 1;
	mov.b64 	%rd4445, {%r935, %r934};
$L__tmp1088:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd4499, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4499, %rd4180, %rd4445;  xor.b64 %rd4499, %rd4499, %rd4315;}
	// end inline asm
$L__tmp1089:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd4428, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4428, %rd4174, %rd4445;  xor.b64 %rd4428, %rd4428, %rd4315;}
	// end inline asm
$L__tmp1090:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd4483, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4483, %rd4164, %rd4445;  xor.b64 %rd4483, %rd4483, %rd4315;}
	// end inline asm
$L__tmp1091:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd4501, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4501, %rd4182, %rd4445;  xor.b64 %rd4501, %rd4501, %rd4315;}
	// end inline asm
$L__tmp1092:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd4487, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4487, %rd4168, %rd4445;  xor.b64 %rd4487, %rd4487, %rd4315;}
	// end inline asm
$L__tmp1093:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r936}, %rd4291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r937,%dummy}, %rd4291;
	}
	shf.l.wrap.b32 	%r938, %r937, %r936, 1;
	shf.l.wrap.b32 	%r939, %r936, %r937, 1;
	mov.b64 	%rd4470, {%r939, %r938};
$L__tmp1094:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd4491, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4491, %rd4172, %rd4470;  xor.b64 %rd4491, %rd4491, %rd4327;}
	// end inline asm
$L__tmp1095:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd4475, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4475, %rd4224, %rd4470;  xor.b64 %rd4475, %rd4475, %rd4327;}
	// end inline asm
$L__tmp1096:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd4477, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4477, %rd4158, %rd4470;  xor.b64 %rd4477, %rd4477, %rd4327;}
	// end inline asm
$L__tmp1097:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd4485, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4485, %rd4166, %rd4470;  xor.b64 %rd4485, %rd4485, %rd4327;}
	// end inline asm
$L__tmp1098:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd4493, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4493, %rd4284, %rd4470;  xor.b64 %rd4493, %rd4493, %rd4327;}
	// end inline asm
$L__tmp1099:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 372 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd4473;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd4473, {scr,lo};}
	// end inline asm
$L__tmp1100:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 373 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd4475;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd4475, {scr,lo};}
	// end inline asm
$L__tmp1101:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:374     state[ 9] = ROTR64( state[22],  3 );
	.loc	1 374 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r940,%dummy}, %rd4418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r941}, %rd4418;
	}
	shf.r.wrap.b32 	%r942, %r941, %r940, 3;
	shf.r.wrap.b32 	%r943, %r940, %r941, 3;
	mov.b64 	%rd4545, {%r943, %r942};
$L__tmp1102:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 375 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd4477;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd4477, {scr,lo};}
	// end inline asm
$L__tmp1103:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 376 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r323;mov.b64 {hi,lo}, %rd4479;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd4479, {scr,lo};}
	// end inline asm
$L__tmp1104:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:377     state[20] = ROTR64( state[ 2],  2 );
	.loc	1 377 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r944,%dummy}, %rd4398;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r945}, %rd4398;
	}
	shf.r.wrap.b32 	%r946, %r945, %r944, 2;
	shf.r.wrap.b32 	%r947, %r944, %r945, 2;
	mov.b64 	%rd4606, {%r947, %r946};
$L__tmp1105:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 378 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd4481;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd4481, {scr,lo};}
	// end inline asm
$L__tmp1106:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 379 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd4483;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd4483, {scr,lo};}
	// end inline asm
$L__tmp1107:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:169     asm ( "{"
	.loc	1 169 5, function_name $L__info_string8, inlined_at 1 380 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd4485;prmt.b32 scr, hi, lo, 0x2107;prmt.b32 lo, hi, lo, 0x6543;mov.b64 %rd4485, {scr,lo};}
	// end inline asm
$L__tmp1108:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:183       asm ( "{"
	.loc	1 183 7, function_name $L__info_string9, inlined_at 1 381 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd4487;prmt.b32 scr, lo, hi, 0x0765;prmt.b32 lo, lo, hi, 0x4321;mov.b64 %rd4487, {scr,lo};}
	// end inline asm
$L__tmp1109:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 382 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r326;mov.b64 {hi,lo}, %rd4489;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd4489, {scr,lo};}
	// end inline asm
$L__tmp1110:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 386 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd4491;                  mov.b32 mag, %r327;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd4491, {scr,lo};             }
	// end inline asm
$L__tmp1111:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 397 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r328;mov.b64 {hi,lo}, %rd4493;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd4493, {scr,lo};}
	// end inline asm
$L__tmp1112:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:398     state[24] = ROTL64( state[21],  2 );
	.loc	1 398 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r948}, %rd4393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r949,%dummy}, %rd4393;
	}
	shf.l.wrap.b32 	%r950, %r949, %r948, 2;
	shf.l.wrap.b32 	%r951, %r948, %r949, 2;
	mov.b64 	%rd4605, {%r951, %r950};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:399     state[21] = ROTR64( state[ 8], 9 );            // R9
	.loc	1 399 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r952,%dummy}, %rd4428;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r953}, %rd4428;
	}
	shf.r.wrap.b32 	%r954, %r953, %r952, 9;
	shf.r.wrap.b32 	%r955, %r952, %r953, 9;
	mov.b64 	%rd4607, {%r955, %r954};
$L__tmp1113:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 400 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r329;mov.b64 {hi,lo}, %rd4495;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd4495, {scr,lo};}
	// end inline asm
$L__tmp1114:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:124     asm ("{"
	.loc	1 124 5, function_name $L__info_string11, inlined_at 1 405 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd4497;                  mov.b32 mag, %r331;                      shf.l.wrap.b32 scr, lo, hi, mag;      shf.l.wrap.b32 lo, hi, lo, mag;       mov.b64 %rd4497, {scr,lo};             }
	// end inline asm
$L__tmp1115:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 406 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd4499;                  mov.b32 mag, %r331;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd4499, {scr,lo};             }
	// end inline asm
$L__tmp1116:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 414 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd4501;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd4501, {scr,lo};}
	// end inline asm
$L__tmp1117:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 415 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r333;mov.b64 {hi,lo}, %rd4503;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd4503, {scr,lo};}
	// end inline asm
$L__tmp1118:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 416 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r334;mov.b64 {hi,lo}, %rd4505;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd4505, {scr,lo};}
	// end inline asm
$L__tmp1119:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:417     state[11] = ROTL64( state[ 7],  6 );
	.loc	1 417 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r956}, %rd4403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r957,%dummy}, %rd4403;
	}
	shf.l.wrap.b32 	%r958, %r957, %r956, 6;
	shf.l.wrap.b32 	%r959, %r956, %r957, 6;
	mov.b64 	%rd4567, {%r959, %r958};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:418     state[ 7] = ROTL64( state[10],  3 );
	.loc	1 418 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r960}, %rd4358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r961,%dummy}, %rd4358;
	}
	shf.l.wrap.b32 	%r962, %r961, %r960, 3;
	shf.l.wrap.b32 	%r963, %r960, %r961, 3;
	mov.b64 	%rd4537, {%r963, %r962};
$L__tmp1120:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:199     asm ("{"
	.loc	1 199 5, function_name $L__info_string12, inlined_at 1 419 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd4507;shf.l.wrap.b32 scr, lo, hi, 1;shf.l.wrap.b32 lo, hi, lo, 1;mov.b64 %rd4507, {scr,lo};}
	// end inline asm
$L__tmp1121:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd4509, %rd4348;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4509;  mov.b64 {bh,bl}, %rd4473;  mov.b64 {ch,cl}, %rd4481;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4509, {ah,al};}
	// end inline asm
$L__tmp1122:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd4513, %rd4473;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4513;  mov.b64 {bh,bl}, %rd4481;  mov.b64 {ch,cl}, %rd4501;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4513, {ah,al};}
	// end inline asm
$L__tmp1123:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4481;  mov.b64 {bh,bl}, %rd4501;  mov.b64 {ch,cl}, %rd4493;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4481, {ah,al};}
	// end inline asm
$L__tmp1124:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4501;  mov.b64 {bh,bl}, %rd4493;  mov.b64 {ch,cl}, %rd4348;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4501, {ah,al};}
	// end inline asm
$L__tmp1125:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4493;  mov.b64 {bh,bl}, %rd4348;  mov.b64 {ch,cl}, %rd4473;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4493, {ah,al};}
	// end inline asm
$L__tmp1126:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd4529, %rd4499;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4529;  mov.b64 {bh,bl}, %rd4475;  mov.b64 {ch,cl}, %rd4537;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4529, {ah,al};}
	// end inline asm
$L__tmp1127:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd4533, %rd4475;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4533;  mov.b64 {bh,bl}, %rd4537;  mov.b64 {ch,cl}, %rd4495;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4533, {ah,al};}
	// end inline asm
$L__tmp1128:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4537;  mov.b64 {bh,bl}, %rd4495;  mov.b64 {ch,cl}, %rd4545;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4537, {ah,al};}
	// end inline asm
$L__tmp1129:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4495;  mov.b64 {bh,bl}, %rd4545;  mov.b64 {ch,cl}, %rd4499;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4495, {ah,al};}
	// end inline asm
$L__tmp1130:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4545;  mov.b64 {bh,bl}, %rd4499;  mov.b64 {ch,cl}, %rd4475;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4545, {ah,al};}
	// end inline asm
$L__tmp1131:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd4549, %rd4507;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4549;  mov.b64 {bh,bl}, %rd4567;  mov.b64 {ch,cl}, %rd4483;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4549, {ah,al};}
	// end inline asm
$L__tmp1132:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd4553, %rd4567;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4553;  mov.b64 {bh,bl}, %rd4483;  mov.b64 {ch,cl}, %rd4485;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4553, {ah,al};}
	// end inline asm
$L__tmp1133:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4483;  mov.b64 {bh,bl}, %rd4485;  mov.b64 {ch,cl}, %rd4479;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4483, {ah,al};}
	// end inline asm
$L__tmp1134:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4485;  mov.b64 {bh,bl}, %rd4479;  mov.b64 {ch,cl}, %rd4507;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4485, {ah,al};}
	// end inline asm
$L__tmp1135:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4479;  mov.b64 {bh,bl}, %rd4507;  mov.b64 {ch,cl}, %rd4567;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4479, {ah,al};}
	// end inline asm
$L__tmp1136:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd4569, %rd4491;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4569;  mov.b64 {bh,bl}, %rd4497;  mov.b64 {ch,cl}, %rd4505;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4569, {ah,al};}
	// end inline asm
$L__tmp1137:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd4573, %rd4497;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4573;  mov.b64 {bh,bl}, %rd4505;  mov.b64 {ch,cl}, %rd4503;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4573, {ah,al};}
	// end inline asm
$L__tmp1138:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4505;  mov.b64 {bh,bl}, %rd4503;  mov.b64 {ch,cl}, %rd4487;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4505, {ah,al};}
	// end inline asm
$L__tmp1139:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4503;  mov.b64 {bh,bl}, %rd4487;  mov.b64 {ch,cl}, %rd4491;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4503, {ah,al};}
	// end inline asm
$L__tmp1140:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4487;  mov.b64 {bh,bl}, %rd4491;  mov.b64 {ch,cl}, %rd4497;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4487, {ah,al};}
	// end inline asm
$L__tmp1141:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd4589, %rd4606;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4589;  mov.b64 {bh,bl}, %rd4607;  mov.b64 {ch,cl}, %rd4477;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4589, {ah,al};}
	// end inline asm
$L__tmp1142:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd4593, %rd4607;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4593;  mov.b64 {bh,bl}, %rd4477;  mov.b64 {ch,cl}, %rd4489;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4593, {ah,al};}
	// end inline asm
$L__tmp1143:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4477;  mov.b64 {bh,bl}, %rd4489;  mov.b64 {ch,cl}, %rd4605;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4477, {ah,al};}
	// end inline asm
$L__tmp1144:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4489;  mov.b64 {bh,bl}, %rd4605;  mov.b64 {ch,cl}, %rd4606;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4489, {ah,al};}
	// end inline asm
$L__tmp1145:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4605;  mov.b64 {bh,bl}, %rd4606;  mov.b64 {ch,cl}, %rd4607;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4605, {ah,al};}
	// end inline asm
$L__tmp1146:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:437     state[0] = state[0] ^ RClocal[i];
	.loc	1 437 5, function_name $L__info_string0, inlined_at 1 475 7
	xor.b64  	%rd4670, %rd4509, -9223372036854742903;
$L__tmp1147:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd4612, %rd4670;
	// begin inline asm
	  xor.b64 %rd4612, %rd4612, %rd4529;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4612, %rd4612, %rd4549;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4612, %rd4612, %rd4569;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4612, %rd4612, %rd4589;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd4624, %rd4513;
	// begin inline asm
	  xor.b64 %rd4624, %rd4624, %rd4533;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4624, %rd4624, %rd4553;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4624, %rd4624, %rd4573;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4624, %rd4624, %rd4593;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd4636, %rd4481;
	// begin inline asm
	  xor.b64 %rd4636, %rd4636, %rd4537;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4636, %rd4636, %rd4483;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4636, %rd4636, %rd4505;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4636, %rd4636, %rd4477;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd4648, %rd4501;
	// begin inline asm
	  xor.b64 %rd4648, %rd4648, %rd4495;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4648, %rd4648, %rd4485;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4648, %rd4648, %rd4503;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4648, %rd4648, %rd4489;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd4660, %rd4493;
	// begin inline asm
	  xor.b64 %rd4660, %rd4660, %rd4545;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4660, %rd4660, %rd4479;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4660, %rd4660, %rd4487;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4660, %rd4660, %rd4605;
	// end inline asm
$L__tmp1148:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r964}, %rd4624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r965,%dummy}, %rd4624;
	}
	shf.l.wrap.b32 	%r966, %r965, %r964, 1;
	shf.l.wrap.b32 	%r967, %r964, %r965, 1;
	mov.b64 	%rd4691, {%r967, %r966};
$L__tmp1149:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd4669, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4669, %rd4670, %rd4691;  xor.b64 %rd4669, %rd4669, %rd4660;}
	// end inline asm
$L__tmp1150:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd4818, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4818, %rd4529, %rd4691;  xor.b64 %rd4818, %rd4818, %rd4660;}
	// end inline asm
$L__tmp1151:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd4679, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4679, %rd4549, %rd4691;  xor.b64 %rd4679, %rd4679, %rd4660;}
	// end inline asm
$L__tmp1152:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd4810, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4810, %rd4569, %rd4691;  xor.b64 %rd4810, %rd4810, %rd4660;}
	// end inline asm
$L__tmp1153:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd4800, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4800, %rd4589, %rd4691;  xor.b64 %rd4800, %rd4800, %rd4660;}
	// end inline asm
$L__tmp1154:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r968}, %rd4636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r969,%dummy}, %rd4636;
	}
	shf.l.wrap.b32 	%r970, %r969, %r968, 1;
	shf.l.wrap.b32 	%r971, %r968, %r969, 1;
	mov.b64 	%rd4716, {%r971, %r970};
$L__tmp1155:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd4828, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4828, %rd4513, %rd4716;  xor.b64 %rd4828, %rd4828, %rd4612;}
	// end inline asm
$L__tmp1156:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd4794, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4794, %rd4533, %rd4716;  xor.b64 %rd4794, %rd4794, %rd4612;}
	// end inline asm
$L__tmp1157:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd4826, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4826, %rd4553, %rd4716;  xor.b64 %rd4826, %rd4826, %rd4612;}
	// end inline asm
$L__tmp1158:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd4816, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4816, %rd4573, %rd4716;  xor.b64 %rd4816, %rd4816, %rd4612;}
	// end inline asm
$L__tmp1159:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd4714, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4714, %rd4593, %rd4716;  xor.b64 %rd4714, %rd4714, %rd4612;}
	// end inline asm
$L__tmp1160:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r972}, %rd4648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r973,%dummy}, %rd4648;
	}
	shf.l.wrap.b32 	%r974, %r973, %r972, 1;
	shf.l.wrap.b32 	%r975, %r972, %r973, 1;
	mov.b64 	%rd4741, {%r975, %r974};
$L__tmp1161:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd4719, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4719, %rd4481, %rd4741;  xor.b64 %rd4719, %rd4719, %rd4624;}
	// end inline asm
$L__tmp1162:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd4724, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4724, %rd4537, %rd4741;  xor.b64 %rd4724, %rd4724, %rd4624;}
	// end inline asm
$L__tmp1163:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd4802, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4802, %rd4483, %rd4741;  xor.b64 %rd4802, %rd4802, %rd4624;}
	// end inline asm
$L__tmp1164:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd4824, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4824, %rd4505, %rd4741;  xor.b64 %rd4824, %rd4824, %rd4624;}
	// end inline asm
$L__tmp1165:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd4739, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4739, %rd4477, %rd4741;  xor.b64 %rd4739, %rd4739, %rd4624;}
	// end inline asm
$L__tmp1166:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r976}, %rd4660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r977,%dummy}, %rd4660;
	}
	shf.l.wrap.b32 	%r978, %r977, %r976, 1;
	shf.l.wrap.b32 	%r979, %r976, %r977, 1;
	mov.b64 	%rd4766, {%r979, %r978};
$L__tmp1167:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd4820, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4820, %rd4501, %rd4766;  xor.b64 %rd4820, %rd4820, %rd4636;}
	// end inline asm
$L__tmp1168:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd4749, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4749, %rd4495, %rd4766;  xor.b64 %rd4749, %rd4749, %rd4636;}
	// end inline asm
$L__tmp1169:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd4804, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4804, %rd4485, %rd4766;  xor.b64 %rd4804, %rd4804, %rd4636;}
	// end inline asm
$L__tmp1170:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd4822, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4822, %rd4503, %rd4766;  xor.b64 %rd4822, %rd4822, %rd4636;}
	// end inline asm
$L__tmp1171:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd4808, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4808, %rd4489, %rd4766;  xor.b64 %rd4808, %rd4808, %rd4636;}
	// end inline asm
$L__tmp1172:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r980}, %rd4612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r981,%dummy}, %rd4612;
	}
	shf.l.wrap.b32 	%r982, %r981, %r980, 1;
	shf.l.wrap.b32 	%r983, %r980, %r981, 1;
	mov.b64 	%rd4791, {%r983, %r982};
$L__tmp1173:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd4812, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4812, %rd4493, %rd4791;  xor.b64 %rd4812, %rd4812, %rd4648;}
	// end inline asm
$L__tmp1174:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd4796, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4796, %rd4545, %rd4791;  xor.b64 %rd4796, %rd4796, %rd4648;}
	// end inline asm
$L__tmp1175:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd4798, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4798, %rd4479, %rd4791;  xor.b64 %rd4798, %rd4798, %rd4648;}
	// end inline asm
$L__tmp1176:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd4806, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4806, %rd4487, %rd4791;  xor.b64 %rd4806, %rd4806, %rd4648;}
	// end inline asm
$L__tmp1177:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd4814, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4814, %rd4605, %rd4791;  xor.b64 %rd4814, %rd4814, %rd4648;}
	// end inline asm
$L__tmp1178:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 372 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd4794;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd4794, {scr,lo};}
	// end inline asm
$L__tmp1179:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 373 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd4796;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd4796, {scr,lo};}
	// end inline asm
$L__tmp1180:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:374     state[ 9] = ROTR64( state[22],  3 );
	.loc	1 374 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r984,%dummy}, %rd4739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r985}, %rd4739;
	}
	shf.r.wrap.b32 	%r986, %r985, %r984, 3;
	shf.r.wrap.b32 	%r987, %r984, %r985, 3;
	mov.b64 	%rd4866, {%r987, %r986};
$L__tmp1181:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 375 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd4798;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd4798, {scr,lo};}
	// end inline asm
$L__tmp1182:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 376 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r323;mov.b64 {hi,lo}, %rd4800;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd4800, {scr,lo};}
	// end inline asm
$L__tmp1183:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:377     state[20] = ROTR64( state[ 2],  2 );
	.loc	1 377 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r988,%dummy}, %rd4719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r989}, %rd4719;
	}
	shf.r.wrap.b32 	%r990, %r989, %r988, 2;
	shf.r.wrap.b32 	%r991, %r988, %r989, 2;
	mov.b64 	%rd4927, {%r991, %r990};
$L__tmp1184:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 378 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd4802;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd4802, {scr,lo};}
	// end inline asm
$L__tmp1185:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 379 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd4804;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd4804, {scr,lo};}
	// end inline asm
$L__tmp1186:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:169     asm ( "{"
	.loc	1 169 5, function_name $L__info_string8, inlined_at 1 380 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd4806;prmt.b32 scr, hi, lo, 0x2107;prmt.b32 lo, hi, lo, 0x6543;mov.b64 %rd4806, {scr,lo};}
	// end inline asm
$L__tmp1187:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:183       asm ( "{"
	.loc	1 183 7, function_name $L__info_string9, inlined_at 1 381 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd4808;prmt.b32 scr, lo, hi, 0x0765;prmt.b32 lo, lo, hi, 0x4321;mov.b64 %rd4808, {scr,lo};}
	// end inline asm
$L__tmp1188:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 382 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r326;mov.b64 {hi,lo}, %rd4810;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd4810, {scr,lo};}
	// end inline asm
$L__tmp1189:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 386 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd4812;                  mov.b32 mag, %r327;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd4812, {scr,lo};             }
	// end inline asm
$L__tmp1190:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 397 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r328;mov.b64 {hi,lo}, %rd4814;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd4814, {scr,lo};}
	// end inline asm
$L__tmp1191:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:398     state[24] = ROTL64( state[21],  2 );
	.loc	1 398 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r992}, %rd4714;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r993,%dummy}, %rd4714;
	}
	shf.l.wrap.b32 	%r994, %r993, %r992, 2;
	shf.l.wrap.b32 	%r995, %r992, %r993, 2;
	mov.b64 	%rd4926, {%r995, %r994};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:399     state[21] = ROTR64( state[ 8], 9 );            // R9
	.loc	1 399 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r996,%dummy}, %rd4749;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r997}, %rd4749;
	}
	shf.r.wrap.b32 	%r998, %r997, %r996, 9;
	shf.r.wrap.b32 	%r999, %r996, %r997, 9;
	mov.b64 	%rd4928, {%r999, %r998};
$L__tmp1192:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 400 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r329;mov.b64 {hi,lo}, %rd4816;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd4816, {scr,lo};}
	// end inline asm
$L__tmp1193:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:124     asm ("{"
	.loc	1 124 5, function_name $L__info_string11, inlined_at 1 405 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd4818;                  mov.b32 mag, %r331;                      shf.l.wrap.b32 scr, lo, hi, mag;      shf.l.wrap.b32 lo, hi, lo, mag;       mov.b64 %rd4818, {scr,lo};             }
	// end inline asm
$L__tmp1194:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 406 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd4820;                  mov.b32 mag, %r331;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd4820, {scr,lo};             }
	// end inline asm
$L__tmp1195:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 414 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd4822;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd4822, {scr,lo};}
	// end inline asm
$L__tmp1196:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 415 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r333;mov.b64 {hi,lo}, %rd4824;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd4824, {scr,lo};}
	// end inline asm
$L__tmp1197:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 416 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r334;mov.b64 {hi,lo}, %rd4826;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd4826, {scr,lo};}
	// end inline asm
$L__tmp1198:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:417     state[11] = ROTL64( state[ 7],  6 );
	.loc	1 417 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1000}, %rd4724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1001,%dummy}, %rd4724;
	}
	shf.l.wrap.b32 	%r1002, %r1001, %r1000, 6;
	shf.l.wrap.b32 	%r1003, %r1000, %r1001, 6;
	mov.b64 	%rd4888, {%r1003, %r1002};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:418     state[ 7] = ROTL64( state[10],  3 );
	.loc	1 418 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1004}, %rd4679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1005,%dummy}, %rd4679;
	}
	shf.l.wrap.b32 	%r1006, %r1005, %r1004, 3;
	shf.l.wrap.b32 	%r1007, %r1004, %r1005, 3;
	mov.b64 	%rd4858, {%r1007, %r1006};
$L__tmp1199:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:199     asm ("{"
	.loc	1 199 5, function_name $L__info_string12, inlined_at 1 419 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd4828;shf.l.wrap.b32 scr, lo, hi, 1;shf.l.wrap.b32 lo, hi, lo, 1;mov.b64 %rd4828, {scr,lo};}
	// end inline asm
$L__tmp1200:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd4830, %rd4669;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4830;  mov.b64 {bh,bl}, %rd4794;  mov.b64 {ch,cl}, %rd4802;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4830, {ah,al};}
	// end inline asm
$L__tmp1201:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd4834, %rd4794;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4834;  mov.b64 {bh,bl}, %rd4802;  mov.b64 {ch,cl}, %rd4822;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4834, {ah,al};}
	// end inline asm
$L__tmp1202:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4802;  mov.b64 {bh,bl}, %rd4822;  mov.b64 {ch,cl}, %rd4814;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4802, {ah,al};}
	// end inline asm
$L__tmp1203:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4822;  mov.b64 {bh,bl}, %rd4814;  mov.b64 {ch,cl}, %rd4669;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4822, {ah,al};}
	// end inline asm
$L__tmp1204:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4814;  mov.b64 {bh,bl}, %rd4669;  mov.b64 {ch,cl}, %rd4794;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4814, {ah,al};}
	// end inline asm
$L__tmp1205:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd4850, %rd4820;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4850;  mov.b64 {bh,bl}, %rd4796;  mov.b64 {ch,cl}, %rd4858;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4850, {ah,al};}
	// end inline asm
$L__tmp1206:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd4854, %rd4796;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4854;  mov.b64 {bh,bl}, %rd4858;  mov.b64 {ch,cl}, %rd4816;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4854, {ah,al};}
	// end inline asm
$L__tmp1207:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4858;  mov.b64 {bh,bl}, %rd4816;  mov.b64 {ch,cl}, %rd4866;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4858, {ah,al};}
	// end inline asm
$L__tmp1208:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4816;  mov.b64 {bh,bl}, %rd4866;  mov.b64 {ch,cl}, %rd4820;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4816, {ah,al};}
	// end inline asm
$L__tmp1209:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4866;  mov.b64 {bh,bl}, %rd4820;  mov.b64 {ch,cl}, %rd4796;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4866, {ah,al};}
	// end inline asm
$L__tmp1210:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd4870, %rd4828;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4870;  mov.b64 {bh,bl}, %rd4888;  mov.b64 {ch,cl}, %rd4804;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4870, {ah,al};}
	// end inline asm
$L__tmp1211:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd4874, %rd4888;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4874;  mov.b64 {bh,bl}, %rd4804;  mov.b64 {ch,cl}, %rd4806;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4874, {ah,al};}
	// end inline asm
$L__tmp1212:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4804;  mov.b64 {bh,bl}, %rd4806;  mov.b64 {ch,cl}, %rd4800;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4804, {ah,al};}
	// end inline asm
$L__tmp1213:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4806;  mov.b64 {bh,bl}, %rd4800;  mov.b64 {ch,cl}, %rd4828;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4806, {ah,al};}
	// end inline asm
$L__tmp1214:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4800;  mov.b64 {bh,bl}, %rd4828;  mov.b64 {ch,cl}, %rd4888;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4800, {ah,al};}
	// end inline asm
$L__tmp1215:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd4890, %rd4812;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4890;  mov.b64 {bh,bl}, %rd4818;  mov.b64 {ch,cl}, %rd4826;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4890, {ah,al};}
	// end inline asm
$L__tmp1216:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd4894, %rd4818;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4894;  mov.b64 {bh,bl}, %rd4826;  mov.b64 {ch,cl}, %rd4824;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4894, {ah,al};}
	// end inline asm
$L__tmp1217:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4826;  mov.b64 {bh,bl}, %rd4824;  mov.b64 {ch,cl}, %rd4808;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4826, {ah,al};}
	// end inline asm
$L__tmp1218:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4824;  mov.b64 {bh,bl}, %rd4808;  mov.b64 {ch,cl}, %rd4812;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4824, {ah,al};}
	// end inline asm
$L__tmp1219:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4808;  mov.b64 {bh,bl}, %rd4812;  mov.b64 {ch,cl}, %rd4818;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4808, {ah,al};}
	// end inline asm
$L__tmp1220:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd4910, %rd4927;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4910;  mov.b64 {bh,bl}, %rd4928;  mov.b64 {ch,cl}, %rd4798;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4910, {ah,al};}
	// end inline asm
$L__tmp1221:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd4914, %rd4928;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4914;  mov.b64 {bh,bl}, %rd4798;  mov.b64 {ch,cl}, %rd4810;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4914, {ah,al};}
	// end inline asm
$L__tmp1222:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4798;  mov.b64 {bh,bl}, %rd4810;  mov.b64 {ch,cl}, %rd4926;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4798, {ah,al};}
	// end inline asm
$L__tmp1223:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4810;  mov.b64 {bh,bl}, %rd4926;  mov.b64 {ch,cl}, %rd4927;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4810, {ah,al};}
	// end inline asm
$L__tmp1224:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd4926;  mov.b64 {bh,bl}, %rd4927;  mov.b64 {ch,cl}, %rd4928;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd4926, {ah,al};}
	// end inline asm
$L__tmp1225:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:437     state[0] = state[0] ^ RClocal[i];
	.loc	1 437 5, function_name $L__info_string0, inlined_at 1 475 7
	xor.b64  	%rd4991, %rd4830, -9223372036854743037;
$L__tmp1226:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd4933, %rd4991;
	// begin inline asm
	  xor.b64 %rd4933, %rd4933, %rd4850;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4933, %rd4933, %rd4870;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4933, %rd4933, %rd4890;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4933, %rd4933, %rd4910;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd4945, %rd4834;
	// begin inline asm
	  xor.b64 %rd4945, %rd4945, %rd4854;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4945, %rd4945, %rd4874;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4945, %rd4945, %rd4894;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4945, %rd4945, %rd4914;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd4957, %rd4802;
	// begin inline asm
	  xor.b64 %rd4957, %rd4957, %rd4858;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4957, %rd4957, %rd4804;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4957, %rd4957, %rd4826;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4957, %rd4957, %rd4798;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd4969, %rd4822;
	// begin inline asm
	  xor.b64 %rd4969, %rd4969, %rd4816;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4969, %rd4969, %rd4806;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4969, %rd4969, %rd4824;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4969, %rd4969, %rd4810;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd4981, %rd4814;
	// begin inline asm
	  xor.b64 %rd4981, %rd4981, %rd4866;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4981, %rd4981, %rd4800;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4981, %rd4981, %rd4808;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd4981, %rd4981, %rd4926;
	// end inline asm
$L__tmp1227:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1008}, %rd4945;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1009,%dummy}, %rd4945;
	}
	shf.l.wrap.b32 	%r1010, %r1009, %r1008, 1;
	shf.l.wrap.b32 	%r1011, %r1008, %r1009, 1;
	mov.b64 	%rd5012, {%r1011, %r1010};
$L__tmp1228:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd4990, %rd7260;
	// begin inline asm
	{  xor.b64 %rd4990, %rd4991, %rd5012;  xor.b64 %rd4990, %rd4990, %rd4981;}
	// end inline asm
$L__tmp1229:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd5139, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5139, %rd4850, %rd5012;  xor.b64 %rd5139, %rd5139, %rd4981;}
	// end inline asm
$L__tmp1230:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd5000, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5000, %rd4870, %rd5012;  xor.b64 %rd5000, %rd5000, %rd4981;}
	// end inline asm
$L__tmp1231:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd5131, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5131, %rd4890, %rd5012;  xor.b64 %rd5131, %rd5131, %rd4981;}
	// end inline asm
$L__tmp1232:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd5121, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5121, %rd4910, %rd5012;  xor.b64 %rd5121, %rd5121, %rd4981;}
	// end inline asm
$L__tmp1233:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1012}, %rd4957;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1013,%dummy}, %rd4957;
	}
	shf.l.wrap.b32 	%r1014, %r1013, %r1012, 1;
	shf.l.wrap.b32 	%r1015, %r1012, %r1013, 1;
	mov.b64 	%rd5037, {%r1015, %r1014};
$L__tmp1234:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd5149, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5149, %rd4834, %rd5037;  xor.b64 %rd5149, %rd5149, %rd4933;}
	// end inline asm
$L__tmp1235:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd5115, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5115, %rd4854, %rd5037;  xor.b64 %rd5115, %rd5115, %rd4933;}
	// end inline asm
$L__tmp1236:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd5147, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5147, %rd4874, %rd5037;  xor.b64 %rd5147, %rd5147, %rd4933;}
	// end inline asm
$L__tmp1237:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd5137, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5137, %rd4894, %rd5037;  xor.b64 %rd5137, %rd5137, %rd4933;}
	// end inline asm
$L__tmp1238:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd5035, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5035, %rd4914, %rd5037;  xor.b64 %rd5035, %rd5035, %rd4933;}
	// end inline asm
$L__tmp1239:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1016}, %rd4969;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1017,%dummy}, %rd4969;
	}
	shf.l.wrap.b32 	%r1018, %r1017, %r1016, 1;
	shf.l.wrap.b32 	%r1019, %r1016, %r1017, 1;
	mov.b64 	%rd5062, {%r1019, %r1018};
$L__tmp1240:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd5040, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5040, %rd4802, %rd5062;  xor.b64 %rd5040, %rd5040, %rd4945;}
	// end inline asm
$L__tmp1241:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd5045, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5045, %rd4858, %rd5062;  xor.b64 %rd5045, %rd5045, %rd4945;}
	// end inline asm
$L__tmp1242:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd5123, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5123, %rd4804, %rd5062;  xor.b64 %rd5123, %rd5123, %rd4945;}
	// end inline asm
$L__tmp1243:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd5145, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5145, %rd4826, %rd5062;  xor.b64 %rd5145, %rd5145, %rd4945;}
	// end inline asm
$L__tmp1244:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd5060, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5060, %rd4798, %rd5062;  xor.b64 %rd5060, %rd5060, %rd4945;}
	// end inline asm
$L__tmp1245:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1020}, %rd4981;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1021,%dummy}, %rd4981;
	}
	shf.l.wrap.b32 	%r1022, %r1021, %r1020, 1;
	shf.l.wrap.b32 	%r1023, %r1020, %r1021, 1;
	mov.b64 	%rd5087, {%r1023, %r1022};
$L__tmp1246:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd5141, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5141, %rd4822, %rd5087;  xor.b64 %rd5141, %rd5141, %rd4957;}
	// end inline asm
$L__tmp1247:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd5070, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5070, %rd4816, %rd5087;  xor.b64 %rd5070, %rd5070, %rd4957;}
	// end inline asm
$L__tmp1248:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd5125, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5125, %rd4806, %rd5087;  xor.b64 %rd5125, %rd5125, %rd4957;}
	// end inline asm
$L__tmp1249:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd5143, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5143, %rd4824, %rd5087;  xor.b64 %rd5143, %rd5143, %rd4957;}
	// end inline asm
$L__tmp1250:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd5129, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5129, %rd4810, %rd5087;  xor.b64 %rd5129, %rd5129, %rd4957;}
	// end inline asm
$L__tmp1251:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1024}, %rd4933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1025,%dummy}, %rd4933;
	}
	shf.l.wrap.b32 	%r1026, %r1025, %r1024, 1;
	shf.l.wrap.b32 	%r1027, %r1024, %r1025, 1;
	mov.b64 	%rd5112, {%r1027, %r1026};
$L__tmp1252:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd5133, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5133, %rd4814, %rd5112;  xor.b64 %rd5133, %rd5133, %rd4969;}
	// end inline asm
$L__tmp1253:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd5117, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5117, %rd4866, %rd5112;  xor.b64 %rd5117, %rd5117, %rd4969;}
	// end inline asm
$L__tmp1254:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd5119, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5119, %rd4800, %rd5112;  xor.b64 %rd5119, %rd5119, %rd4969;}
	// end inline asm
$L__tmp1255:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd5127, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5127, %rd4808, %rd5112;  xor.b64 %rd5127, %rd5127, %rd4969;}
	// end inline asm
$L__tmp1256:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd5135, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5135, %rd4926, %rd5112;  xor.b64 %rd5135, %rd5135, %rd4969;}
	// end inline asm
$L__tmp1257:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 372 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd5115;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd5115, {scr,lo};}
	// end inline asm
$L__tmp1258:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 373 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd5117;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd5117, {scr,lo};}
	// end inline asm
$L__tmp1259:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:374     state[ 9] = ROTR64( state[22],  3 );
	.loc	1 374 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1028,%dummy}, %rd5060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1029}, %rd5060;
	}
	shf.r.wrap.b32 	%r1030, %r1029, %r1028, 3;
	shf.r.wrap.b32 	%r1031, %r1028, %r1029, 3;
	mov.b64 	%rd5187, {%r1031, %r1030};
$L__tmp1260:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 375 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd5119;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd5119, {scr,lo};}
	// end inline asm
$L__tmp1261:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 376 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r323;mov.b64 {hi,lo}, %rd5121;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd5121, {scr,lo};}
	// end inline asm
$L__tmp1262:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:377     state[20] = ROTR64( state[ 2],  2 );
	.loc	1 377 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1032,%dummy}, %rd5040;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1033}, %rd5040;
	}
	shf.r.wrap.b32 	%r1034, %r1033, %r1032, 2;
	shf.r.wrap.b32 	%r1035, %r1032, %r1033, 2;
	mov.b64 	%rd5248, {%r1035, %r1034};
$L__tmp1263:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 378 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd5123;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd5123, {scr,lo};}
	// end inline asm
$L__tmp1264:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 379 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd5125;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd5125, {scr,lo};}
	// end inline asm
$L__tmp1265:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:169     asm ( "{"
	.loc	1 169 5, function_name $L__info_string8, inlined_at 1 380 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd5127;prmt.b32 scr, hi, lo, 0x2107;prmt.b32 lo, hi, lo, 0x6543;mov.b64 %rd5127, {scr,lo};}
	// end inline asm
$L__tmp1266:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:183       asm ( "{"
	.loc	1 183 7, function_name $L__info_string9, inlined_at 1 381 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd5129;prmt.b32 scr, lo, hi, 0x0765;prmt.b32 lo, lo, hi, 0x4321;mov.b64 %rd5129, {scr,lo};}
	// end inline asm
$L__tmp1267:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 382 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r326;mov.b64 {hi,lo}, %rd5131;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd5131, {scr,lo};}
	// end inline asm
$L__tmp1268:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 386 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd5133;                  mov.b32 mag, %r327;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd5133, {scr,lo};             }
	// end inline asm
$L__tmp1269:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 397 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r328;mov.b64 {hi,lo}, %rd5135;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd5135, {scr,lo};}
	// end inline asm
$L__tmp1270:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:398     state[24] = ROTL64( state[21],  2 );
	.loc	1 398 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1036}, %rd5035;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1037,%dummy}, %rd5035;
	}
	shf.l.wrap.b32 	%r1038, %r1037, %r1036, 2;
	shf.l.wrap.b32 	%r1039, %r1036, %r1037, 2;
	mov.b64 	%rd5247, {%r1039, %r1038};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:399     state[21] = ROTR64( state[ 8], 9 );            // R9
	.loc	1 399 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1040,%dummy}, %rd5070;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1041}, %rd5070;
	}
	shf.r.wrap.b32 	%r1042, %r1041, %r1040, 9;
	shf.r.wrap.b32 	%r1043, %r1040, %r1041, 9;
	mov.b64 	%rd5249, {%r1043, %r1042};
$L__tmp1271:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 400 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r329;mov.b64 {hi,lo}, %rd5137;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd5137, {scr,lo};}
	// end inline asm
$L__tmp1272:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:124     asm ("{"
	.loc	1 124 5, function_name $L__info_string11, inlined_at 1 405 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd5139;                  mov.b32 mag, %r331;                      shf.l.wrap.b32 scr, lo, hi, mag;      shf.l.wrap.b32 lo, hi, lo, mag;       mov.b64 %rd5139, {scr,lo};             }
	// end inline asm
$L__tmp1273:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 406 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd5141;                  mov.b32 mag, %r331;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd5141, {scr,lo};             }
	// end inline asm
$L__tmp1274:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 414 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd5143;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd5143, {scr,lo};}
	// end inline asm
$L__tmp1275:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 415 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r333;mov.b64 {hi,lo}, %rd5145;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd5145, {scr,lo};}
	// end inline asm
$L__tmp1276:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 416 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r334;mov.b64 {hi,lo}, %rd5147;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd5147, {scr,lo};}
	// end inline asm
$L__tmp1277:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:417     state[11] = ROTL64( state[ 7],  6 );
	.loc	1 417 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1044}, %rd5045;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1045,%dummy}, %rd5045;
	}
	shf.l.wrap.b32 	%r1046, %r1045, %r1044, 6;
	shf.l.wrap.b32 	%r1047, %r1044, %r1045, 6;
	mov.b64 	%rd5209, {%r1047, %r1046};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:418     state[ 7] = ROTL64( state[10],  3 );
	.loc	1 418 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1048}, %rd5000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1049,%dummy}, %rd5000;
	}
	shf.l.wrap.b32 	%r1050, %r1049, %r1048, 3;
	shf.l.wrap.b32 	%r1051, %r1048, %r1049, 3;
	mov.b64 	%rd5179, {%r1051, %r1050};
$L__tmp1278:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:199     asm ("{"
	.loc	1 199 5, function_name $L__info_string12, inlined_at 1 419 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd5149;shf.l.wrap.b32 scr, lo, hi, 1;shf.l.wrap.b32 lo, hi, lo, 1;mov.b64 %rd5149, {scr,lo};}
	// end inline asm
$L__tmp1279:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd5151, %rd4990;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5151;  mov.b64 {bh,bl}, %rd5115;  mov.b64 {ch,cl}, %rd5123;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5151, {ah,al};}
	// end inline asm
$L__tmp1280:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd5155, %rd5115;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5155;  mov.b64 {bh,bl}, %rd5123;  mov.b64 {ch,cl}, %rd5143;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5155, {ah,al};}
	// end inline asm
$L__tmp1281:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5123;  mov.b64 {bh,bl}, %rd5143;  mov.b64 {ch,cl}, %rd5135;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5123, {ah,al};}
	// end inline asm
$L__tmp1282:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5143;  mov.b64 {bh,bl}, %rd5135;  mov.b64 {ch,cl}, %rd4990;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5143, {ah,al};}
	// end inline asm
$L__tmp1283:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5135;  mov.b64 {bh,bl}, %rd4990;  mov.b64 {ch,cl}, %rd5115;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5135, {ah,al};}
	// end inline asm
$L__tmp1284:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd5171, %rd5141;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5171;  mov.b64 {bh,bl}, %rd5117;  mov.b64 {ch,cl}, %rd5179;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5171, {ah,al};}
	// end inline asm
$L__tmp1285:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd5175, %rd5117;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5175;  mov.b64 {bh,bl}, %rd5179;  mov.b64 {ch,cl}, %rd5137;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5175, {ah,al};}
	// end inline asm
$L__tmp1286:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5179;  mov.b64 {bh,bl}, %rd5137;  mov.b64 {ch,cl}, %rd5187;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5179, {ah,al};}
	// end inline asm
$L__tmp1287:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5137;  mov.b64 {bh,bl}, %rd5187;  mov.b64 {ch,cl}, %rd5141;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5137, {ah,al};}
	// end inline asm
$L__tmp1288:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5187;  mov.b64 {bh,bl}, %rd5141;  mov.b64 {ch,cl}, %rd5117;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5187, {ah,al};}
	// end inline asm
$L__tmp1289:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd5191, %rd5149;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5191;  mov.b64 {bh,bl}, %rd5209;  mov.b64 {ch,cl}, %rd5125;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5191, {ah,al};}
	// end inline asm
$L__tmp1290:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd5195, %rd5209;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5195;  mov.b64 {bh,bl}, %rd5125;  mov.b64 {ch,cl}, %rd5127;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5195, {ah,al};}
	// end inline asm
$L__tmp1291:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5125;  mov.b64 {bh,bl}, %rd5127;  mov.b64 {ch,cl}, %rd5121;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5125, {ah,al};}
	// end inline asm
$L__tmp1292:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5127;  mov.b64 {bh,bl}, %rd5121;  mov.b64 {ch,cl}, %rd5149;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5127, {ah,al};}
	// end inline asm
$L__tmp1293:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5121;  mov.b64 {bh,bl}, %rd5149;  mov.b64 {ch,cl}, %rd5209;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5121, {ah,al};}
	// end inline asm
$L__tmp1294:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd5211, %rd5133;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5211;  mov.b64 {bh,bl}, %rd5139;  mov.b64 {ch,cl}, %rd5147;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5211, {ah,al};}
	// end inline asm
$L__tmp1295:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd5215, %rd5139;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5215;  mov.b64 {bh,bl}, %rd5147;  mov.b64 {ch,cl}, %rd5145;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5215, {ah,al};}
	// end inline asm
$L__tmp1296:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5147;  mov.b64 {bh,bl}, %rd5145;  mov.b64 {ch,cl}, %rd5129;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5147, {ah,al};}
	// end inline asm
$L__tmp1297:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5145;  mov.b64 {bh,bl}, %rd5129;  mov.b64 {ch,cl}, %rd5133;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5145, {ah,al};}
	// end inline asm
$L__tmp1298:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5129;  mov.b64 {bh,bl}, %rd5133;  mov.b64 {ch,cl}, %rd5139;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5129, {ah,al};}
	// end inline asm
$L__tmp1299:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd5231, %rd5248;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5231;  mov.b64 {bh,bl}, %rd5249;  mov.b64 {ch,cl}, %rd5119;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5231, {ah,al};}
	// end inline asm
$L__tmp1300:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd5235, %rd5249;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5235;  mov.b64 {bh,bl}, %rd5119;  mov.b64 {ch,cl}, %rd5131;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5235, {ah,al};}
	// end inline asm
$L__tmp1301:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5119;  mov.b64 {bh,bl}, %rd5131;  mov.b64 {ch,cl}, %rd5247;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5119, {ah,al};}
	// end inline asm
$L__tmp1302:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5131;  mov.b64 {bh,bl}, %rd5247;  mov.b64 {ch,cl}, %rd5248;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5131, {ah,al};}
	// end inline asm
$L__tmp1303:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5247;  mov.b64 {bh,bl}, %rd5248;  mov.b64 {ch,cl}, %rd5249;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5247, {ah,al};}
	// end inline asm
$L__tmp1304:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:437     state[0] = state[0] ^ RClocal[i];
	.loc	1 437 5, function_name $L__info_string0, inlined_at 1 475 7
	xor.b64  	%rd5312, %rd5151, -9223372036854743038;
$L__tmp1305:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd5254, %rd5312;
	// begin inline asm
	  xor.b64 %rd5254, %rd5254, %rd5171;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5254, %rd5254, %rd5191;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5254, %rd5254, %rd5211;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5254, %rd5254, %rd5231;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd5266, %rd5155;
	// begin inline asm
	  xor.b64 %rd5266, %rd5266, %rd5175;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5266, %rd5266, %rd5195;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5266, %rd5266, %rd5215;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5266, %rd5266, %rd5235;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd5278, %rd5123;
	// begin inline asm
	  xor.b64 %rd5278, %rd5278, %rd5179;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5278, %rd5278, %rd5125;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5278, %rd5278, %rd5147;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5278, %rd5278, %rd5119;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd5290, %rd5143;
	// begin inline asm
	  xor.b64 %rd5290, %rd5290, %rd5137;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5290, %rd5290, %rd5127;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5290, %rd5290, %rd5145;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5290, %rd5290, %rd5131;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd5302, %rd5135;
	// begin inline asm
	  xor.b64 %rd5302, %rd5302, %rd5187;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5302, %rd5302, %rd5121;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5302, %rd5302, %rd5129;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5302, %rd5302, %rd5247;
	// end inline asm
$L__tmp1306:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1052}, %rd5266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1053,%dummy}, %rd5266;
	}
	shf.l.wrap.b32 	%r1054, %r1053, %r1052, 1;
	shf.l.wrap.b32 	%r1055, %r1052, %r1053, 1;
	mov.b64 	%rd5333, {%r1055, %r1054};
$L__tmp1307:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd5311, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5311, %rd5312, %rd5333;  xor.b64 %rd5311, %rd5311, %rd5302;}
	// end inline asm
$L__tmp1308:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd5460, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5460, %rd5171, %rd5333;  xor.b64 %rd5460, %rd5460, %rd5302;}
	// end inline asm
$L__tmp1309:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd5321, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5321, %rd5191, %rd5333;  xor.b64 %rd5321, %rd5321, %rd5302;}
	// end inline asm
$L__tmp1310:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd5452, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5452, %rd5211, %rd5333;  xor.b64 %rd5452, %rd5452, %rd5302;}
	// end inline asm
$L__tmp1311:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd5442, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5442, %rd5231, %rd5333;  xor.b64 %rd5442, %rd5442, %rd5302;}
	// end inline asm
$L__tmp1312:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1056}, %rd5278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1057,%dummy}, %rd5278;
	}
	shf.l.wrap.b32 	%r1058, %r1057, %r1056, 1;
	shf.l.wrap.b32 	%r1059, %r1056, %r1057, 1;
	mov.b64 	%rd5358, {%r1059, %r1058};
$L__tmp1313:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd5470, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5470, %rd5155, %rd5358;  xor.b64 %rd5470, %rd5470, %rd5254;}
	// end inline asm
$L__tmp1314:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd5436, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5436, %rd5175, %rd5358;  xor.b64 %rd5436, %rd5436, %rd5254;}
	// end inline asm
$L__tmp1315:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd5468, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5468, %rd5195, %rd5358;  xor.b64 %rd5468, %rd5468, %rd5254;}
	// end inline asm
$L__tmp1316:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd5458, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5458, %rd5215, %rd5358;  xor.b64 %rd5458, %rd5458, %rd5254;}
	// end inline asm
$L__tmp1317:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd5356, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5356, %rd5235, %rd5358;  xor.b64 %rd5356, %rd5356, %rd5254;}
	// end inline asm
$L__tmp1318:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1060}, %rd5290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1061,%dummy}, %rd5290;
	}
	shf.l.wrap.b32 	%r1062, %r1061, %r1060, 1;
	shf.l.wrap.b32 	%r1063, %r1060, %r1061, 1;
	mov.b64 	%rd5383, {%r1063, %r1062};
$L__tmp1319:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd5361, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5361, %rd5123, %rd5383;  xor.b64 %rd5361, %rd5361, %rd5266;}
	// end inline asm
$L__tmp1320:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd5366, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5366, %rd5179, %rd5383;  xor.b64 %rd5366, %rd5366, %rd5266;}
	// end inline asm
$L__tmp1321:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd5444, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5444, %rd5125, %rd5383;  xor.b64 %rd5444, %rd5444, %rd5266;}
	// end inline asm
$L__tmp1322:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd5466, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5466, %rd5147, %rd5383;  xor.b64 %rd5466, %rd5466, %rd5266;}
	// end inline asm
$L__tmp1323:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd5381, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5381, %rd5119, %rd5383;  xor.b64 %rd5381, %rd5381, %rd5266;}
	// end inline asm
$L__tmp1324:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1064}, %rd5302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1065,%dummy}, %rd5302;
	}
	shf.l.wrap.b32 	%r1066, %r1065, %r1064, 1;
	shf.l.wrap.b32 	%r1067, %r1064, %r1065, 1;
	mov.b64 	%rd5408, {%r1067, %r1066};
$L__tmp1325:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd5462, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5462, %rd5143, %rd5408;  xor.b64 %rd5462, %rd5462, %rd5278;}
	// end inline asm
$L__tmp1326:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd5391, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5391, %rd5137, %rd5408;  xor.b64 %rd5391, %rd5391, %rd5278;}
	// end inline asm
$L__tmp1327:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd5446, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5446, %rd5127, %rd5408;  xor.b64 %rd5446, %rd5446, %rd5278;}
	// end inline asm
$L__tmp1328:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd5464, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5464, %rd5145, %rd5408;  xor.b64 %rd5464, %rd5464, %rd5278;}
	// end inline asm
$L__tmp1329:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd5450, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5450, %rd5131, %rd5408;  xor.b64 %rd5450, %rd5450, %rd5278;}
	// end inline asm
$L__tmp1330:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1068}, %rd5254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1069,%dummy}, %rd5254;
	}
	shf.l.wrap.b32 	%r1070, %r1069, %r1068, 1;
	shf.l.wrap.b32 	%r1071, %r1068, %r1069, 1;
	mov.b64 	%rd5433, {%r1071, %r1070};
$L__tmp1331:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd5454, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5454, %rd5135, %rd5433;  xor.b64 %rd5454, %rd5454, %rd5290;}
	// end inline asm
$L__tmp1332:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd5438, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5438, %rd5187, %rd5433;  xor.b64 %rd5438, %rd5438, %rd5290;}
	// end inline asm
$L__tmp1333:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd5440, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5440, %rd5121, %rd5433;  xor.b64 %rd5440, %rd5440, %rd5290;}
	// end inline asm
$L__tmp1334:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd5448, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5448, %rd5129, %rd5433;  xor.b64 %rd5448, %rd5448, %rd5290;}
	// end inline asm
$L__tmp1335:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd5456, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5456, %rd5247, %rd5433;  xor.b64 %rd5456, %rd5456, %rd5290;}
	// end inline asm
$L__tmp1336:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 372 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd5436;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd5436, {scr,lo};}
	// end inline asm
$L__tmp1337:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 373 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd5438;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd5438, {scr,lo};}
	// end inline asm
$L__tmp1338:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:374     state[ 9] = ROTR64( state[22],  3 );
	.loc	1 374 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1072,%dummy}, %rd5381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1073}, %rd5381;
	}
	shf.r.wrap.b32 	%r1074, %r1073, %r1072, 3;
	shf.r.wrap.b32 	%r1075, %r1072, %r1073, 3;
	mov.b64 	%rd5508, {%r1075, %r1074};
$L__tmp1339:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 375 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd5440;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd5440, {scr,lo};}
	// end inline asm
$L__tmp1340:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 376 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r323;mov.b64 {hi,lo}, %rd5442;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd5442, {scr,lo};}
	// end inline asm
$L__tmp1341:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:377     state[20] = ROTR64( state[ 2],  2 );
	.loc	1 377 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1076,%dummy}, %rd5361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1077}, %rd5361;
	}
	shf.r.wrap.b32 	%r1078, %r1077, %r1076, 2;
	shf.r.wrap.b32 	%r1079, %r1076, %r1077, 2;
	mov.b64 	%rd5569, {%r1079, %r1078};
$L__tmp1342:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 378 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd5444;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd5444, {scr,lo};}
	// end inline asm
$L__tmp1343:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 379 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd5446;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd5446, {scr,lo};}
	// end inline asm
$L__tmp1344:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:169     asm ( "{"
	.loc	1 169 5, function_name $L__info_string8, inlined_at 1 380 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd5448;prmt.b32 scr, hi, lo, 0x2107;prmt.b32 lo, hi, lo, 0x6543;mov.b64 %rd5448, {scr,lo};}
	// end inline asm
$L__tmp1345:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:183       asm ( "{"
	.loc	1 183 7, function_name $L__info_string9, inlined_at 1 381 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd5450;prmt.b32 scr, lo, hi, 0x0765;prmt.b32 lo, lo, hi, 0x4321;mov.b64 %rd5450, {scr,lo};}
	// end inline asm
$L__tmp1346:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 382 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r326;mov.b64 {hi,lo}, %rd5452;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd5452, {scr,lo};}
	// end inline asm
$L__tmp1347:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 386 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd5454;                  mov.b32 mag, %r327;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd5454, {scr,lo};             }
	// end inline asm
$L__tmp1348:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 397 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r328;mov.b64 {hi,lo}, %rd5456;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd5456, {scr,lo};}
	// end inline asm
$L__tmp1349:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:398     state[24] = ROTL64( state[21],  2 );
	.loc	1 398 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1080}, %rd5356;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1081,%dummy}, %rd5356;
	}
	shf.l.wrap.b32 	%r1082, %r1081, %r1080, 2;
	shf.l.wrap.b32 	%r1083, %r1080, %r1081, 2;
	mov.b64 	%rd5568, {%r1083, %r1082};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:399     state[21] = ROTR64( state[ 8], 9 );            // R9
	.loc	1 399 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1084,%dummy}, %rd5391;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1085}, %rd5391;
	}
	shf.r.wrap.b32 	%r1086, %r1085, %r1084, 9;
	shf.r.wrap.b32 	%r1087, %r1084, %r1085, 9;
	mov.b64 	%rd5570, {%r1087, %r1086};
$L__tmp1350:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 400 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r329;mov.b64 {hi,lo}, %rd5458;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd5458, {scr,lo};}
	// end inline asm
$L__tmp1351:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:124     asm ("{"
	.loc	1 124 5, function_name $L__info_string11, inlined_at 1 405 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd5460;                  mov.b32 mag, %r331;                      shf.l.wrap.b32 scr, lo, hi, mag;      shf.l.wrap.b32 lo, hi, lo, mag;       mov.b64 %rd5460, {scr,lo};             }
	// end inline asm
$L__tmp1352:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 406 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd5462;                  mov.b32 mag, %r331;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd5462, {scr,lo};             }
	// end inline asm
$L__tmp1353:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 414 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd5464;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd5464, {scr,lo};}
	// end inline asm
$L__tmp1354:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 415 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r333;mov.b64 {hi,lo}, %rd5466;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd5466, {scr,lo};}
	// end inline asm
$L__tmp1355:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 416 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r334;mov.b64 {hi,lo}, %rd5468;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd5468, {scr,lo};}
	// end inline asm
$L__tmp1356:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:417     state[11] = ROTL64( state[ 7],  6 );
	.loc	1 417 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1088}, %rd5366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1089,%dummy}, %rd5366;
	}
	shf.l.wrap.b32 	%r1090, %r1089, %r1088, 6;
	shf.l.wrap.b32 	%r1091, %r1088, %r1089, 6;
	mov.b64 	%rd5530, {%r1091, %r1090};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:418     state[ 7] = ROTL64( state[10],  3 );
	.loc	1 418 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1092}, %rd5321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1093,%dummy}, %rd5321;
	}
	shf.l.wrap.b32 	%r1094, %r1093, %r1092, 3;
	shf.l.wrap.b32 	%r1095, %r1092, %r1093, 3;
	mov.b64 	%rd5500, {%r1095, %r1094};
$L__tmp1357:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:199     asm ("{"
	.loc	1 199 5, function_name $L__info_string12, inlined_at 1 419 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd5470;shf.l.wrap.b32 scr, lo, hi, 1;shf.l.wrap.b32 lo, hi, lo, 1;mov.b64 %rd5470, {scr,lo};}
	// end inline asm
$L__tmp1358:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd5472, %rd5311;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5472;  mov.b64 {bh,bl}, %rd5436;  mov.b64 {ch,cl}, %rd5444;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5472, {ah,al};}
	// end inline asm
$L__tmp1359:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd5476, %rd5436;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5476;  mov.b64 {bh,bl}, %rd5444;  mov.b64 {ch,cl}, %rd5464;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5476, {ah,al};}
	// end inline asm
$L__tmp1360:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5444;  mov.b64 {bh,bl}, %rd5464;  mov.b64 {ch,cl}, %rd5456;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5444, {ah,al};}
	// end inline asm
$L__tmp1361:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5464;  mov.b64 {bh,bl}, %rd5456;  mov.b64 {ch,cl}, %rd5311;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5464, {ah,al};}
	// end inline asm
$L__tmp1362:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5456;  mov.b64 {bh,bl}, %rd5311;  mov.b64 {ch,cl}, %rd5436;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5456, {ah,al};}
	// end inline asm
$L__tmp1363:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd5492, %rd5462;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5492;  mov.b64 {bh,bl}, %rd5438;  mov.b64 {ch,cl}, %rd5500;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5492, {ah,al};}
	// end inline asm
$L__tmp1364:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd5496, %rd5438;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5496;  mov.b64 {bh,bl}, %rd5500;  mov.b64 {ch,cl}, %rd5458;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5496, {ah,al};}
	// end inline asm
$L__tmp1365:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5500;  mov.b64 {bh,bl}, %rd5458;  mov.b64 {ch,cl}, %rd5508;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5500, {ah,al};}
	// end inline asm
$L__tmp1366:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5458;  mov.b64 {bh,bl}, %rd5508;  mov.b64 {ch,cl}, %rd5462;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5458, {ah,al};}
	// end inline asm
$L__tmp1367:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5508;  mov.b64 {bh,bl}, %rd5462;  mov.b64 {ch,cl}, %rd5438;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5508, {ah,al};}
	// end inline asm
$L__tmp1368:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd5512, %rd5470;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5512;  mov.b64 {bh,bl}, %rd5530;  mov.b64 {ch,cl}, %rd5446;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5512, {ah,al};}
	// end inline asm
$L__tmp1369:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd5516, %rd5530;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5516;  mov.b64 {bh,bl}, %rd5446;  mov.b64 {ch,cl}, %rd5448;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5516, {ah,al};}
	// end inline asm
$L__tmp1370:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5446;  mov.b64 {bh,bl}, %rd5448;  mov.b64 {ch,cl}, %rd5442;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5446, {ah,al};}
	// end inline asm
$L__tmp1371:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5448;  mov.b64 {bh,bl}, %rd5442;  mov.b64 {ch,cl}, %rd5470;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5448, {ah,al};}
	// end inline asm
$L__tmp1372:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5442;  mov.b64 {bh,bl}, %rd5470;  mov.b64 {ch,cl}, %rd5530;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5442, {ah,al};}
	// end inline asm
$L__tmp1373:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd5532, %rd5454;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5532;  mov.b64 {bh,bl}, %rd5460;  mov.b64 {ch,cl}, %rd5468;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5532, {ah,al};}
	// end inline asm
$L__tmp1374:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd5536, %rd5460;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5536;  mov.b64 {bh,bl}, %rd5468;  mov.b64 {ch,cl}, %rd5466;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5536, {ah,al};}
	// end inline asm
$L__tmp1375:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5468;  mov.b64 {bh,bl}, %rd5466;  mov.b64 {ch,cl}, %rd5450;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5468, {ah,al};}
	// end inline asm
$L__tmp1376:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5466;  mov.b64 {bh,bl}, %rd5450;  mov.b64 {ch,cl}, %rd5454;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5466, {ah,al};}
	// end inline asm
$L__tmp1377:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5450;  mov.b64 {bh,bl}, %rd5454;  mov.b64 {ch,cl}, %rd5460;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5450, {ah,al};}
	// end inline asm
$L__tmp1378:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd5552, %rd5569;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5552;  mov.b64 {bh,bl}, %rd5570;  mov.b64 {ch,cl}, %rd5440;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5552, {ah,al};}
	// end inline asm
$L__tmp1379:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd5556, %rd5570;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5556;  mov.b64 {bh,bl}, %rd5440;  mov.b64 {ch,cl}, %rd5452;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5556, {ah,al};}
	// end inline asm
$L__tmp1380:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5440;  mov.b64 {bh,bl}, %rd5452;  mov.b64 {ch,cl}, %rd5568;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5440, {ah,al};}
	// end inline asm
$L__tmp1381:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5452;  mov.b64 {bh,bl}, %rd5568;  mov.b64 {ch,cl}, %rd5569;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5452, {ah,al};}
	// end inline asm
$L__tmp1382:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5568;  mov.b64 {bh,bl}, %rd5569;  mov.b64 {ch,cl}, %rd5570;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5568, {ah,al};}
	// end inline asm
$L__tmp1383:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:437     state[0] = state[0] ^ RClocal[i];
	.loc	1 437 5, function_name $L__info_string0, inlined_at 1 475 7
	xor.b64  	%rd5633, %rd5472, -9223372036854775680;
$L__tmp1384:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd5575, %rd5633;
	// begin inline asm
	  xor.b64 %rd5575, %rd5575, %rd5492;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5575, %rd5575, %rd5512;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5575, %rd5575, %rd5532;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5575, %rd5575, %rd5552;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd5587, %rd5476;
	// begin inline asm
	  xor.b64 %rd5587, %rd5587, %rd5496;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5587, %rd5587, %rd5516;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5587, %rd5587, %rd5536;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5587, %rd5587, %rd5556;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd5599, %rd5444;
	// begin inline asm
	  xor.b64 %rd5599, %rd5599, %rd5500;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5599, %rd5599, %rd5446;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5599, %rd5599, %rd5468;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5599, %rd5599, %rd5440;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd5611, %rd5464;
	// begin inline asm
	  xor.b64 %rd5611, %rd5611, %rd5458;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5611, %rd5611, %rd5448;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5611, %rd5611, %rd5466;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5611, %rd5611, %rd5452;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd5623, %rd5456;
	// begin inline asm
	  xor.b64 %rd5623, %rd5623, %rd5508;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5623, %rd5623, %rd5442;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5623, %rd5623, %rd5450;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5623, %rd5623, %rd5568;
	// end inline asm
$L__tmp1385:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1096}, %rd5587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1097,%dummy}, %rd5587;
	}
	shf.l.wrap.b32 	%r1098, %r1097, %r1096, 1;
	shf.l.wrap.b32 	%r1099, %r1096, %r1097, 1;
	mov.b64 	%rd5654, {%r1099, %r1098};
$L__tmp1386:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd5632, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5632, %rd5633, %rd5654;  xor.b64 %rd5632, %rd5632, %rd5623;}
	// end inline asm
$L__tmp1387:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd5781, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5781, %rd5492, %rd5654;  xor.b64 %rd5781, %rd5781, %rd5623;}
	// end inline asm
$L__tmp1388:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd5642, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5642, %rd5512, %rd5654;  xor.b64 %rd5642, %rd5642, %rd5623;}
	// end inline asm
$L__tmp1389:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd5773, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5773, %rd5532, %rd5654;  xor.b64 %rd5773, %rd5773, %rd5623;}
	// end inline asm
$L__tmp1390:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd5763, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5763, %rd5552, %rd5654;  xor.b64 %rd5763, %rd5763, %rd5623;}
	// end inline asm
$L__tmp1391:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1100}, %rd5599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1101,%dummy}, %rd5599;
	}
	shf.l.wrap.b32 	%r1102, %r1101, %r1100, 1;
	shf.l.wrap.b32 	%r1103, %r1100, %r1101, 1;
	mov.b64 	%rd5679, {%r1103, %r1102};
$L__tmp1392:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd5791, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5791, %rd5476, %rd5679;  xor.b64 %rd5791, %rd5791, %rd5575;}
	// end inline asm
$L__tmp1393:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd5757, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5757, %rd5496, %rd5679;  xor.b64 %rd5757, %rd5757, %rd5575;}
	// end inline asm
$L__tmp1394:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd5789, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5789, %rd5516, %rd5679;  xor.b64 %rd5789, %rd5789, %rd5575;}
	// end inline asm
$L__tmp1395:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd5779, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5779, %rd5536, %rd5679;  xor.b64 %rd5779, %rd5779, %rd5575;}
	// end inline asm
$L__tmp1396:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd5677, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5677, %rd5556, %rd5679;  xor.b64 %rd5677, %rd5677, %rd5575;}
	// end inline asm
$L__tmp1397:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1104}, %rd5611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1105,%dummy}, %rd5611;
	}
	shf.l.wrap.b32 	%r1106, %r1105, %r1104, 1;
	shf.l.wrap.b32 	%r1107, %r1104, %r1105, 1;
	mov.b64 	%rd5704, {%r1107, %r1106};
$L__tmp1398:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd5682, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5682, %rd5444, %rd5704;  xor.b64 %rd5682, %rd5682, %rd5587;}
	// end inline asm
$L__tmp1399:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd5687, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5687, %rd5500, %rd5704;  xor.b64 %rd5687, %rd5687, %rd5587;}
	// end inline asm
$L__tmp1400:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd5765, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5765, %rd5446, %rd5704;  xor.b64 %rd5765, %rd5765, %rd5587;}
	// end inline asm
$L__tmp1401:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd5787, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5787, %rd5468, %rd5704;  xor.b64 %rd5787, %rd5787, %rd5587;}
	// end inline asm
$L__tmp1402:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd5702, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5702, %rd5440, %rd5704;  xor.b64 %rd5702, %rd5702, %rd5587;}
	// end inline asm
$L__tmp1403:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1108}, %rd5623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1109,%dummy}, %rd5623;
	}
	shf.l.wrap.b32 	%r1110, %r1109, %r1108, 1;
	shf.l.wrap.b32 	%r1111, %r1108, %r1109, 1;
	mov.b64 	%rd5729, {%r1111, %r1110};
$L__tmp1404:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd5783, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5783, %rd5464, %rd5729;  xor.b64 %rd5783, %rd5783, %rd5599;}
	// end inline asm
$L__tmp1405:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd5712, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5712, %rd5458, %rd5729;  xor.b64 %rd5712, %rd5712, %rd5599;}
	// end inline asm
$L__tmp1406:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd5767, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5767, %rd5448, %rd5729;  xor.b64 %rd5767, %rd5767, %rd5599;}
	// end inline asm
$L__tmp1407:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd5785, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5785, %rd5466, %rd5729;  xor.b64 %rd5785, %rd5785, %rd5599;}
	// end inline asm
$L__tmp1408:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd5771, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5771, %rd5452, %rd5729;  xor.b64 %rd5771, %rd5771, %rd5599;}
	// end inline asm
$L__tmp1409:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1112}, %rd5575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1113,%dummy}, %rd5575;
	}
	shf.l.wrap.b32 	%r1114, %r1113, %r1112, 1;
	shf.l.wrap.b32 	%r1115, %r1112, %r1113, 1;
	mov.b64 	%rd5754, {%r1115, %r1114};
$L__tmp1410:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd5775, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5775, %rd5456, %rd5754;  xor.b64 %rd5775, %rd5775, %rd5611;}
	// end inline asm
$L__tmp1411:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd5759, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5759, %rd5508, %rd5754;  xor.b64 %rd5759, %rd5759, %rd5611;}
	// end inline asm
$L__tmp1412:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd5761, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5761, %rd5442, %rd5754;  xor.b64 %rd5761, %rd5761, %rd5611;}
	// end inline asm
$L__tmp1413:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd5769, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5769, %rd5450, %rd5754;  xor.b64 %rd5769, %rd5769, %rd5611;}
	// end inline asm
$L__tmp1414:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd5777, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5777, %rd5568, %rd5754;  xor.b64 %rd5777, %rd5777, %rd5611;}
	// end inline asm
$L__tmp1415:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 372 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd5757;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd5757, {scr,lo};}
	// end inline asm
$L__tmp1416:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 373 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd5759;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd5759, {scr,lo};}
	// end inline asm
$L__tmp1417:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:374     state[ 9] = ROTR64( state[22],  3 );
	.loc	1 374 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1116,%dummy}, %rd5702;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1117}, %rd5702;
	}
	shf.r.wrap.b32 	%r1118, %r1117, %r1116, 3;
	shf.r.wrap.b32 	%r1119, %r1116, %r1117, 3;
	mov.b64 	%rd5829, {%r1119, %r1118};
$L__tmp1418:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 375 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd5761;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd5761, {scr,lo};}
	// end inline asm
$L__tmp1419:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 376 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r323;mov.b64 {hi,lo}, %rd5763;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd5763, {scr,lo};}
	// end inline asm
$L__tmp1420:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:377     state[20] = ROTR64( state[ 2],  2 );
	.loc	1 377 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1120,%dummy}, %rd5682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1121}, %rd5682;
	}
	shf.r.wrap.b32 	%r1122, %r1121, %r1120, 2;
	shf.r.wrap.b32 	%r1123, %r1120, %r1121, 2;
	mov.b64 	%rd5890, {%r1123, %r1122};
$L__tmp1421:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 378 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd5765;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd5765, {scr,lo};}
	// end inline asm
$L__tmp1422:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 379 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd5767;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd5767, {scr,lo};}
	// end inline asm
$L__tmp1423:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:169     asm ( "{"
	.loc	1 169 5, function_name $L__info_string8, inlined_at 1 380 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd5769;prmt.b32 scr, hi, lo, 0x2107;prmt.b32 lo, hi, lo, 0x6543;mov.b64 %rd5769, {scr,lo};}
	// end inline asm
$L__tmp1424:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:183       asm ( "{"
	.loc	1 183 7, function_name $L__info_string9, inlined_at 1 381 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd5771;prmt.b32 scr, lo, hi, 0x0765;prmt.b32 lo, lo, hi, 0x4321;mov.b64 %rd5771, {scr,lo};}
	// end inline asm
$L__tmp1425:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 382 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r326;mov.b64 {hi,lo}, %rd5773;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd5773, {scr,lo};}
	// end inline asm
$L__tmp1426:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 386 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd5775;                  mov.b32 mag, %r327;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd5775, {scr,lo};             }
	// end inline asm
$L__tmp1427:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 397 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r328;mov.b64 {hi,lo}, %rd5777;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd5777, {scr,lo};}
	// end inline asm
$L__tmp1428:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:398     state[24] = ROTL64( state[21],  2 );
	.loc	1 398 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1124}, %rd5677;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1125,%dummy}, %rd5677;
	}
	shf.l.wrap.b32 	%r1126, %r1125, %r1124, 2;
	shf.l.wrap.b32 	%r1127, %r1124, %r1125, 2;
	mov.b64 	%rd5889, {%r1127, %r1126};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:399     state[21] = ROTR64( state[ 8], 9 );            // R9
	.loc	1 399 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1128,%dummy}, %rd5712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1129}, %rd5712;
	}
	shf.r.wrap.b32 	%r1130, %r1129, %r1128, 9;
	shf.r.wrap.b32 	%r1131, %r1128, %r1129, 9;
	mov.b64 	%rd5891, {%r1131, %r1130};
$L__tmp1429:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 400 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r329;mov.b64 {hi,lo}, %rd5779;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd5779, {scr,lo};}
	// end inline asm
$L__tmp1430:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:124     asm ("{"
	.loc	1 124 5, function_name $L__info_string11, inlined_at 1 405 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd5781;                  mov.b32 mag, %r331;                      shf.l.wrap.b32 scr, lo, hi, mag;      shf.l.wrap.b32 lo, hi, lo, mag;       mov.b64 %rd5781, {scr,lo};             }
	// end inline asm
$L__tmp1431:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 406 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd5783;                  mov.b32 mag, %r331;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd5783, {scr,lo};             }
	// end inline asm
$L__tmp1432:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 414 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd5785;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd5785, {scr,lo};}
	// end inline asm
$L__tmp1433:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 415 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r333;mov.b64 {hi,lo}, %rd5787;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd5787, {scr,lo};}
	// end inline asm
$L__tmp1434:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 416 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r334;mov.b64 {hi,lo}, %rd5789;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd5789, {scr,lo};}
	// end inline asm
$L__tmp1435:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:417     state[11] = ROTL64( state[ 7],  6 );
	.loc	1 417 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1132}, %rd5687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1133,%dummy}, %rd5687;
	}
	shf.l.wrap.b32 	%r1134, %r1133, %r1132, 6;
	shf.l.wrap.b32 	%r1135, %r1132, %r1133, 6;
	mov.b64 	%rd5851, {%r1135, %r1134};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:418     state[ 7] = ROTL64( state[10],  3 );
	.loc	1 418 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1136}, %rd5642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1137,%dummy}, %rd5642;
	}
	shf.l.wrap.b32 	%r1138, %r1137, %r1136, 3;
	shf.l.wrap.b32 	%r1139, %r1136, %r1137, 3;
	mov.b64 	%rd5821, {%r1139, %r1138};
$L__tmp1436:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:199     asm ("{"
	.loc	1 199 5, function_name $L__info_string12, inlined_at 1 419 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd5791;shf.l.wrap.b32 scr, lo, hi, 1;shf.l.wrap.b32 lo, hi, lo, 1;mov.b64 %rd5791, {scr,lo};}
	// end inline asm
$L__tmp1437:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd5793, %rd5632;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5793;  mov.b64 {bh,bl}, %rd5757;  mov.b64 {ch,cl}, %rd5765;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5793, {ah,al};}
	// end inline asm
$L__tmp1438:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd5797, %rd5757;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5797;  mov.b64 {bh,bl}, %rd5765;  mov.b64 {ch,cl}, %rd5785;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5797, {ah,al};}
	// end inline asm
$L__tmp1439:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5765;  mov.b64 {bh,bl}, %rd5785;  mov.b64 {ch,cl}, %rd5777;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5765, {ah,al};}
	// end inline asm
$L__tmp1440:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5785;  mov.b64 {bh,bl}, %rd5777;  mov.b64 {ch,cl}, %rd5632;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5785, {ah,al};}
	// end inline asm
$L__tmp1441:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5777;  mov.b64 {bh,bl}, %rd5632;  mov.b64 {ch,cl}, %rd5757;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5777, {ah,al};}
	// end inline asm
$L__tmp1442:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd5813, %rd5783;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5813;  mov.b64 {bh,bl}, %rd5759;  mov.b64 {ch,cl}, %rd5821;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5813, {ah,al};}
	// end inline asm
$L__tmp1443:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd5817, %rd5759;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5817;  mov.b64 {bh,bl}, %rd5821;  mov.b64 {ch,cl}, %rd5779;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5817, {ah,al};}
	// end inline asm
$L__tmp1444:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5821;  mov.b64 {bh,bl}, %rd5779;  mov.b64 {ch,cl}, %rd5829;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5821, {ah,al};}
	// end inline asm
$L__tmp1445:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5779;  mov.b64 {bh,bl}, %rd5829;  mov.b64 {ch,cl}, %rd5783;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5779, {ah,al};}
	// end inline asm
$L__tmp1446:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5829;  mov.b64 {bh,bl}, %rd5783;  mov.b64 {ch,cl}, %rd5759;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5829, {ah,al};}
	// end inline asm
$L__tmp1447:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd5833, %rd5791;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5833;  mov.b64 {bh,bl}, %rd5851;  mov.b64 {ch,cl}, %rd5767;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5833, {ah,al};}
	// end inline asm
$L__tmp1448:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd5837, %rd5851;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5837;  mov.b64 {bh,bl}, %rd5767;  mov.b64 {ch,cl}, %rd5769;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5837, {ah,al};}
	// end inline asm
$L__tmp1449:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5767;  mov.b64 {bh,bl}, %rd5769;  mov.b64 {ch,cl}, %rd5763;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5767, {ah,al};}
	// end inline asm
$L__tmp1450:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5769;  mov.b64 {bh,bl}, %rd5763;  mov.b64 {ch,cl}, %rd5791;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5769, {ah,al};}
	// end inline asm
$L__tmp1451:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5763;  mov.b64 {bh,bl}, %rd5791;  mov.b64 {ch,cl}, %rd5851;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5763, {ah,al};}
	// end inline asm
$L__tmp1452:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd5853, %rd5775;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5853;  mov.b64 {bh,bl}, %rd5781;  mov.b64 {ch,cl}, %rd5789;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5853, {ah,al};}
	// end inline asm
$L__tmp1453:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd5857, %rd5781;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5857;  mov.b64 {bh,bl}, %rd5789;  mov.b64 {ch,cl}, %rd5787;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5857, {ah,al};}
	// end inline asm
$L__tmp1454:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5789;  mov.b64 {bh,bl}, %rd5787;  mov.b64 {ch,cl}, %rd5771;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5789, {ah,al};}
	// end inline asm
$L__tmp1455:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5787;  mov.b64 {bh,bl}, %rd5771;  mov.b64 {ch,cl}, %rd5775;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5787, {ah,al};}
	// end inline asm
$L__tmp1456:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5771;  mov.b64 {bh,bl}, %rd5775;  mov.b64 {ch,cl}, %rd5781;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5771, {ah,al};}
	// end inline asm
$L__tmp1457:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd5873, %rd5890;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5873;  mov.b64 {bh,bl}, %rd5891;  mov.b64 {ch,cl}, %rd5761;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5873, {ah,al};}
	// end inline asm
$L__tmp1458:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd5877, %rd5891;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5877;  mov.b64 {bh,bl}, %rd5761;  mov.b64 {ch,cl}, %rd5773;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5877, {ah,al};}
	// end inline asm
$L__tmp1459:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5761;  mov.b64 {bh,bl}, %rd5773;  mov.b64 {ch,cl}, %rd5889;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5761, {ah,al};}
	// end inline asm
$L__tmp1460:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5773;  mov.b64 {bh,bl}, %rd5889;  mov.b64 {ch,cl}, %rd5890;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5773, {ah,al};}
	// end inline asm
$L__tmp1461:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd5889;  mov.b64 {bh,bl}, %rd5890;  mov.b64 {ch,cl}, %rd5891;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd5889, {ah,al};}
	// end inline asm
$L__tmp1462:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:437     state[0] = state[0] ^ RClocal[i];
	.loc	1 437 5, function_name $L__info_string0, inlined_at 1 475 7
	xor.b64  	%rd5954, %rd5793, 32778;
$L__tmp1463:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd5896, %rd5954;
	// begin inline asm
	  xor.b64 %rd5896, %rd5896, %rd5813;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5896, %rd5896, %rd5833;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5896, %rd5896, %rd5853;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5896, %rd5896, %rd5873;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd5908, %rd5797;
	// begin inline asm
	  xor.b64 %rd5908, %rd5908, %rd5817;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5908, %rd5908, %rd5837;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5908, %rd5908, %rd5857;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5908, %rd5908, %rd5877;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd5920, %rd5765;
	// begin inline asm
	  xor.b64 %rd5920, %rd5920, %rd5821;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5920, %rd5920, %rd5767;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5920, %rd5920, %rd5789;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5920, %rd5920, %rd5761;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd5932, %rd5785;
	// begin inline asm
	  xor.b64 %rd5932, %rd5932, %rd5779;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5932, %rd5932, %rd5769;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5932, %rd5932, %rd5787;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5932, %rd5932, %rd5773;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd5944, %rd5777;
	// begin inline asm
	  xor.b64 %rd5944, %rd5944, %rd5829;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5944, %rd5944, %rd5763;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5944, %rd5944, %rd5771;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd5944, %rd5944, %rd5889;
	// end inline asm
$L__tmp1464:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1140}, %rd5908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1141,%dummy}, %rd5908;
	}
	shf.l.wrap.b32 	%r1142, %r1141, %r1140, 1;
	shf.l.wrap.b32 	%r1143, %r1140, %r1141, 1;
	mov.b64 	%rd5975, {%r1143, %r1142};
$L__tmp1465:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd5953, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5953, %rd5954, %rd5975;  xor.b64 %rd5953, %rd5953, %rd5944;}
	// end inline asm
$L__tmp1466:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd6102, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6102, %rd5813, %rd5975;  xor.b64 %rd6102, %rd6102, %rd5944;}
	// end inline asm
$L__tmp1467:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd5963, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5963, %rd5833, %rd5975;  xor.b64 %rd5963, %rd5963, %rd5944;}
	// end inline asm
$L__tmp1468:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd6094, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6094, %rd5853, %rd5975;  xor.b64 %rd6094, %rd6094, %rd5944;}
	// end inline asm
$L__tmp1469:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd6084, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6084, %rd5873, %rd5975;  xor.b64 %rd6084, %rd6084, %rd5944;}
	// end inline asm
$L__tmp1470:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1144}, %rd5920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1145,%dummy}, %rd5920;
	}
	shf.l.wrap.b32 	%r1146, %r1145, %r1144, 1;
	shf.l.wrap.b32 	%r1147, %r1144, %r1145, 1;
	mov.b64 	%rd6000, {%r1147, %r1146};
$L__tmp1471:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd6112, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6112, %rd5797, %rd6000;  xor.b64 %rd6112, %rd6112, %rd5896;}
	// end inline asm
$L__tmp1472:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd6078, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6078, %rd5817, %rd6000;  xor.b64 %rd6078, %rd6078, %rd5896;}
	// end inline asm
$L__tmp1473:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd6110, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6110, %rd5837, %rd6000;  xor.b64 %rd6110, %rd6110, %rd5896;}
	// end inline asm
$L__tmp1474:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd6100, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6100, %rd5857, %rd6000;  xor.b64 %rd6100, %rd6100, %rd5896;}
	// end inline asm
$L__tmp1475:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd5998, %rd7260;
	// begin inline asm
	{  xor.b64 %rd5998, %rd5877, %rd6000;  xor.b64 %rd5998, %rd5998, %rd5896;}
	// end inline asm
$L__tmp1476:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1148}, %rd5932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1149,%dummy}, %rd5932;
	}
	shf.l.wrap.b32 	%r1150, %r1149, %r1148, 1;
	shf.l.wrap.b32 	%r1151, %r1148, %r1149, 1;
	mov.b64 	%rd6025, {%r1151, %r1150};
$L__tmp1477:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd6003, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6003, %rd5765, %rd6025;  xor.b64 %rd6003, %rd6003, %rd5908;}
	// end inline asm
$L__tmp1478:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd6008, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6008, %rd5821, %rd6025;  xor.b64 %rd6008, %rd6008, %rd5908;}
	// end inline asm
$L__tmp1479:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd6086, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6086, %rd5767, %rd6025;  xor.b64 %rd6086, %rd6086, %rd5908;}
	// end inline asm
$L__tmp1480:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd6108, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6108, %rd5789, %rd6025;  xor.b64 %rd6108, %rd6108, %rd5908;}
	// end inline asm
$L__tmp1481:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd6023, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6023, %rd5761, %rd6025;  xor.b64 %rd6023, %rd6023, %rd5908;}
	// end inline asm
$L__tmp1482:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1152}, %rd5944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1153,%dummy}, %rd5944;
	}
	shf.l.wrap.b32 	%r1154, %r1153, %r1152, 1;
	shf.l.wrap.b32 	%r1155, %r1152, %r1153, 1;
	mov.b64 	%rd6050, {%r1155, %r1154};
$L__tmp1483:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd6104, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6104, %rd5785, %rd6050;  xor.b64 %rd6104, %rd6104, %rd5920;}
	// end inline asm
$L__tmp1484:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd6033, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6033, %rd5779, %rd6050;  xor.b64 %rd6033, %rd6033, %rd5920;}
	// end inline asm
$L__tmp1485:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd6088, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6088, %rd5769, %rd6050;  xor.b64 %rd6088, %rd6088, %rd5920;}
	// end inline asm
$L__tmp1486:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd6106, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6106, %rd5787, %rd6050;  xor.b64 %rd6106, %rd6106, %rd5920;}
	// end inline asm
$L__tmp1487:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd6092, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6092, %rd5773, %rd6050;  xor.b64 %rd6092, %rd6092, %rd5920;}
	// end inline asm
$L__tmp1488:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1156}, %rd5896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1157,%dummy}, %rd5896;
	}
	shf.l.wrap.b32 	%r1158, %r1157, %r1156, 1;
	shf.l.wrap.b32 	%r1159, %r1156, %r1157, 1;
	mov.b64 	%rd6075, {%r1159, %r1158};
$L__tmp1489:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd6096, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6096, %rd5777, %rd6075;  xor.b64 %rd6096, %rd6096, %rd5932;}
	// end inline asm
$L__tmp1490:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd6080, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6080, %rd5829, %rd6075;  xor.b64 %rd6080, %rd6080, %rd5932;}
	// end inline asm
$L__tmp1491:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd6082, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6082, %rd5763, %rd6075;  xor.b64 %rd6082, %rd6082, %rd5932;}
	// end inline asm
$L__tmp1492:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd6090, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6090, %rd5771, %rd6075;  xor.b64 %rd6090, %rd6090, %rd5932;}
	// end inline asm
$L__tmp1493:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd6098, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6098, %rd5889, %rd6075;  xor.b64 %rd6098, %rd6098, %rd5932;}
	// end inline asm
$L__tmp1494:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 372 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd6078;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd6078, {scr,lo};}
	// end inline asm
$L__tmp1495:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 373 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd6080;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd6080, {scr,lo};}
	// end inline asm
$L__tmp1496:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:374     state[ 9] = ROTR64( state[22],  3 );
	.loc	1 374 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1160,%dummy}, %rd6023;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1161}, %rd6023;
	}
	shf.r.wrap.b32 	%r1162, %r1161, %r1160, 3;
	shf.r.wrap.b32 	%r1163, %r1160, %r1161, 3;
	mov.b64 	%rd6150, {%r1163, %r1162};
$L__tmp1497:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 375 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd6082;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd6082, {scr,lo};}
	// end inline asm
$L__tmp1498:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 376 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r323;mov.b64 {hi,lo}, %rd6084;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd6084, {scr,lo};}
	// end inline asm
$L__tmp1499:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:377     state[20] = ROTR64( state[ 2],  2 );
	.loc	1 377 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1164,%dummy}, %rd6003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1165}, %rd6003;
	}
	shf.r.wrap.b32 	%r1166, %r1165, %r1164, 2;
	shf.r.wrap.b32 	%r1167, %r1164, %r1165, 2;
	mov.b64 	%rd6211, {%r1167, %r1166};
$L__tmp1500:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 378 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd6086;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd6086, {scr,lo};}
	// end inline asm
$L__tmp1501:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 379 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd6088;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd6088, {scr,lo};}
	// end inline asm
$L__tmp1502:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:169     asm ( "{"
	.loc	1 169 5, function_name $L__info_string8, inlined_at 1 380 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd6090;prmt.b32 scr, hi, lo, 0x2107;prmt.b32 lo, hi, lo, 0x6543;mov.b64 %rd6090, {scr,lo};}
	// end inline asm
$L__tmp1503:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:183       asm ( "{"
	.loc	1 183 7, function_name $L__info_string9, inlined_at 1 381 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd6092;prmt.b32 scr, lo, hi, 0x0765;prmt.b32 lo, lo, hi, 0x4321;mov.b64 %rd6092, {scr,lo};}
	// end inline asm
$L__tmp1504:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 382 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r326;mov.b64 {hi,lo}, %rd6094;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd6094, {scr,lo};}
	// end inline asm
$L__tmp1505:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 386 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd6096;                  mov.b32 mag, %r327;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd6096, {scr,lo};             }
	// end inline asm
$L__tmp1506:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 397 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r328;mov.b64 {hi,lo}, %rd6098;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd6098, {scr,lo};}
	// end inline asm
$L__tmp1507:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:398     state[24] = ROTL64( state[21],  2 );
	.loc	1 398 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1168}, %rd5998;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1169,%dummy}, %rd5998;
	}
	shf.l.wrap.b32 	%r1170, %r1169, %r1168, 2;
	shf.l.wrap.b32 	%r1171, %r1168, %r1169, 2;
	mov.b64 	%rd6210, {%r1171, %r1170};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:399     state[21] = ROTR64( state[ 8], 9 );            // R9
	.loc	1 399 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1172,%dummy}, %rd6033;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1173}, %rd6033;
	}
	shf.r.wrap.b32 	%r1174, %r1173, %r1172, 9;
	shf.r.wrap.b32 	%r1175, %r1172, %r1173, 9;
	mov.b64 	%rd6212, {%r1175, %r1174};
$L__tmp1508:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 400 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r329;mov.b64 {hi,lo}, %rd6100;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd6100, {scr,lo};}
	// end inline asm
$L__tmp1509:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:124     asm ("{"
	.loc	1 124 5, function_name $L__info_string11, inlined_at 1 405 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd6102;                  mov.b32 mag, %r331;                      shf.l.wrap.b32 scr, lo, hi, mag;      shf.l.wrap.b32 lo, hi, lo, mag;       mov.b64 %rd6102, {scr,lo};             }
	// end inline asm
$L__tmp1510:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 406 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd6104;                  mov.b32 mag, %r331;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd6104, {scr,lo};             }
	// end inline asm
$L__tmp1511:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 414 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd6106;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd6106, {scr,lo};}
	// end inline asm
$L__tmp1512:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 415 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r333;mov.b64 {hi,lo}, %rd6108;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd6108, {scr,lo};}
	// end inline asm
$L__tmp1513:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 416 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r334;mov.b64 {hi,lo}, %rd6110;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd6110, {scr,lo};}
	// end inline asm
$L__tmp1514:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:417     state[11] = ROTL64( state[ 7],  6 );
	.loc	1 417 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1176}, %rd6008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1177,%dummy}, %rd6008;
	}
	shf.l.wrap.b32 	%r1178, %r1177, %r1176, 6;
	shf.l.wrap.b32 	%r1179, %r1176, %r1177, 6;
	mov.b64 	%rd6172, {%r1179, %r1178};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:418     state[ 7] = ROTL64( state[10],  3 );
	.loc	1 418 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1180}, %rd5963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1181,%dummy}, %rd5963;
	}
	shf.l.wrap.b32 	%r1182, %r1181, %r1180, 3;
	shf.l.wrap.b32 	%r1183, %r1180, %r1181, 3;
	mov.b64 	%rd6142, {%r1183, %r1182};
$L__tmp1515:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:199     asm ("{"
	.loc	1 199 5, function_name $L__info_string12, inlined_at 1 419 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd6112;shf.l.wrap.b32 scr, lo, hi, 1;shf.l.wrap.b32 lo, hi, lo, 1;mov.b64 %rd6112, {scr,lo};}
	// end inline asm
$L__tmp1516:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd6114, %rd5953;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6114;  mov.b64 {bh,bl}, %rd6078;  mov.b64 {ch,cl}, %rd6086;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6114, {ah,al};}
	// end inline asm
$L__tmp1517:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd6118, %rd6078;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6118;  mov.b64 {bh,bl}, %rd6086;  mov.b64 {ch,cl}, %rd6106;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6118, {ah,al};}
	// end inline asm
$L__tmp1518:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6086;  mov.b64 {bh,bl}, %rd6106;  mov.b64 {ch,cl}, %rd6098;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6086, {ah,al};}
	// end inline asm
$L__tmp1519:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6106;  mov.b64 {bh,bl}, %rd6098;  mov.b64 {ch,cl}, %rd5953;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6106, {ah,al};}
	// end inline asm
$L__tmp1520:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6098;  mov.b64 {bh,bl}, %rd5953;  mov.b64 {ch,cl}, %rd6078;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6098, {ah,al};}
	// end inline asm
$L__tmp1521:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd6134, %rd6104;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6134;  mov.b64 {bh,bl}, %rd6080;  mov.b64 {ch,cl}, %rd6142;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6134, {ah,al};}
	// end inline asm
$L__tmp1522:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd6138, %rd6080;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6138;  mov.b64 {bh,bl}, %rd6142;  mov.b64 {ch,cl}, %rd6100;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6138, {ah,al};}
	// end inline asm
$L__tmp1523:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6142;  mov.b64 {bh,bl}, %rd6100;  mov.b64 {ch,cl}, %rd6150;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6142, {ah,al};}
	// end inline asm
$L__tmp1524:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6100;  mov.b64 {bh,bl}, %rd6150;  mov.b64 {ch,cl}, %rd6104;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6100, {ah,al};}
	// end inline asm
$L__tmp1525:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6150;  mov.b64 {bh,bl}, %rd6104;  mov.b64 {ch,cl}, %rd6080;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6150, {ah,al};}
	// end inline asm
$L__tmp1526:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd6154, %rd6112;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6154;  mov.b64 {bh,bl}, %rd6172;  mov.b64 {ch,cl}, %rd6088;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6154, {ah,al};}
	// end inline asm
$L__tmp1527:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd6158, %rd6172;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6158;  mov.b64 {bh,bl}, %rd6088;  mov.b64 {ch,cl}, %rd6090;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6158, {ah,al};}
	// end inline asm
$L__tmp1528:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6088;  mov.b64 {bh,bl}, %rd6090;  mov.b64 {ch,cl}, %rd6084;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6088, {ah,al};}
	// end inline asm
$L__tmp1529:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6090;  mov.b64 {bh,bl}, %rd6084;  mov.b64 {ch,cl}, %rd6112;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6090, {ah,al};}
	// end inline asm
$L__tmp1530:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6084;  mov.b64 {bh,bl}, %rd6112;  mov.b64 {ch,cl}, %rd6172;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6084, {ah,al};}
	// end inline asm
$L__tmp1531:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd6174, %rd6096;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6174;  mov.b64 {bh,bl}, %rd6102;  mov.b64 {ch,cl}, %rd6110;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6174, {ah,al};}
	// end inline asm
$L__tmp1532:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd6178, %rd6102;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6178;  mov.b64 {bh,bl}, %rd6110;  mov.b64 {ch,cl}, %rd6108;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6178, {ah,al};}
	// end inline asm
$L__tmp1533:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6110;  mov.b64 {bh,bl}, %rd6108;  mov.b64 {ch,cl}, %rd6092;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6110, {ah,al};}
	// end inline asm
$L__tmp1534:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6108;  mov.b64 {bh,bl}, %rd6092;  mov.b64 {ch,cl}, %rd6096;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6108, {ah,al};}
	// end inline asm
$L__tmp1535:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6092;  mov.b64 {bh,bl}, %rd6096;  mov.b64 {ch,cl}, %rd6102;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6092, {ah,al};}
	// end inline asm
$L__tmp1536:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd6194, %rd6211;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6194;  mov.b64 {bh,bl}, %rd6212;  mov.b64 {ch,cl}, %rd6082;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6194, {ah,al};}
	// end inline asm
$L__tmp1537:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd6198, %rd6212;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6198;  mov.b64 {bh,bl}, %rd6082;  mov.b64 {ch,cl}, %rd6094;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6198, {ah,al};}
	// end inline asm
$L__tmp1538:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6082;  mov.b64 {bh,bl}, %rd6094;  mov.b64 {ch,cl}, %rd6210;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6082, {ah,al};}
	// end inline asm
$L__tmp1539:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6094;  mov.b64 {bh,bl}, %rd6210;  mov.b64 {ch,cl}, %rd6211;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6094, {ah,al};}
	// end inline asm
$L__tmp1540:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6210;  mov.b64 {bh,bl}, %rd6211;  mov.b64 {ch,cl}, %rd6212;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6210, {ah,al};}
	// end inline asm
$L__tmp1541:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:437     state[0] = state[0] ^ RClocal[i];
	.loc	1 437 5, function_name $L__info_string0, inlined_at 1 475 7
	xor.b64  	%rd6275, %rd6114, -9223372034707292150;
$L__tmp1542:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd6217, %rd6275;
	// begin inline asm
	  xor.b64 %rd6217, %rd6217, %rd6134;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6217, %rd6217, %rd6154;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6217, %rd6217, %rd6174;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6217, %rd6217, %rd6194;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd6229, %rd6118;
	// begin inline asm
	  xor.b64 %rd6229, %rd6229, %rd6138;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6229, %rd6229, %rd6158;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6229, %rd6229, %rd6178;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6229, %rd6229, %rd6198;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd6241, %rd6086;
	// begin inline asm
	  xor.b64 %rd6241, %rd6241, %rd6142;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6241, %rd6241, %rd6088;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6241, %rd6241, %rd6110;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6241, %rd6241, %rd6082;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd6253, %rd6106;
	// begin inline asm
	  xor.b64 %rd6253, %rd6253, %rd6100;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6253, %rd6253, %rd6090;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6253, %rd6253, %rd6108;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6253, %rd6253, %rd6094;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd6265, %rd6098;
	// begin inline asm
	  xor.b64 %rd6265, %rd6265, %rd6150;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6265, %rd6265, %rd6084;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6265, %rd6265, %rd6092;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6265, %rd6265, %rd6210;
	// end inline asm
$L__tmp1543:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1184}, %rd6229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1185,%dummy}, %rd6229;
	}
	shf.l.wrap.b32 	%r1186, %r1185, %r1184, 1;
	shf.l.wrap.b32 	%r1187, %r1184, %r1185, 1;
	mov.b64 	%rd6296, {%r1187, %r1186};
$L__tmp1544:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd6274, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6274, %rd6275, %rd6296;  xor.b64 %rd6274, %rd6274, %rd6265;}
	// end inline asm
$L__tmp1545:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd6423, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6423, %rd6134, %rd6296;  xor.b64 %rd6423, %rd6423, %rd6265;}
	// end inline asm
$L__tmp1546:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd6284, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6284, %rd6154, %rd6296;  xor.b64 %rd6284, %rd6284, %rd6265;}
	// end inline asm
$L__tmp1547:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd6415, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6415, %rd6174, %rd6296;  xor.b64 %rd6415, %rd6415, %rd6265;}
	// end inline asm
$L__tmp1548:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd6405, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6405, %rd6194, %rd6296;  xor.b64 %rd6405, %rd6405, %rd6265;}
	// end inline asm
$L__tmp1549:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1188}, %rd6241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1189,%dummy}, %rd6241;
	}
	shf.l.wrap.b32 	%r1190, %r1189, %r1188, 1;
	shf.l.wrap.b32 	%r1191, %r1188, %r1189, 1;
	mov.b64 	%rd6321, {%r1191, %r1190};
$L__tmp1550:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd6433, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6433, %rd6118, %rd6321;  xor.b64 %rd6433, %rd6433, %rd6217;}
	// end inline asm
$L__tmp1551:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd6399, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6399, %rd6138, %rd6321;  xor.b64 %rd6399, %rd6399, %rd6217;}
	// end inline asm
$L__tmp1552:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd6431, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6431, %rd6158, %rd6321;  xor.b64 %rd6431, %rd6431, %rd6217;}
	// end inline asm
$L__tmp1553:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd6421, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6421, %rd6178, %rd6321;  xor.b64 %rd6421, %rd6421, %rd6217;}
	// end inline asm
$L__tmp1554:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd6319, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6319, %rd6198, %rd6321;  xor.b64 %rd6319, %rd6319, %rd6217;}
	// end inline asm
$L__tmp1555:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1192}, %rd6253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1193,%dummy}, %rd6253;
	}
	shf.l.wrap.b32 	%r1194, %r1193, %r1192, 1;
	shf.l.wrap.b32 	%r1195, %r1192, %r1193, 1;
	mov.b64 	%rd6346, {%r1195, %r1194};
$L__tmp1556:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd6324, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6324, %rd6086, %rd6346;  xor.b64 %rd6324, %rd6324, %rd6229;}
	// end inline asm
$L__tmp1557:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd6329, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6329, %rd6142, %rd6346;  xor.b64 %rd6329, %rd6329, %rd6229;}
	// end inline asm
$L__tmp1558:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd6407, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6407, %rd6088, %rd6346;  xor.b64 %rd6407, %rd6407, %rd6229;}
	// end inline asm
$L__tmp1559:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd6429, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6429, %rd6110, %rd6346;  xor.b64 %rd6429, %rd6429, %rd6229;}
	// end inline asm
$L__tmp1560:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd6344, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6344, %rd6082, %rd6346;  xor.b64 %rd6344, %rd6344, %rd6229;}
	// end inline asm
$L__tmp1561:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1196}, %rd6265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1197,%dummy}, %rd6265;
	}
	shf.l.wrap.b32 	%r1198, %r1197, %r1196, 1;
	shf.l.wrap.b32 	%r1199, %r1196, %r1197, 1;
	mov.b64 	%rd6371, {%r1199, %r1198};
$L__tmp1562:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd6425, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6425, %rd6106, %rd6371;  xor.b64 %rd6425, %rd6425, %rd6241;}
	// end inline asm
$L__tmp1563:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd6354, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6354, %rd6100, %rd6371;  xor.b64 %rd6354, %rd6354, %rd6241;}
	// end inline asm
$L__tmp1564:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd6409, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6409, %rd6090, %rd6371;  xor.b64 %rd6409, %rd6409, %rd6241;}
	// end inline asm
$L__tmp1565:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd6427, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6427, %rd6108, %rd6371;  xor.b64 %rd6427, %rd6427, %rd6241;}
	// end inline asm
$L__tmp1566:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd6413, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6413, %rd6094, %rd6371;  xor.b64 %rd6413, %rd6413, %rd6241;}
	// end inline asm
$L__tmp1567:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1200}, %rd6217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1201,%dummy}, %rd6217;
	}
	shf.l.wrap.b32 	%r1202, %r1201, %r1200, 1;
	shf.l.wrap.b32 	%r1203, %r1200, %r1201, 1;
	mov.b64 	%rd6396, {%r1203, %r1202};
$L__tmp1568:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd6417, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6417, %rd6098, %rd6396;  xor.b64 %rd6417, %rd6417, %rd6253;}
	// end inline asm
$L__tmp1569:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd6401, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6401, %rd6150, %rd6396;  xor.b64 %rd6401, %rd6401, %rd6253;}
	// end inline asm
$L__tmp1570:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd6403, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6403, %rd6084, %rd6396;  xor.b64 %rd6403, %rd6403, %rd6253;}
	// end inline asm
$L__tmp1571:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd6411, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6411, %rd6092, %rd6396;  xor.b64 %rd6411, %rd6411, %rd6253;}
	// end inline asm
$L__tmp1572:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd6419, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6419, %rd6210, %rd6396;  xor.b64 %rd6419, %rd6419, %rd6253;}
	// end inline asm
$L__tmp1573:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 372 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd6399;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd6399, {scr,lo};}
	// end inline asm
$L__tmp1574:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 373 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd6401;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd6401, {scr,lo};}
	// end inline asm
$L__tmp1575:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:374     state[ 9] = ROTR64( state[22],  3 );
	.loc	1 374 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1204,%dummy}, %rd6344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1205}, %rd6344;
	}
	shf.r.wrap.b32 	%r1206, %r1205, %r1204, 3;
	shf.r.wrap.b32 	%r1207, %r1204, %r1205, 3;
	mov.b64 	%rd6471, {%r1207, %r1206};
$L__tmp1576:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 375 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd6403;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd6403, {scr,lo};}
	// end inline asm
$L__tmp1577:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 376 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r323;mov.b64 {hi,lo}, %rd6405;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd6405, {scr,lo};}
	// end inline asm
$L__tmp1578:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:377     state[20] = ROTR64( state[ 2],  2 );
	.loc	1 377 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1208,%dummy}, %rd6324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1209}, %rd6324;
	}
	shf.r.wrap.b32 	%r1210, %r1209, %r1208, 2;
	shf.r.wrap.b32 	%r1211, %r1208, %r1209, 2;
	mov.b64 	%rd6532, {%r1211, %r1210};
$L__tmp1579:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 378 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd6407;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd6407, {scr,lo};}
	// end inline asm
$L__tmp1580:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 379 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd6409;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd6409, {scr,lo};}
	// end inline asm
$L__tmp1581:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:169     asm ( "{"
	.loc	1 169 5, function_name $L__info_string8, inlined_at 1 380 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd6411;prmt.b32 scr, hi, lo, 0x2107;prmt.b32 lo, hi, lo, 0x6543;mov.b64 %rd6411, {scr,lo};}
	// end inline asm
$L__tmp1582:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:183       asm ( "{"
	.loc	1 183 7, function_name $L__info_string9, inlined_at 1 381 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd6413;prmt.b32 scr, lo, hi, 0x0765;prmt.b32 lo, lo, hi, 0x4321;mov.b64 %rd6413, {scr,lo};}
	// end inline asm
$L__tmp1583:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 382 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r326;mov.b64 {hi,lo}, %rd6415;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd6415, {scr,lo};}
	// end inline asm
$L__tmp1584:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 386 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd6417;                  mov.b32 mag, %r327;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd6417, {scr,lo};             }
	// end inline asm
$L__tmp1585:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 397 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r328;mov.b64 {hi,lo}, %rd6419;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd6419, {scr,lo};}
	// end inline asm
$L__tmp1586:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:398     state[24] = ROTL64( state[21],  2 );
	.loc	1 398 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1212}, %rd6319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1213,%dummy}, %rd6319;
	}
	shf.l.wrap.b32 	%r1214, %r1213, %r1212, 2;
	shf.l.wrap.b32 	%r1215, %r1212, %r1213, 2;
	mov.b64 	%rd6531, {%r1215, %r1214};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:399     state[21] = ROTR64( state[ 8], 9 );            // R9
	.loc	1 399 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1216,%dummy}, %rd6354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1217}, %rd6354;
	}
	shf.r.wrap.b32 	%r1218, %r1217, %r1216, 9;
	shf.r.wrap.b32 	%r1219, %r1216, %r1217, 9;
	mov.b64 	%rd6533, {%r1219, %r1218};
$L__tmp1587:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 400 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r329;mov.b64 {hi,lo}, %rd6421;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd6421, {scr,lo};}
	// end inline asm
$L__tmp1588:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:124     asm ("{"
	.loc	1 124 5, function_name $L__info_string11, inlined_at 1 405 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd6423;                  mov.b32 mag, %r331;                      shf.l.wrap.b32 scr, lo, hi, mag;      shf.l.wrap.b32 lo, hi, lo, mag;       mov.b64 %rd6423, {scr,lo};             }
	// end inline asm
$L__tmp1589:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 406 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd6425;                  mov.b32 mag, %r331;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd6425, {scr,lo};             }
	// end inline asm
$L__tmp1590:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 414 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd6427;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd6427, {scr,lo};}
	// end inline asm
$L__tmp1591:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 415 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r333;mov.b64 {hi,lo}, %rd6429;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd6429, {scr,lo};}
	// end inline asm
$L__tmp1592:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 416 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r334;mov.b64 {hi,lo}, %rd6431;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd6431, {scr,lo};}
	// end inline asm
$L__tmp1593:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:417     state[11] = ROTL64( state[ 7],  6 );
	.loc	1 417 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1220}, %rd6329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1221,%dummy}, %rd6329;
	}
	shf.l.wrap.b32 	%r1222, %r1221, %r1220, 6;
	shf.l.wrap.b32 	%r1223, %r1220, %r1221, 6;
	mov.b64 	%rd6493, {%r1223, %r1222};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:418     state[ 7] = ROTL64( state[10],  3 );
	.loc	1 418 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1224}, %rd6284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1225,%dummy}, %rd6284;
	}
	shf.l.wrap.b32 	%r1226, %r1225, %r1224, 3;
	shf.l.wrap.b32 	%r1227, %r1224, %r1225, 3;
	mov.b64 	%rd6463, {%r1227, %r1226};
$L__tmp1594:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:199     asm ("{"
	.loc	1 199 5, function_name $L__info_string12, inlined_at 1 419 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd6433;shf.l.wrap.b32 scr, lo, hi, 1;shf.l.wrap.b32 lo, hi, lo, 1;mov.b64 %rd6433, {scr,lo};}
	// end inline asm
$L__tmp1595:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd6435, %rd6274;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6435;  mov.b64 {bh,bl}, %rd6399;  mov.b64 {ch,cl}, %rd6407;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6435, {ah,al};}
	// end inline asm
$L__tmp1596:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd6439, %rd6399;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6439;  mov.b64 {bh,bl}, %rd6407;  mov.b64 {ch,cl}, %rd6427;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6439, {ah,al};}
	// end inline asm
$L__tmp1597:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6407;  mov.b64 {bh,bl}, %rd6427;  mov.b64 {ch,cl}, %rd6419;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6407, {ah,al};}
	// end inline asm
$L__tmp1598:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6427;  mov.b64 {bh,bl}, %rd6419;  mov.b64 {ch,cl}, %rd6274;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6427, {ah,al};}
	// end inline asm
$L__tmp1599:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6419;  mov.b64 {bh,bl}, %rd6274;  mov.b64 {ch,cl}, %rd6399;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6419, {ah,al};}
	// end inline asm
$L__tmp1600:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd6455, %rd6425;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6455;  mov.b64 {bh,bl}, %rd6401;  mov.b64 {ch,cl}, %rd6463;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6455, {ah,al};}
	// end inline asm
$L__tmp1601:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd6459, %rd6401;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6459;  mov.b64 {bh,bl}, %rd6463;  mov.b64 {ch,cl}, %rd6421;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6459, {ah,al};}
	// end inline asm
$L__tmp1602:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6463;  mov.b64 {bh,bl}, %rd6421;  mov.b64 {ch,cl}, %rd6471;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6463, {ah,al};}
	// end inline asm
$L__tmp1603:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6421;  mov.b64 {bh,bl}, %rd6471;  mov.b64 {ch,cl}, %rd6425;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6421, {ah,al};}
	// end inline asm
$L__tmp1604:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6471;  mov.b64 {bh,bl}, %rd6425;  mov.b64 {ch,cl}, %rd6401;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6471, {ah,al};}
	// end inline asm
$L__tmp1605:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd6475, %rd6433;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6475;  mov.b64 {bh,bl}, %rd6493;  mov.b64 {ch,cl}, %rd6409;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6475, {ah,al};}
	// end inline asm
$L__tmp1606:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd6479, %rd6493;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6479;  mov.b64 {bh,bl}, %rd6409;  mov.b64 {ch,cl}, %rd6411;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6479, {ah,al};}
	// end inline asm
$L__tmp1607:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6409;  mov.b64 {bh,bl}, %rd6411;  mov.b64 {ch,cl}, %rd6405;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6409, {ah,al};}
	// end inline asm
$L__tmp1608:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6411;  mov.b64 {bh,bl}, %rd6405;  mov.b64 {ch,cl}, %rd6433;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6411, {ah,al};}
	// end inline asm
$L__tmp1609:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6405;  mov.b64 {bh,bl}, %rd6433;  mov.b64 {ch,cl}, %rd6493;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6405, {ah,al};}
	// end inline asm
$L__tmp1610:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd6495, %rd6417;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6495;  mov.b64 {bh,bl}, %rd6423;  mov.b64 {ch,cl}, %rd6431;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6495, {ah,al};}
	// end inline asm
$L__tmp1611:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd6499, %rd6423;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6499;  mov.b64 {bh,bl}, %rd6431;  mov.b64 {ch,cl}, %rd6429;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6499, {ah,al};}
	// end inline asm
$L__tmp1612:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6431;  mov.b64 {bh,bl}, %rd6429;  mov.b64 {ch,cl}, %rd6413;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6431, {ah,al};}
	// end inline asm
$L__tmp1613:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6429;  mov.b64 {bh,bl}, %rd6413;  mov.b64 {ch,cl}, %rd6417;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6429, {ah,al};}
	// end inline asm
$L__tmp1614:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6413;  mov.b64 {bh,bl}, %rd6417;  mov.b64 {ch,cl}, %rd6423;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6413, {ah,al};}
	// end inline asm
$L__tmp1615:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd6515, %rd6532;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6515;  mov.b64 {bh,bl}, %rd6533;  mov.b64 {ch,cl}, %rd6403;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6515, {ah,al};}
	// end inline asm
$L__tmp1616:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd6519, %rd6533;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6519;  mov.b64 {bh,bl}, %rd6403;  mov.b64 {ch,cl}, %rd6415;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6519, {ah,al};}
	// end inline asm
$L__tmp1617:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6403;  mov.b64 {bh,bl}, %rd6415;  mov.b64 {ch,cl}, %rd6531;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6403, {ah,al};}
	// end inline asm
$L__tmp1618:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6415;  mov.b64 {bh,bl}, %rd6531;  mov.b64 {ch,cl}, %rd6532;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6415, {ah,al};}
	// end inline asm
$L__tmp1619:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6531;  mov.b64 {bh,bl}, %rd6532;  mov.b64 {ch,cl}, %rd6533;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6531, {ah,al};}
	// end inline asm
$L__tmp1620:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:437     state[0] = state[0] ^ RClocal[i];
	.loc	1 437 5, function_name $L__info_string0, inlined_at 1 475 7
	xor.b64  	%rd6596, %rd6435, -9223372034707259263;
$L__tmp1621:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd6538, %rd6596;
	// begin inline asm
	  xor.b64 %rd6538, %rd6538, %rd6455;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6538, %rd6538, %rd6475;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6538, %rd6538, %rd6495;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6538, %rd6538, %rd6515;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd6550, %rd6439;
	// begin inline asm
	  xor.b64 %rd6550, %rd6550, %rd6459;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6550, %rd6550, %rd6479;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6550, %rd6550, %rd6499;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6550, %rd6550, %rd6519;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd6562, %rd6407;
	// begin inline asm
	  xor.b64 %rd6562, %rd6562, %rd6463;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6562, %rd6562, %rd6409;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6562, %rd6562, %rd6431;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6562, %rd6562, %rd6403;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd6574, %rd6427;
	// begin inline asm
	  xor.b64 %rd6574, %rd6574, %rd6421;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6574, %rd6574, %rd6411;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6574, %rd6574, %rd6429;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6574, %rd6574, %rd6415;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd6586, %rd6419;
	// begin inline asm
	  xor.b64 %rd6586, %rd6586, %rd6471;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6586, %rd6586, %rd6405;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6586, %rd6586, %rd6413;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6586, %rd6586, %rd6531;
	// end inline asm
$L__tmp1622:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1228}, %rd6550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1229,%dummy}, %rd6550;
	}
	shf.l.wrap.b32 	%r1230, %r1229, %r1228, 1;
	shf.l.wrap.b32 	%r1231, %r1228, %r1229, 1;
	mov.b64 	%rd6617, {%r1231, %r1230};
$L__tmp1623:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd6595, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6595, %rd6596, %rd6617;  xor.b64 %rd6595, %rd6595, %rd6586;}
	// end inline asm
$L__tmp1624:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd6744, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6744, %rd6455, %rd6617;  xor.b64 %rd6744, %rd6744, %rd6586;}
	// end inline asm
$L__tmp1625:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd6605, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6605, %rd6475, %rd6617;  xor.b64 %rd6605, %rd6605, %rd6586;}
	// end inline asm
$L__tmp1626:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd6736, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6736, %rd6495, %rd6617;  xor.b64 %rd6736, %rd6736, %rd6586;}
	// end inline asm
$L__tmp1627:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd6726, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6726, %rd6515, %rd6617;  xor.b64 %rd6726, %rd6726, %rd6586;}
	// end inline asm
$L__tmp1628:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1232}, %rd6562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1233,%dummy}, %rd6562;
	}
	shf.l.wrap.b32 	%r1234, %r1233, %r1232, 1;
	shf.l.wrap.b32 	%r1235, %r1232, %r1233, 1;
	mov.b64 	%rd6642, {%r1235, %r1234};
$L__tmp1629:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd6754, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6754, %rd6439, %rd6642;  xor.b64 %rd6754, %rd6754, %rd6538;}
	// end inline asm
$L__tmp1630:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd6720, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6720, %rd6459, %rd6642;  xor.b64 %rd6720, %rd6720, %rd6538;}
	// end inline asm
$L__tmp1631:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd6752, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6752, %rd6479, %rd6642;  xor.b64 %rd6752, %rd6752, %rd6538;}
	// end inline asm
$L__tmp1632:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd6742, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6742, %rd6499, %rd6642;  xor.b64 %rd6742, %rd6742, %rd6538;}
	// end inline asm
$L__tmp1633:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd6640, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6640, %rd6519, %rd6642;  xor.b64 %rd6640, %rd6640, %rd6538;}
	// end inline asm
$L__tmp1634:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1236}, %rd6574;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1237,%dummy}, %rd6574;
	}
	shf.l.wrap.b32 	%r1238, %r1237, %r1236, 1;
	shf.l.wrap.b32 	%r1239, %r1236, %r1237, 1;
	mov.b64 	%rd6667, {%r1239, %r1238};
$L__tmp1635:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd6645, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6645, %rd6407, %rd6667;  xor.b64 %rd6645, %rd6645, %rd6550;}
	// end inline asm
$L__tmp1636:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd6650, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6650, %rd6463, %rd6667;  xor.b64 %rd6650, %rd6650, %rd6550;}
	// end inline asm
$L__tmp1637:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd6728, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6728, %rd6409, %rd6667;  xor.b64 %rd6728, %rd6728, %rd6550;}
	// end inline asm
$L__tmp1638:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd6750, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6750, %rd6431, %rd6667;  xor.b64 %rd6750, %rd6750, %rd6550;}
	// end inline asm
$L__tmp1639:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd6665, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6665, %rd6403, %rd6667;  xor.b64 %rd6665, %rd6665, %rd6550;}
	// end inline asm
$L__tmp1640:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1240}, %rd6586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1241,%dummy}, %rd6586;
	}
	shf.l.wrap.b32 	%r1242, %r1241, %r1240, 1;
	shf.l.wrap.b32 	%r1243, %r1240, %r1241, 1;
	mov.b64 	%rd6692, {%r1243, %r1242};
$L__tmp1641:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd6746, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6746, %rd6427, %rd6692;  xor.b64 %rd6746, %rd6746, %rd6562;}
	// end inline asm
$L__tmp1642:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd6675, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6675, %rd6421, %rd6692;  xor.b64 %rd6675, %rd6675, %rd6562;}
	// end inline asm
$L__tmp1643:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd6730, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6730, %rd6411, %rd6692;  xor.b64 %rd6730, %rd6730, %rd6562;}
	// end inline asm
$L__tmp1644:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd6748, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6748, %rd6429, %rd6692;  xor.b64 %rd6748, %rd6748, %rd6562;}
	// end inline asm
$L__tmp1645:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd6734, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6734, %rd6415, %rd6692;  xor.b64 %rd6734, %rd6734, %rd6562;}
	// end inline asm
$L__tmp1646:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1244}, %rd6538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1245,%dummy}, %rd6538;
	}
	shf.l.wrap.b32 	%r1246, %r1245, %r1244, 1;
	shf.l.wrap.b32 	%r1247, %r1244, %r1245, 1;
	mov.b64 	%rd6717, {%r1247, %r1246};
$L__tmp1647:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd6738, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6738, %rd6419, %rd6717;  xor.b64 %rd6738, %rd6738, %rd6574;}
	// end inline asm
$L__tmp1648:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd6722, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6722, %rd6471, %rd6717;  xor.b64 %rd6722, %rd6722, %rd6574;}
	// end inline asm
$L__tmp1649:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd6724, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6724, %rd6405, %rd6717;  xor.b64 %rd6724, %rd6724, %rd6574;}
	// end inline asm
$L__tmp1650:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd6732, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6732, %rd6413, %rd6717;  xor.b64 %rd6732, %rd6732, %rd6574;}
	// end inline asm
$L__tmp1651:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd6740, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6740, %rd6531, %rd6717;  xor.b64 %rd6740, %rd6740, %rd6574;}
	// end inline asm
$L__tmp1652:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 372 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd6720;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd6720, {scr,lo};}
	// end inline asm
$L__tmp1653:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 373 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd6722;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd6722, {scr,lo};}
	// end inline asm
$L__tmp1654:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:374     state[ 9] = ROTR64( state[22],  3 );
	.loc	1 374 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1248,%dummy}, %rd6665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1249}, %rd6665;
	}
	shf.r.wrap.b32 	%r1250, %r1249, %r1248, 3;
	shf.r.wrap.b32 	%r1251, %r1248, %r1249, 3;
	mov.b64 	%rd6792, {%r1251, %r1250};
$L__tmp1655:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 375 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd6724;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd6724, {scr,lo};}
	// end inline asm
$L__tmp1656:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 376 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r323;mov.b64 {hi,lo}, %rd6726;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd6726, {scr,lo};}
	// end inline asm
$L__tmp1657:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:377     state[20] = ROTR64( state[ 2],  2 );
	.loc	1 377 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1252,%dummy}, %rd6645;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1253}, %rd6645;
	}
	shf.r.wrap.b32 	%r1254, %r1253, %r1252, 2;
	shf.r.wrap.b32 	%r1255, %r1252, %r1253, 2;
	mov.b64 	%rd6853, {%r1255, %r1254};
$L__tmp1658:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 378 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd6728;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd6728, {scr,lo};}
	// end inline asm
$L__tmp1659:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 379 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd6730;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd6730, {scr,lo};}
	// end inline asm
$L__tmp1660:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:169     asm ( "{"
	.loc	1 169 5, function_name $L__info_string8, inlined_at 1 380 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd6732;prmt.b32 scr, hi, lo, 0x2107;prmt.b32 lo, hi, lo, 0x6543;mov.b64 %rd6732, {scr,lo};}
	// end inline asm
$L__tmp1661:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:183       asm ( "{"
	.loc	1 183 7, function_name $L__info_string9, inlined_at 1 381 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd6734;prmt.b32 scr, lo, hi, 0x0765;prmt.b32 lo, lo, hi, 0x4321;mov.b64 %rd6734, {scr,lo};}
	// end inline asm
$L__tmp1662:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 382 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r326;mov.b64 {hi,lo}, %rd6736;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd6736, {scr,lo};}
	// end inline asm
$L__tmp1663:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 386 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd6738;                  mov.b32 mag, %r327;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd6738, {scr,lo};             }
	// end inline asm
$L__tmp1664:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 397 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r328;mov.b64 {hi,lo}, %rd6740;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd6740, {scr,lo};}
	// end inline asm
$L__tmp1665:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:398     state[24] = ROTL64( state[21],  2 );
	.loc	1 398 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1256}, %rd6640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1257,%dummy}, %rd6640;
	}
	shf.l.wrap.b32 	%r1258, %r1257, %r1256, 2;
	shf.l.wrap.b32 	%r1259, %r1256, %r1257, 2;
	mov.b64 	%rd6852, {%r1259, %r1258};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:399     state[21] = ROTR64( state[ 8], 9 );            // R9
	.loc	1 399 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1260,%dummy}, %rd6675;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1261}, %rd6675;
	}
	shf.r.wrap.b32 	%r1262, %r1261, %r1260, 9;
	shf.r.wrap.b32 	%r1263, %r1260, %r1261, 9;
	mov.b64 	%rd6854, {%r1263, %r1262};
$L__tmp1666:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 400 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r329;mov.b64 {hi,lo}, %rd6742;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd6742, {scr,lo};}
	// end inline asm
$L__tmp1667:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:124     asm ("{"
	.loc	1 124 5, function_name $L__info_string11, inlined_at 1 405 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd6744;                  mov.b32 mag, %r331;                      shf.l.wrap.b32 scr, lo, hi, mag;      shf.l.wrap.b32 lo, hi, lo, mag;       mov.b64 %rd6744, {scr,lo};             }
	// end inline asm
$L__tmp1668:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 406 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd6746;                  mov.b32 mag, %r331;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd6746, {scr,lo};             }
	// end inline asm
$L__tmp1669:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 414 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd6748;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd6748, {scr,lo};}
	// end inline asm
$L__tmp1670:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 415 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r333;mov.b64 {hi,lo}, %rd6750;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd6750, {scr,lo};}
	// end inline asm
$L__tmp1671:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 416 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r334;mov.b64 {hi,lo}, %rd6752;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd6752, {scr,lo};}
	// end inline asm
$L__tmp1672:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:417     state[11] = ROTL64( state[ 7],  6 );
	.loc	1 417 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1264}, %rd6650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1265,%dummy}, %rd6650;
	}
	shf.l.wrap.b32 	%r1266, %r1265, %r1264, 6;
	shf.l.wrap.b32 	%r1267, %r1264, %r1265, 6;
	mov.b64 	%rd6814, {%r1267, %r1266};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:418     state[ 7] = ROTL64( state[10],  3 );
	.loc	1 418 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1268}, %rd6605;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1269,%dummy}, %rd6605;
	}
	shf.l.wrap.b32 	%r1270, %r1269, %r1268, 3;
	shf.l.wrap.b32 	%r1271, %r1268, %r1269, 3;
	mov.b64 	%rd6784, {%r1271, %r1270};
$L__tmp1673:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:199     asm ("{"
	.loc	1 199 5, function_name $L__info_string12, inlined_at 1 419 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd6754;shf.l.wrap.b32 scr, lo, hi, 1;shf.l.wrap.b32 lo, hi, lo, 1;mov.b64 %rd6754, {scr,lo};}
	// end inline asm
$L__tmp1674:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd6756, %rd6595;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6756;  mov.b64 {bh,bl}, %rd6720;  mov.b64 {ch,cl}, %rd6728;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6756, {ah,al};}
	// end inline asm
$L__tmp1675:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd6760, %rd6720;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6760;  mov.b64 {bh,bl}, %rd6728;  mov.b64 {ch,cl}, %rd6748;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6760, {ah,al};}
	// end inline asm
$L__tmp1676:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6728;  mov.b64 {bh,bl}, %rd6748;  mov.b64 {ch,cl}, %rd6740;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6728, {ah,al};}
	// end inline asm
$L__tmp1677:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6748;  mov.b64 {bh,bl}, %rd6740;  mov.b64 {ch,cl}, %rd6595;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6748, {ah,al};}
	// end inline asm
$L__tmp1678:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6740;  mov.b64 {bh,bl}, %rd6595;  mov.b64 {ch,cl}, %rd6720;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6740, {ah,al};}
	// end inline asm
$L__tmp1679:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd6776, %rd6746;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6776;  mov.b64 {bh,bl}, %rd6722;  mov.b64 {ch,cl}, %rd6784;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6776, {ah,al};}
	// end inline asm
$L__tmp1680:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd6780, %rd6722;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6780;  mov.b64 {bh,bl}, %rd6784;  mov.b64 {ch,cl}, %rd6742;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6780, {ah,al};}
	// end inline asm
$L__tmp1681:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6784;  mov.b64 {bh,bl}, %rd6742;  mov.b64 {ch,cl}, %rd6792;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6784, {ah,al};}
	// end inline asm
$L__tmp1682:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6742;  mov.b64 {bh,bl}, %rd6792;  mov.b64 {ch,cl}, %rd6746;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6742, {ah,al};}
	// end inline asm
$L__tmp1683:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6792;  mov.b64 {bh,bl}, %rd6746;  mov.b64 {ch,cl}, %rd6722;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6792, {ah,al};}
	// end inline asm
$L__tmp1684:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd6796, %rd6754;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6796;  mov.b64 {bh,bl}, %rd6814;  mov.b64 {ch,cl}, %rd6730;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6796, {ah,al};}
	// end inline asm
$L__tmp1685:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd6800, %rd6814;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6800;  mov.b64 {bh,bl}, %rd6730;  mov.b64 {ch,cl}, %rd6732;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6800, {ah,al};}
	// end inline asm
$L__tmp1686:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6730;  mov.b64 {bh,bl}, %rd6732;  mov.b64 {ch,cl}, %rd6726;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6730, {ah,al};}
	// end inline asm
$L__tmp1687:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6732;  mov.b64 {bh,bl}, %rd6726;  mov.b64 {ch,cl}, %rd6754;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6732, {ah,al};}
	// end inline asm
$L__tmp1688:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6726;  mov.b64 {bh,bl}, %rd6754;  mov.b64 {ch,cl}, %rd6814;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6726, {ah,al};}
	// end inline asm
$L__tmp1689:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd6816, %rd6738;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6816;  mov.b64 {bh,bl}, %rd6744;  mov.b64 {ch,cl}, %rd6752;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6816, {ah,al};}
	// end inline asm
$L__tmp1690:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd6820, %rd6744;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6820;  mov.b64 {bh,bl}, %rd6752;  mov.b64 {ch,cl}, %rd6750;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6820, {ah,al};}
	// end inline asm
$L__tmp1691:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6752;  mov.b64 {bh,bl}, %rd6750;  mov.b64 {ch,cl}, %rd6734;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6752, {ah,al};}
	// end inline asm
$L__tmp1692:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6750;  mov.b64 {bh,bl}, %rd6734;  mov.b64 {ch,cl}, %rd6738;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6750, {ah,al};}
	// end inline asm
$L__tmp1693:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6734;  mov.b64 {bh,bl}, %rd6738;  mov.b64 {ch,cl}, %rd6744;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6734, {ah,al};}
	// end inline asm
$L__tmp1694:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd6836, %rd6853;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6836;  mov.b64 {bh,bl}, %rd6854;  mov.b64 {ch,cl}, %rd6724;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6836, {ah,al};}
	// end inline asm
$L__tmp1695:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd6840, %rd6854;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6840;  mov.b64 {bh,bl}, %rd6724;  mov.b64 {ch,cl}, %rd6736;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6840, {ah,al};}
	// end inline asm
$L__tmp1696:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6724;  mov.b64 {bh,bl}, %rd6736;  mov.b64 {ch,cl}, %rd6852;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6724, {ah,al};}
	// end inline asm
$L__tmp1697:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6736;  mov.b64 {bh,bl}, %rd6852;  mov.b64 {ch,cl}, %rd6853;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6736, {ah,al};}
	// end inline asm
$L__tmp1698:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd6852;  mov.b64 {bh,bl}, %rd6853;  mov.b64 {ch,cl}, %rd6854;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd6852, {ah,al};}
	// end inline asm
$L__tmp1699:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:437     state[0] = state[0] ^ RClocal[i];
	.loc	1 437 5, function_name $L__info_string0, inlined_at 1 475 7
	xor.b64  	%rd6917, %rd6756, -9223372036854742912;
$L__tmp1700:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd6859, %rd6917;
	// begin inline asm
	  xor.b64 %rd6859, %rd6859, %rd6776;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6859, %rd6859, %rd6796;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6859, %rd6859, %rd6816;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6859, %rd6859, %rd6836;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd6871, %rd6760;
	// begin inline asm
	  xor.b64 %rd6871, %rd6871, %rd6780;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6871, %rd6871, %rd6800;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6871, %rd6871, %rd6820;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6871, %rd6871, %rd6840;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd6883, %rd6728;
	// begin inline asm
	  xor.b64 %rd6883, %rd6883, %rd6784;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6883, %rd6883, %rd6730;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6883, %rd6883, %rd6752;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6883, %rd6883, %rd6724;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd6895, %rd6748;
	// begin inline asm
	  xor.b64 %rd6895, %rd6895, %rd6742;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6895, %rd6895, %rd6732;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6895, %rd6895, %rd6750;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6895, %rd6895, %rd6736;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 345 24
	mov.u64 	%rd6907, %rd6740;
	// begin inline asm
	  xor.b64 %rd6907, %rd6907, %rd6792;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6907, %rd6907, %rd6726;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6907, %rd6907, %rd6734;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 345 24
	// begin inline asm
	  xor.b64 %rd6907, %rd6907, %rd6852;
	// end inline asm
$L__tmp1701:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1272}, %rd6871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1273,%dummy}, %rd6871;
	}
	shf.l.wrap.b32 	%r1274, %r1273, %r1272, 1;
	shf.l.wrap.b32 	%r1275, %r1272, %r1273, 1;
	mov.b64 	%rd6938, {%r1275, %r1274};
$L__tmp1702:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd6916, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6916, %rd6917, %rd6938;  xor.b64 %rd6916, %rd6916, %rd6907;}
	// end inline asm
$L__tmp1703:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd7065, %rd7260;
	// begin inline asm
	{  xor.b64 %rd7065, %rd6776, %rd6938;  xor.b64 %rd7065, %rd7065, %rd6907;}
	// end inline asm
$L__tmp1704:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd6926, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6926, %rd6796, %rd6938;  xor.b64 %rd6926, %rd6926, %rd6907;}
	// end inline asm
$L__tmp1705:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd7057, %rd7260;
	// begin inline asm
	{  xor.b64 %rd7057, %rd6816, %rd6938;  xor.b64 %rd7057, %rd7057, %rd6907;}
	// end inline asm
$L__tmp1706:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd7047, %rd7260;
	// begin inline asm
	{  xor.b64 %rd7047, %rd6836, %rd6938;  xor.b64 %rd7047, %rd7047, %rd6907;}
	// end inline asm
$L__tmp1707:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1276}, %rd6883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1277,%dummy}, %rd6883;
	}
	shf.l.wrap.b32 	%r1278, %r1277, %r1276, 1;
	shf.l.wrap.b32 	%r1279, %r1276, %r1277, 1;
	mov.b64 	%rd6963, {%r1279, %r1278};
$L__tmp1708:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd7075, %rd7260;
	// begin inline asm
	{  xor.b64 %rd7075, %rd6760, %rd6963;  xor.b64 %rd7075, %rd7075, %rd6859;}
	// end inline asm
$L__tmp1709:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd7041, %rd7260;
	// begin inline asm
	{  xor.b64 %rd7041, %rd6780, %rd6963;  xor.b64 %rd7041, %rd7041, %rd6859;}
	// end inline asm
$L__tmp1710:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd7073, %rd7260;
	// begin inline asm
	{  xor.b64 %rd7073, %rd6800, %rd6963;  xor.b64 %rd7073, %rd7073, %rd6859;}
	// end inline asm
$L__tmp1711:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd7063, %rd7260;
	// begin inline asm
	{  xor.b64 %rd7063, %rd6820, %rd6963;  xor.b64 %rd7063, %rd7063, %rd6859;}
	// end inline asm
$L__tmp1712:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd6961, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6961, %rd6840, %rd6963;  xor.b64 %rd6961, %rd6961, %rd6859;}
	// end inline asm
$L__tmp1713:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1280}, %rd6895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1281,%dummy}, %rd6895;
	}
	shf.l.wrap.b32 	%r1282, %r1281, %r1280, 1;
	shf.l.wrap.b32 	%r1283, %r1280, %r1281, 1;
	mov.b64 	%rd6988, {%r1283, %r1282};
$L__tmp1714:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd6966, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6966, %rd6728, %rd6988;  xor.b64 %rd6966, %rd6966, %rd6871;}
	// end inline asm
$L__tmp1715:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd6971, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6971, %rd6784, %rd6988;  xor.b64 %rd6971, %rd6971, %rd6871;}
	// end inline asm
$L__tmp1716:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd7049, %rd7260;
	// begin inline asm
	{  xor.b64 %rd7049, %rd6730, %rd6988;  xor.b64 %rd7049, %rd7049, %rd6871;}
	// end inline asm
$L__tmp1717:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd7071, %rd7260;
	// begin inline asm
	{  xor.b64 %rd7071, %rd6752, %rd6988;  xor.b64 %rd7071, %rd7071, %rd6871;}
	// end inline asm
$L__tmp1718:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd6986, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6986, %rd6724, %rd6988;  xor.b64 %rd6986, %rd6986, %rd6871;}
	// end inline asm
$L__tmp1719:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1284}, %rd6907;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1285,%dummy}, %rd6907;
	}
	shf.l.wrap.b32 	%r1286, %r1285, %r1284, 1;
	shf.l.wrap.b32 	%r1287, %r1284, %r1285, 1;
	mov.b64 	%rd7013, {%r1287, %r1286};
$L__tmp1720:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd7067, %rd7260;
	// begin inline asm
	{  xor.b64 %rd7067, %rd6748, %rd7013;  xor.b64 %rd7067, %rd7067, %rd6883;}
	// end inline asm
$L__tmp1721:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd6996, %rd7260;
	// begin inline asm
	{  xor.b64 %rd6996, %rd6742, %rd7013;  xor.b64 %rd6996, %rd6996, %rd6883;}
	// end inline asm
$L__tmp1722:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd7051, %rd7260;
	// begin inline asm
	{  xor.b64 %rd7051, %rd6732, %rd7013;  xor.b64 %rd7051, %rd7051, %rd6883;}
	// end inline asm
$L__tmp1723:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd7069, %rd7260;
	// begin inline asm
	{  xor.b64 %rd7069, %rd6750, %rd7013;  xor.b64 %rd7069, %rd7069, %rd6883;}
	// end inline asm
$L__tmp1724:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd7055, %rd7260;
	// begin inline asm
	{  xor.b64 %rd7055, %rd6736, %rd7013;  xor.b64 %rd7055, %rd7055, %rd6883;}
	// end inline asm
$L__tmp1725:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:351       D[x] = ROTL64(C[(x + 2) % 5], 1);
	.loc	1 351 7, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1288}, %rd6859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1289,%dummy}, %rd6859;
	}
	shf.l.wrap.b32 	%r1290, %r1289, %r1288, 1;
	shf.l.wrap.b32 	%r1291, %r1288, %r1289, 1;
	mov.b64 	%rd7038, {%r1291, %r1290};
$L__tmp1726:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 352 23
	mov.u64 	%rd7059, %rd7260;
	// begin inline asm
	{  xor.b64 %rd7059, %rd6740, %rd7038;  xor.b64 %rd7059, %rd7059, %rd6895;}
	// end inline asm
$L__tmp1727:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 353 23
	mov.u64 	%rd7043, %rd7260;
	// begin inline asm
	{  xor.b64 %rd7043, %rd6792, %rd7038;  xor.b64 %rd7043, %rd7043, %rd6895;}
	// end inline asm
$L__tmp1728:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 354 23
	mov.u64 	%rd7045, %rd7260;
	// begin inline asm
	{  xor.b64 %rd7045, %rd6726, %rd7038;  xor.b64 %rd7045, %rd7045, %rd6895;}
	// end inline asm
$L__tmp1729:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 355 23
	mov.u64 	%rd7053, %rd7260;
	// begin inline asm
	{  xor.b64 %rd7053, %rd6734, %rd7038;  xor.b64 %rd7053, %rd7053, %rd6895;}
	// end inline asm
$L__tmp1730:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 356 23
	mov.u64 	%rd7061, %rd7260;
	// begin inline asm
	{  xor.b64 %rd7061, %rd6852, %rd7038;  xor.b64 %rd7061, %rd7061, %rd6895;}
	// end inline asm
$L__tmp1731:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 372 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd7041;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd7041, {scr,lo};}
	// end inline asm
$L__tmp1732:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 373 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd7043;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd7043, {scr,lo};}
	// end inline asm
$L__tmp1733:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:374     state[ 9] = ROTR64( state[22],  3 );
	.loc	1 374 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1292,%dummy}, %rd6986;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1293}, %rd6986;
	}
	shf.r.wrap.b32 	%r1294, %r1293, %r1292, 3;
	shf.r.wrap.b32 	%r1295, %r1292, %r1293, 3;
	mov.b64 	%rd7113, {%r1295, %r1294};
$L__tmp1734:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 375 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd7045;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd7045, {scr,lo};}
	// end inline asm
$L__tmp1735:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 376 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r323;mov.b64 {hi,lo}, %rd7047;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd7047, {scr,lo};}
	// end inline asm
$L__tmp1736:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:377     state[20] = ROTR64( state[ 2],  2 );
	.loc	1 377 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1296,%dummy}, %rd6966;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1297}, %rd6966;
	}
	shf.r.wrap.b32 	%r1298, %r1297, %r1296, 2;
	shf.r.wrap.b32 	%r1299, %r1296, %r1297, 2;
	mov.b64 	%rd7174, {%r1299, %r1298};
$L__tmp1737:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 378 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd7049;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd7049, {scr,lo};}
	// end inline asm
$L__tmp1738:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 379 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r325;mov.b64 {hi,lo}, %rd7051;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd7051, {scr,lo};}
	// end inline asm
$L__tmp1739:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:169     asm ( "{"
	.loc	1 169 5, function_name $L__info_string8, inlined_at 1 380 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd7053;prmt.b32 scr, hi, lo, 0x2107;prmt.b32 lo, hi, lo, 0x6543;mov.b64 %rd7053, {scr,lo};}
	// end inline asm
$L__tmp1740:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:183       asm ( "{"
	.loc	1 183 7, function_name $L__info_string9, inlined_at 1 381 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd7055;prmt.b32 scr, lo, hi, 0x0765;prmt.b32 lo, lo, hi, 0x4321;mov.b64 %rd7055, {scr,lo};}
	// end inline asm
$L__tmp1741:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 382 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r326;mov.b64 {hi,lo}, %rd7057;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd7057, {scr,lo};}
	// end inline asm
$L__tmp1742:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 386 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd7059;                  mov.b32 mag, %r327;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd7059, {scr,lo};             }
	// end inline asm
$L__tmp1743:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 397 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r328;mov.b64 {hi,lo}, %rd7061;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd7061, {scr,lo};}
	// end inline asm
$L__tmp1744:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:398     state[24] = ROTL64( state[21],  2 );
	.loc	1 398 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1300}, %rd6961;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1301,%dummy}, %rd6961;
	}
	shf.l.wrap.b32 	%r1302, %r1301, %r1300, 2;
	shf.l.wrap.b32 	%r1303, %r1300, %r1301, 2;
	mov.b64 	%rd7173, {%r1303, %r1302};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:399     state[21] = ROTR64( state[ 8], 9 );            // R9
	.loc	1 399 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1304,%dummy}, %rd6996;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1305}, %rd6996;
	}
	shf.r.wrap.b32 	%r1306, %r1305, %r1304, 9;
	shf.r.wrap.b32 	%r1307, %r1304, %r1305, 9;
	mov.b64 	%rd7175, {%r1307, %r1306};
$L__tmp1745:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 400 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r329;mov.b64 {hi,lo}, %rd7063;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd7063, {scr,lo};}
	// end inline asm
$L__tmp1746:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:124     asm ("{"
	.loc	1 124 5, function_name $L__info_string11, inlined_at 1 405 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd7065;                  mov.b32 mag, %r331;                      shf.l.wrap.b32 scr, lo, hi, mag;      shf.l.wrap.b32 lo, hi, lo, mag;       mov.b64 %rd7065, {scr,lo};             }
	// end inline asm
$L__tmp1747:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:140     asm ("{"
	.loc	1 140 5, function_name $L__info_string10, inlined_at 1 406 21
	// begin inline asm
	{    .reg .b32 hi, lo, scr, mag;           mov.b64 {lo,hi}, %rd7067;                  mov.b32 mag, %r331;                      shf.r.wrap.b32 scr, hi, lo, mag;      shf.r.wrap.b32 lo, lo, hi, mag;       mov.b64 %rd7067, {scr,lo};             }
	// end inline asm
$L__tmp1748:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 414 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r332;mov.b64 {hi,lo}, %rd7069;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd7069, {scr,lo};}
	// end inline asm
$L__tmp1749:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 415 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r333;mov.b64 {hi,lo}, %rd7071;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd7071, {scr,lo};}
	// end inline asm
$L__tmp1750:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:84     asm ("{"
	.loc	1 84 5, function_name $L__info_string2, inlined_at 1 416 17
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r334;mov.b64 {hi,lo}, %rd7073;shf.l.wrap.b32 scr, lo, hi, mag;shf.l.wrap.b32 lo, hi, lo, mag;mov.b64 %rd7073, {scr,lo};}
	// end inline asm
$L__tmp1751:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:417     state[11] = ROTL64( state[ 7],  6 );
	.loc	1 417 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1308}, %rd6971;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1309,%dummy}, %rd6971;
	}
	shf.l.wrap.b32 	%r1310, %r1309, %r1308, 6;
	shf.l.wrap.b32 	%r1311, %r1308, %r1309, 6;
	mov.b64 	%rd7135, {%r1311, %r1310};

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:418     state[ 7] = ROTL64( state[10],  3 );
	.loc	1 418 5, function_name $L__info_string0, inlined_at 1 475 7
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1312}, %rd6926;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1313,%dummy}, %rd6926;
	}
	shf.l.wrap.b32 	%r1314, %r1313, %r1312, 3;
	shf.l.wrap.b32 	%r1315, %r1312, %r1313, 3;
	mov.b64 	%rd7105, {%r1315, %r1314};
$L__tmp1752:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:199     asm ("{"
	.loc	1 199 5, function_name $L__info_string12, inlined_at 1 419 17
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd7075;shf.l.wrap.b32 scr, lo, hi, 1;shf.l.wrap.b32 lo, hi, lo, 1;mov.b64 %rd7075, {scr,lo};}
	// end inline asm
$L__tmp1753:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd7077, %rd6916;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd7077;  mov.b64 {bh,bl}, %rd7041;  mov.b64 {ch,cl}, %rd7049;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd7077, {ah,al};}
	// end inline asm
$L__tmp1754:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd7189, %rd7041;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd7189;  mov.b64 {bh,bl}, %rd7049;  mov.b64 {ch,cl}, %rd7069;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd7189, {ah,al};}
	// end inline asm
$L__tmp1755:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd7049;  mov.b64 {bh,bl}, %rd7069;  mov.b64 {ch,cl}, %rd7061;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd7049, {ah,al};}
	// end inline asm
$L__tmp1756:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd7069;  mov.b64 {bh,bl}, %rd7061;  mov.b64 {ch,cl}, %rd6916;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd7069, {ah,al};}
	// end inline asm
$L__tmp1757:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd7061;  mov.b64 {bh,bl}, %rd6916;  mov.b64 {ch,cl}, %rd7041;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd7061, {ah,al};}
	// end inline asm
$L__tmp1758:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd7097, %rd7067;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd7097;  mov.b64 {bh,bl}, %rd7043;  mov.b64 {ch,cl}, %rd7105;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd7097, {ah,al};}
	// end inline asm
$L__tmp1759:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd7101, %rd7043;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd7101;  mov.b64 {bh,bl}, %rd7105;  mov.b64 {ch,cl}, %rd7063;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd7101, {ah,al};}
	// end inline asm
$L__tmp1760:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd7105;  mov.b64 {bh,bl}, %rd7063;  mov.b64 {ch,cl}, %rd7113;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd7105, {ah,al};}
	// end inline asm
$L__tmp1761:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd7063;  mov.b64 {bh,bl}, %rd7113;  mov.b64 {ch,cl}, %rd7067;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd7063, {ah,al};}
	// end inline asm
$L__tmp1762:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd7113;  mov.b64 {bh,bl}, %rd7067;  mov.b64 {ch,cl}, %rd7043;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd7113, {ah,al};}
	// end inline asm
$L__tmp1763:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd7117, %rd7075;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd7117;  mov.b64 {bh,bl}, %rd7135;  mov.b64 {ch,cl}, %rd7051;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd7117, {ah,al};}
	// end inline asm
$L__tmp1764:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd7121, %rd7135;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd7121;  mov.b64 {bh,bl}, %rd7051;  mov.b64 {ch,cl}, %rd7053;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd7121, {ah,al};}
	// end inline asm
$L__tmp1765:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd7051;  mov.b64 {bh,bl}, %rd7053;  mov.b64 {ch,cl}, %rd7047;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd7051, {ah,al};}
	// end inline asm
$L__tmp1766:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd7053;  mov.b64 {bh,bl}, %rd7047;  mov.b64 {ch,cl}, %rd7075;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd7053, {ah,al};}
	// end inline asm
$L__tmp1767:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd7047;  mov.b64 {bh,bl}, %rd7075;  mov.b64 {ch,cl}, %rd7135;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd7047, {ah,al};}
	// end inline asm
$L__tmp1768:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd7137, %rd7059;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd7137;  mov.b64 {bh,bl}, %rd7065;  mov.b64 {ch,cl}, %rd7073;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd7137, {ah,al};}
	// end inline asm
$L__tmp1769:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd7141, %rd7065;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd7141;  mov.b64 {bh,bl}, %rd7073;  mov.b64 {ch,cl}, %rd7071;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd7141, {ah,al};}
	// end inline asm
$L__tmp1770:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd7073;  mov.b64 {bh,bl}, %rd7071;  mov.b64 {ch,cl}, %rd7055;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd7073, {ah,al};}
	// end inline asm
$L__tmp1771:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd7071;  mov.b64 {bh,bl}, %rd7055;  mov.b64 {ch,cl}, %rd7059;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd7071, {ah,al};}
	// end inline asm
$L__tmp1772:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd7055;  mov.b64 {bh,bl}, %rd7059;  mov.b64 {ch,cl}, %rd7065;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd7055, {ah,al};}
	// end inline asm
$L__tmp1773:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 429 22
	mov.u64 	%rd7157, %rd7174;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd7157;  mov.b64 {bh,bl}, %rd7175;  mov.b64 {ch,cl}, %rd7045;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd7157, {ah,al};}
	// end inline asm
$L__tmp1774:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 430 22
	mov.u64 	%rd7161, %rd7175;
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd7161;  mov.b64 {bh,bl}, %rd7045;  mov.b64 {ch,cl}, %rd7057;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd7161, {ah,al};}
	// end inline asm
$L__tmp1775:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 431 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd7045;  mov.b64 {bh,bl}, %rd7057;  mov.b64 {ch,cl}, %rd7173;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd7045, {ah,al};}
	// end inline asm
$L__tmp1776:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 432 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd7057;  mov.b64 {bh,bl}, %rd7173;  mov.b64 {ch,cl}, %rd7174;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd7057, {ah,al};}
	// end inline asm
$L__tmp1777:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 433 22
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd7173;  mov.b64 {bh,bl}, %rd7174;  mov.b64 {ch,cl}, %rd7175;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd7173, {ah,al};}
	// end inline asm
$L__tmp1778:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:437     state[0] = state[0] ^ RClocal[i];
	.loc	1 437 5, function_name $L__info_string0, inlined_at 1 475 7
	xor.b64  	%rd7244, %rd7077, 2147483649;
$L__tmp1779:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:442     C[(x + 6) % 5 ] = xor5( state[x], state[x + 5], state[x + 10], state[x + 15], state[x + 20] );
	.loc	1 442 23, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 442 23
	mov.u64 	%rd7180, %rd7244;
	// begin inline asm
	  xor.b64 %rd7180, %rd7180, %rd7097;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 442 23
	// begin inline asm
	  xor.b64 %rd7180, %rd7180, %rd7117;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 442 23
	// begin inline asm
	  xor.b64 %rd7180, %rd7180, %rd7137;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 442 23
	// begin inline asm
	  xor.b64 %rd7180, %rd7180, %rd7157;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 442 23
	// begin inline asm
	  xor.b64 %rd7189, %rd7189, %rd7101;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 442 23
	// begin inline asm
	  xor.b64 %rd7189, %rd7189, %rd7121;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 442 23
	// begin inline asm
	  xor.b64 %rd7189, %rd7189, %rd7141;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 442 23
	// begin inline asm
	  xor.b64 %rd7189, %rd7189, %rd7161;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 442 23
	// begin inline asm
	  xor.b64 %rd7049, %rd7049, %rd7105;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 442 23
	// begin inline asm
	  xor.b64 %rd7049, %rd7049, %rd7051;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 442 23
	// begin inline asm
	  xor.b64 %rd7049, %rd7049, %rd7073;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 442 23
	// begin inline asm
	  xor.b64 %rd7049, %rd7049, %rd7045;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 442 23
	// begin inline asm
	  xor.b64 %rd7069, %rd7069, %rd7063;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 442 23
	// begin inline asm
	  xor.b64 %rd7069, %rd7069, %rd7053;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 442 23
	// begin inline asm
	  xor.b64 %rd7069, %rd7069, %rd7071;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 442 23
	// begin inline asm
	  xor.b64 %rd7069, %rd7069, %rd7057;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:113   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(b) );
	.loc	1 113 3, function_name $L__info_string6, inlined_at 1 442 23
	// begin inline asm
	  xor.b64 %rd7061, %rd7061, %rd7113;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:114   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(c) );
	.loc	1 114 3, function_name $L__info_string6, inlined_at 1 442 23
	// begin inline asm
	  xor.b64 %rd7061, %rd7061, %rd7047;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:115   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(d) );
	.loc	1 115 3, function_name $L__info_string6, inlined_at 1 442 23
	// begin inline asm
	  xor.b64 %rd7061, %rd7061, %rd7055;
	// end inline asm

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:116   asm( "  xor.b64 %0, %0, %1;" : "+l"(a) : "l"(e) );
	.loc	1 116 3, function_name $L__info_string6, inlined_at 1 442 23
	// begin inline asm
	  xor.b64 %rd7061, %rd7061, %rd7173;
	// end inline asm
$L__tmp1780:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:445   D[0] = ROTLby1(C[2] );
	.loc	1 445 10, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:199     asm ("{"
	.loc	1 199 5, function_name $L__info_string12, inlined_at 1 445 10
	mov.u64 	%rd7237, %rd7189;
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd7237;shf.l.wrap.b32 scr, lo, hi, 1;shf.l.wrap.b32 lo, hi, lo, 1;mov.b64 %rd7237, {scr,lo};}
	// end inline asm
$L__tmp1781:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:446   D[1] = ROTLby1(C[3] );
	.loc	1 446 10, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:199     asm ("{"
	.loc	1 199 5, function_name $L__info_string12, inlined_at 1 446 10
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd7049;shf.l.wrap.b32 scr, lo, hi, 1;shf.l.wrap.b32 lo, hi, lo, 1;mov.b64 %rd7049, {scr,lo};}
	// end inline asm
$L__tmp1782:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:447   D[2] = ROTLby1(C[4] );
	.loc	1 447 10, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:199     asm ("{"
	.loc	1 199 5, function_name $L__info_string12, inlined_at 1 447 10
	// begin inline asm
	{.reg .b32 hi, lo, scr;mov.b64 {hi,lo}, %rd7069;shf.l.wrap.b32 scr, lo, hi, 1;shf.l.wrap.b32 lo, hi, lo, 1;mov.b64 %rd7069, {scr,lo};}
	// end inline asm
$L__tmp1783:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:449   state[ 0] = xor3( state[ 0], D[0], C[0] );
	.loc	1 449 15, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 449 15
	mov.u64 	%rd7265, %rd7260;
	// begin inline asm
	{  xor.b64 %rd7265, %rd7244, %rd7237;  xor.b64 %rd7265, %rd7265, %rd7061;}
	// end inline asm
$L__tmp1784:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:450   state[ 6] = ROTR64asm(xor3( state[ 6], D[1], C[1] ), 20);
	.loc	1 450 25, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 450 25
	mov.u64 	%rd7253, %rd7260;
	// begin inline asm
	{  xor.b64 %rd7253, %rd7101, %rd7049;  xor.b64 %rd7253, %rd7253, %rd7180;}
	// end inline asm
$L__tmp1785:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:450   state[ 6] = ROTR64asm(xor3( state[ 6], D[1], C[1] ), 20);
	.loc	1 450 15, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:99     asm ("{"
	.loc	1 99 5, function_name $L__info_string1, inlined_at 1 450 15
	// begin inline asm
	{.reg .b32 hi, lo, mag, scr;mov.b32 mag, %r335;mov.b64 {hi,lo}, %rd7253;shf.r.wrap.b32 scr, hi, lo, mag;shf.r.wrap.b32 lo, lo, hi, mag;mov.b64 %rd7253, {scr,lo};}
	// end inline asm
$L__tmp1786:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:451   state[12] = ROTR64(xor3( state[12], D[2], C[2] ), 21);
	.loc	1 451 18, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 451 18
	mov.u64 	%rd7255, %rd7260;
	// begin inline asm
	{  xor.b64 %rd7255, %rd7051, %rd7069;  xor.b64 %rd7255, %rd7255, %rd7189;}
	// end inline asm
$L__tmp1787:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:451   state[12] = ROTR64(xor3( state[12], D[2], C[2] ), 21);
	.loc	1 451 18, function_name $L__info_string0, inlined_at 1 475 7
	shr.u64 	%rd7289, %rd7255, 21;
$L__tmp1788:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:451   state[12] = ROTR64(xor3( state[12], D[2], C[2] ), 21);
	.loc	1 451 62, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:227   asm( "{"
	.loc	1 227 3, function_name $L__info_string7, inlined_at 1 451 62
	// begin inline asm
	{  xor.b64 %rd7260, %rd7051, %rd7069;  xor.b64 %rd7260, %rd7260, %rd7189;}
	// end inline asm
$L__tmp1789:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:451   state[12] = ROTR64(xor3( state[12], D[2], C[2] ), 21);
	.loc	1 451 62, function_name $L__info_string0, inlined_at 1 475 7
	shl.b64 	%rd7290, %rd7260, 43;
	or.b64  	%rd7267, %rd7290, %rd7289;
$L__tmp1790:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:453   state[ 0] = lop3_0xD2( state[ 0], state[ 6], state[12] ) ^ 0x8000000080008008;    // was RC[23];
	.loc	1 453 15, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:239   asm( "{"
	.loc	1 239 3, function_name $L__info_string3, inlined_at 1 453 15
	// begin inline asm
	{  .reg .b32 ah, al, bh, bl, ch, cl;  mov.b64 {ah,al}, %rd7265;  mov.b64 {bh,bl}, %rd7253;  mov.b64 {ch,cl}, %rd7267;  lop3.b32 ah, ah, bh, ch, 0xD2;  lop3.b32 al, al, bl, cl, 0xD2;  mov.b64 %rd7265, {ah,al};}
	// end inline asm
$L__tmp1791:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:453   state[ 0] = lop3_0xD2( state[ 0], state[ 6], state[12] ) ^ 0x8000000080008008;    // was RC[23];
	.loc	1 453 15, function_name $L__info_string0, inlined_at 1 475 7
	xor.b64  	%rd7269, %rd7265, -9223372034707259384;
$L__tmp1792:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:455   return bswap_64( state[0] ) <= d_target;
	.loc	1 455 10, function_name $L__info_string0, inlined_at 1 475 7

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:70   asm( "{"
	.loc	1 70 3, function_name $L__info_string13, inlined_at 1 455 10
	// begin inline asm
	{  .reg .u32 oh, ol;  mov.b64 {oh,ol}, %rd7269;  prmt.b32 oh, oh, 0, 0x0123;  prmt.b32 ol, ol, 0, 0x0123;  mov.b64 %rd7269, {ol,oh};}
	// end inline asm
$L__tmp1793:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:455   return bswap_64( state[0] ) <= d_target;
	.loc	1 455 10, function_name $L__info_string0, inlined_at 1 475 7
	ld.const.u64 	%rd7291, [d_target];
	setp.gt.u64 	%p1, %rd7269, %rd7291;
$L__tmp1794:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:475   if( keccak(nonce, thread, passingMid, passingOptimizations) )
	.loc	1 475 7
	@%p1 bra 	$L__BB0_2;

	.loc	1 0 7
	ld.param.u64 	%rd7293, [_Z8gpu_minePyy_param_0];
	cvta.to.global.u64 	%rd7292, %rd7293;
$L__tmp1795:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:477     *solution = nonce;
	.loc	1 477 5
	st.global.u64 	[%rd7292], %rd94;
$L__tmp1796:

$L__BB0_2:

//D:\0xbitcoinminer\miner\cpp\hybridminer\cuda_sha3.cu:480 }
	.loc	1 480 1
	ret;
$L__tmp1797:
$L__func_end0:

}
	.file	1 "D:\\0xbitcoinminer\\miner\\cpp\\hybridminer\\cuda_sha3.cu"
	.section	.debug_str
	{
$L__info_string0:
.b8 95,90,54,107,101,99,99,97,107,121,106,80,121,80,98,0
$L__info_string1:
.b8 95,90,57,82,79,84,82,54,52,97,115,109,121,106,0
$L__info_string2:
.b8 95,90,57,82,79,84,76,54,52,97,115,109,121,106,0
$L__info_string3:
.b8 95,90,57,108,111,112,51,95,48,120,68,50,121,121,121,0
$L__info_string4:
.b8 95,90,56,82,79,84,76,98,121,49,54,121,0
$L__info_string5:
.b8 95,90,55,82,79,84,82,98,121,49,121,0
$L__info_string6:
.b8 95,90,52,120,111,114,53,121,121,121,121,121,0
$L__info_string7:
.b8 95,90,52,120,111,114,51,121,121,121,0
$L__info_string8:
.b8 95,90,55,82,79,84,76,98,121,56,121,0
$L__info_string9:
.b8 95,90,55,82,79,84,82,98,121,56,121,0
$L__info_string10:
.b8 95,90,49,48,82,79,84,82,102,114,111,109,51,50,121,106,0
$L__info_string11:
.b8 95,90,49,48,82,79,84,76,102,114,111,109,51,50,121,106,0
$L__info_string12:
.b8 95,90,55,82,79,84,76,98,121,49,121,0
$L__info_string13:
.b8 95,90,56,98,115,119,97,112,95,54,52,121,0

	}
